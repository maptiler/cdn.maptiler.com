import{llToTile as W,llToTilePx as _}from"web-merc-projection";function q(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class b{constructor(){this._apiKey="",this._fetch=q()}set apiKey(e){this._apiKey=e}get apiKey(){return this._apiKey}set fetch(e){this._fetch=e}get fetch(){return this._fetch}}const m=new b,v={AUTO:"auto",ALBANIAN:"sq",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HUNGARIAN:"hu",ICELANDIC:"is",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALTESE:"mt",NORWEGIAN:"no",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},Z=new Set(Object.values(v));function Y(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const t=Array.from(new Set(navigator.languages.map(e=>e.split("-")[0]))).filter(e=>Z.has(e));return t.length?t[0]:v.ENGLISH}async function f(t,e={}){if(m.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 please specify the fetch function with config.fetch");if(new URL(t).searchParams.get("key").trim()==="")throw new Error("The MapTiler Cloud API key is missing. Set it in `config.apiKey` or get one for free at https://maptiler.com");return m.fetch(t,e)}const h={maptilerApiURL:"https://api.maptiler.com/",mapStyle:"streets-v2"};Object.freeze(h);class u extends Error{constructor(e,n=""){super(`Call to enpoint ${e.url} failed with the status code ${e.status}. ${n}`),this.res=e}}const R={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function K(t,e){if(e.language==null)return;const n=Array.from(new Set((Array.isArray(e.language)?e.language:[e.language]).map(i=>i===v.AUTO?Y():i))).join(",");t.set("language",n)}function C(t,e){t.set("key",e.apiKey??m.apiKey),e.limit!=null&&t.set("limit",String(e.limit)),e.types!=null&&t.set("types",e.types.join(",")),K(t,e)}function O(t,e){C(t,e),e.bbox!=null&&t.set("bbox",e.bbox.join(",")),e.proximity!=null&&t.set("proximity",e.proximity.join(",")),e.country!=null&&t.set("country",e.country.join(",")),e.fuzzyMatch!=null&&t.set("fuzzyMatch",e.fuzzyMatch?"true":"false"),e.autocomplete!=null&&t.set("autocomplete",e.autocomplete?"true":"false")}async function J(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The query must be a non-empty string");const n=new URL(`geocoding/${encodeURIComponent(t)}.json`,h.maptilerApiURL),{searchParams:i}=n;O(i,e);const a=n.toString(),r=await f(a);if(!r.ok)throw new u(r,R[r.status]??"");return await r.json()}async function Q(t,e={}){if(!Array.isArray(t)||t.length<2)throw new Error("The position must be an array of form [lng, lat].");const n=new URL(`geocoding/${t[0]},${t[1]}.json`,h.maptilerApiURL);C(n.searchParams,e);const i=n.toString(),a=await f(i);if(!a.ok)throw new u(a,R[a.status]??"");return await a.json()}async function X(t,e={}){const n=new URL(`geocoding/${t}.json`,h.maptilerApiURL);n.searchParams.set("key",e.apiKey??m.apiKey),K(n.searchParams,e);const i=n.toString(),a=await f(i);if(!a.ok)throw new u(a,R[a.status]??"");return await a.json()}async function tt(t,e={}){if(!t.length)return[];const n=t.map(c=>encodeURIComponent(c)).join(";"),i=new URL(`geocoding/${n}.json`,h.maptilerApiURL),{searchParams:a}=i;O(a,e);const r=i.toString(),s=await f(r);if(!s.ok)throw new u(s,R[s.status]??"");const o=await s.json();return t.length===1?[o]:o}const et={forward:J,reverse:Q,byId:X,batch:tt,language:v},j={403:"Key is missing, invalid or restricted"};async function nt(t={}){const e=new URL("geolocation/ip.json",h.maptilerApiURL);e.searchParams.set("key",t.apiKey??m.apiKey);const n=e.toString(),i=await f(n);if(!i.ok)throw new u(i,i.status in j?j[i.status]:"");return await i.json()}const it={info:nt},L={403:"Key is missing, invalid or restricted"};async function at(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The query must be a non-empty string");const n=new URL(`coordinates/search/${t}.json`,h.maptilerApiURL);n.searchParams.set("key",e.apiKey??m.apiKey),"limit"in e&&n.searchParams.set("limit",e.limit.toString()),"transformations"in e&&n.searchParams.set("transformations",e.transformations.toString()),"exports"in e&&n.searchParams.set("exports",e.exports.toString());const i=n.toString(),a=await f(i);if(!a.ok)throw new u(a,a.status in L?L[a.status]:"");return await a.json()}async function rt(t,e={}){const n=(Array.isArray(t[0])?t:[t]).map(s=>`${s[0]},${s[1]}`).join(";"),i=new URL(`coordinates/transform/${n}.json`,h.maptilerApiURL);i.searchParams.set("key",e.apiKey??m.apiKey),"sourceCrs"in e&&i.searchParams.set("s_srs",e.sourceCrs.toString()),"targetCrs"in e&&i.searchParams.set("t_srs",e.targetCrs.toString()),"operations"in e&&i.searchParams.set("ops",(Array.isArray(e.operations)?e.operations:[e.operations]).join("|"));const a=i.toString(),r=await f(a);if(!r.ok)throw new u(r,r.status in L?L[r.status]:"");return await r.json()}const ot={search:at,transform:rt},M={403:"Key is missing, invalid or restricted"};async function st(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The data ID must be a non-empty string");const n=new URL(`data/${encodeURIComponent(t)}/features.json`,h.maptilerApiURL);n.searchParams.set("key",e.apiKey??m.apiKey);const i=n.toString(),a=await f(i);if(!a.ok)throw new u(a,a.status in M?M[a.status]:"");return await a.json()}const ct={get:st};function H(t){const e=/^maptiler:\/\/(.*)/;let n;const i=t.trim();let a;return i.startsWith("http://")||i.startsWith("https://")?a=i:(n=e.exec(i))!==null?a=`https://api.maptiler.com/maps/${n[1]}/style.json`:a=`https://api.maptiler.com/maps/${i}/style.json`,a}class U{constructor(e,n,i,a,r,s){this.name=e,this.variantType=n,this.id=i,this.referenceStyle=a,this.description=r,this.imageURL=s}getName(){return this.name}getFullName(){return`${this.referenceStyle.getName()} ${this.name}`}getType(){return this.variantType}getId(){return this.id}getDescription(){return this.description}getReferenceStyle(){return this.referenceStyle}hasVariant(e){return this.referenceStyle.hasVariant(e)}getVariant(e){return this.referenceStyle.getVariant(e)}getVariants(){return this.referenceStyle.getVariants().filter(e=>e!==this)}getImageURL(){return this.imageURL}getExpandedStyleURL(){return H(this.getId())}}class D{constructor(e,n){this.name=e,this.id=n,this.variants={},this.orderedVariants=[]}getName(){return this.name}getId(){return this.id}addVariant(e){this.variants[e.getType()]=e,this.orderedVariants.push(e)}hasVariant(e){return e in this.variants}getVariant(e){return e in this.variants?this.variants[e]:this.orderedVariants[0]}getVariants(){return Object.values(this.variants)}getDefaultVariant(){return this.orderedVariants[0]}}const I=[{referenceStyleID:"STREETS",name:"Streets",description:"",variants:[{id:"streets-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"streets-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"streets-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"streets-v2-night",name:"Night",variantType:"NIGHT",description:"",imageURL:""},{id:"streets-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OUTDOOR",name:"Outdoor",description:"",variants:[{id:"outdoor-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"outdoor-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"WINTER",name:"Winter",description:"",variants:[{id:"winter-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"winter-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"SATELLITE",name:"Satellite",description:"",variants:[{id:"satellite",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"HYBRID",name:"Hybrid",description:"",variants:[{id:"hybrid",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"BASIC",name:"Basic",description:"",variants:[{id:"basic-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"basic-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"basic-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BRIGHT",name:"Bright",description:"",variants:[{id:"bright-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"bright-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"bright-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"bright-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OPENSTREETMAP",name:"OpenStreetMap",description:"",variants:[{id:"openstreetmap",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"TOPO",name:"Topo",description:"",variants:[{id:"topo-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"topo-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"topo-v2-shiny",name:"Shiny",variantType:"SHINY",description:"",imageURL:""},{id:"topo-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""},{id:"topo-v2-topographique",name:"Topographique",variantType:"TOPOGRAPHIQUE",description:"",imageURL:""}]},{referenceStyleID:"VOYAGER",name:"Voyager",description:"",variants:[{id:"voyager-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"voyager-v2-darkmatter",name:"Darkmatter",variantType:"DARK",description:"",imageURL:""},{id:"voyager-v2-positron",name:"Positron",variantType:"LIGHT",description:"",imageURL:""},{id:"voyager-v2-vintage",name:"Vintage",variantType:"VINTAGE",description:"",imageURL:""}]},{referenceStyleID:"TONER",name:"Toner",description:"",variants:[{id:"toner-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"toner-v2-background",name:"Background",variantType:"BACKGROUND",description:"",imageURL:""},{id:"toner-v2-lite",name:"Lite",variantType:"LITE",description:"",imageURL:""},{id:"toner-v2-lines",name:"Lines",variantType:"LINES",description:"",imageURL:""}]},{referenceStyleID:"DATAVIZ",name:"Dataviz",description:"",variants:[{id:"dataviz",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"dataviz-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"dataviz-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BACKDROP",name:"Backdrop",description:"",variants:[{id:"backdrop",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"backdrop-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"backdrop-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"OCEAN",name:"Ocean",description:"",variants:[{id:"ocean",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]}];function lt(t){return new Proxy(t,{get(e,n,i){return e.hasVariant(n)?e.getVariant(n):n.toString().toUpperCase()===n?t.getDefaultVariant():Reflect.get(e,n,i)}})}function pt(){const t={};for(let e=0;e<I.length;e+=1){const n=I[e],i=lt(new D(n.name,n.referenceStyleID));for(let a=0;a<n.variants.length;a+=1){const r=n.variants[a],s=new U(r.name,r.variantType,r.id,i,r.description,r.imageURL);i.addVariant(s)}t[n.referenceStyleID]=i}return t}function E(t){if(!t)return x[I[0].referenceStyleID].getDefaultVariant().getId();if(typeof t=="string"||t instanceof String)return t.trim().toLowerCase();if(t instanceof U)return t.getId();if(t instanceof D)return t.getDefaultVariant().getId()}const x=pt();function mt(t,e,n){let i=e[0],a=e[1],r=n[0]-i,s=n[1]-a;if(r!==0||s!==0){const o=((t[0]-i)*r+(t[1]-a)*s)/(r*r+s*s);o>1?(i=n[0],a=n[1]):o>0&&(i+=r*o,a+=s*o)}return r=t[0]-i,s=t[1]-a,r*r+s*s}function k(t,e,n,i,a){let r=i,s;for(let o=e+1;o<n;o++){const c=mt(t[o],t[e],t[n]);c>r&&(s=o,r=c)}r>i&&(s-e>1&&k(t,e,s,i,a),a.push(t[s]),n-s>1&&k(t,s,n,i,a))}function ht(t,e){const n=t.length-1,i=[t[0]];return k(t,0,n,e,i),i.push(t[n]),i}function dt(t,e){if(t.length<=2)return t;const n=e!==void 0?e*e:1;return ht(t,n)}function w(t,e=!0){let n=`${t[0]},${t[1]}`;return t.length===3&&e&&(n+=`,${t[2]}`),n}function $(t,e=3e3){let n=t.map(r=>r.join(",")).join("|"),i=5e-6;const a=1e-5;for(;n.length>e;)n=dt(t,i).map(r=>`${r[0]},${r[1]}`).join("|"),i+=a;return n}function ut(t,e,n={}){const i=E(n.style),a=n.hiDPI?"@2x":"",r=n.format??"png";let s=~~(n.width??1024),o=~~(n.height??1024);n.hiDPI&&(s=~~(s/2),o=~~(o/2));const c=new URL(`maps/${encodeURIComponent(i)}/static/${t[0]},${t[1]},${e}/${s}x${o}${a}.${r}`,h.maptilerApiURL);if("attribution"in n&&c.searchParams.set("attribution",n.attribution.toString()),"markers"in n){let l="";const p="markerIcon"in n;p&&(l+=`icon:${n.markerIcon}|`),p&&"markerAnchor"in n&&(l+=`anchor:${n.markerAnchor}|`),p&&n.hiDPI&&(l+="scale:2|");const d=Array.isArray(n.markers[0])?n.markers:[n.markers];l+=d.map(A=>w(A,!p)).join("|"),c.searchParams.set("markers",l)}if("path"in n){let l="";if(l+=`fill:${n.pathFillColor??"none"}|`,"pathStrokeColor"in n&&(l+=`stroke:${n.pathStrokeColor}|`),"pathWidth"in n){const p=n.pathWidth/(n.hiDPI?2:1);l+=`width:${p.toString()}|`}l+=$(n.path),c.searchParams.set("path",l)}return c.searchParams.set("key",n.apiKey??m.apiKey),c.toString()}function gt(t,e={}){const n=E(e.style),i=e.hiDPI?"@2x":"",a=e.format??"png";let r=~~(e.width??1024),s=~~(e.height??1024);e.hiDPI&&(r=~~(r/2),s=~~(s/2));const o=new URL(`maps/${encodeURIComponent(n)}/static/${t[0]},${t[1]},${t[2]},${t[3]}/${r}x${s}${i}.${a}`,h.maptilerApiURL);if("attribution"in e&&o.searchParams.set("attribution",e.attribution.toString()),"padding"in e&&o.searchParams.set("padding",e.padding.toString()),"markers"in e){let c="";const l="markerIcon"in e;l&&(c+=`icon:${e.markerIcon}|`),l&&"markerAnchor"in e&&(c+=`anchor:${e.markerAnchor}|`),l&&e.hiDPI&&(c+="scale:2|");const p=Array.isArray(e.markers[0])?e.markers:[e.markers];c+=p.map(d=>w(d,!l)).join("|"),o.searchParams.set("markers",c)}if("path"in e){let c="";if(c+=`fill:${e.pathFillColor??"none"}|`,"pathStrokeColor"in e&&(c+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e){const l=e.pathWidth/(e.hiDPI?2:1);c+=`width:${l.toString()}|`}c+=$(e.path),o.searchParams.set("path",c)}return o.searchParams.set("key",e.apiKey??m.apiKey),o.toString()}function ft(t={}){if(!("markers"in t)&&!("path"in t))throw new Error("Automatic static maps require markers and/or path to be created.");const e=E(t.style),n=t.hiDPI?"@2x":"",i=t.format??"png";let a=~~(t.width??1024),r=~~(t.height??1024);t.hiDPI&&(a=~~(a/2),r=~~(r/2));const s=new URL(`maps/${encodeURIComponent(e)}/static/auto/${a}x${r}${n}.${i}`,h.maptilerApiURL);if("attribution"in t&&s.searchParams.set("attribution",t.attribution.toString()),"padding"in t&&s.searchParams.set("padding",t.padding.toString()),"markers"in t){let o="";const c="markerIcon"in t;c&&(o+=`icon:${t.markerIcon}|`),c&&"markerAnchor"in t&&(o+=`anchor:${t.markerAnchor}|`),c&&t.hiDPI&&(o+="scale:2|");const l=Array.isArray(t.markers[0])?t.markers:[t.markers];o+=l.map(p=>w(p,!c)).join("|"),s.searchParams.set("markers",o)}if("path"in t){let o="";if(o+=`fill:${t.pathFillColor??"none"}|`,"pathStrokeColor"in t&&(o+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t){const c=t.pathWidth/(t.hiDPI?2:1);o+=`width:${c.toString()}|`}o+=$(t.path),s.searchParams.set("path",o)}return s.searchParams.set("key",t.apiKey??m.apiKey),s.toString()}const yt={centered:ut,bounded:gt,automatic:ft},S=63710088e-1;function g(t){return t*3.28084}function y(t){return t%360*Math.PI/180}function vt(t){return t*180/Math.PI}function V(t,e,n=512){return Math.cos(t*Math.PI/180)*2*Math.PI*6378137/(n*2**e)*3}function G(t,e,n){return((1<<n)*e+t)*32+n}function At(t){const e="geometry"in t?t.geometry:t;return e.type==="MultiPolygon"?F(e.coordinates):P(e.coordinates)}function F(t){const e="coordinates"in t?t.coordinates:t;let n=0;for(const i of e)n+=P(i);return n}function P(t){const e="coordinates"in t?t.coordinates:t;let n=0;for(const i of e)n+=Rt(i);return n}function Rt(t){let e,n,i,a,r,s,o,c=0;const l=t.length;if(l>2){for(o=0;o<l;o++)o===l-2?(a=l-2,r=l-1,s=0):o===l-1?(a=l-1,r=0,s=1):(a=o,r=o+1,s=o+2),e=t[a],n=t[r],i=t[s],c+=(y(i[0])-y(e[0]))*Math.sin(y(n[1]));c=c*S*S/2}return Math.abs(c)}function Lt(t){const e="geometry"in t?t.geometry.coordinates:"coordinates"in t?t.coordinates:t;let n=0,i;for(const a of e)i!==void 0&&(n+=T(i,a)),i=a;return n}function T(t,e){const{pow:n,sin:i,cos:a,sqrt:r,atan2:s}=Math,o=y(e[1]-t[1]),c=y(e[0]-t[0]),l=y(t[1]),p=y(e[1]),d=n(i(o/2),2)+n(i(c/2),2)*a(l)*a(p);return 2*s(r(d),r(1-d))*S}function It(t,e,n){const i=new Map,a=[],r=[],s=V(t[0][1],e,n),o=St(t,s);for(const c of o){const l=c,[p,d]=W(l,e,n),A=G(p,d,e),N={id:A,x:p,y:d,z:e};i.set(A,N),r.push({coordinate:l,tile:N})}for(const c of i.values())a.push(c);return{coords:r,tiles:a}}function St(t,e){const n=[];let i;for(const a of t){if(i!==void 0){const r=T(i,a),s=Math.ceil(r/e);for(let o=0;o<=s-1;o++){const c=[i[0]+(a[0]-i[0])*(o/s),i[1]+(a[1]-i[1])*(o/s)];n.push(c)}}else n.push(a);i=a}return n}function Tt(t,e,n,i,a=B){const{channels:r,image:s}=i;let[o,c]=_(t,e,n);o=z(o,n),c=z(c,n);const l=(c*n+o)*r;return a(s[l],s[l+1],s[l+2],r===4?s[l+3]:0)}function z(t,e){return Math.max(0,Math.min(e,Math.floor(t*e)))}function B(t,e,n){return-1e4+(t*256*256+e*256+n)*.1}async function Ut(t,e){const n="geometry"in t?t.geometry.coordinates:t.coordinates,{coords:i,tiles:a}=It(n,e.zoom??13,e.tileSize??512),r=await Dt(a,e.tileRequest);let s=Et(i,r,e.tileSize??512,e.elevationParser);e.smooth===!0&&(s=wt(s));let o=kt(s);return e.metric==="ft"&&(o=$t(o)),o}async function Dt(t,e){const n=new Map,i=[];for(const a of t)i.push(e(a.x,a.y,a.z).then(r=>(n.set(a.id,r),r)).catch(r=>{console.error(r)}));return await Promise.allSettled(i),n}function Et(t,e,n,i){const a=[];let r=0,s;for(const{tile:o,coordinate:c}of t){const l=e.get(o.id);if(l===void 0)throw new Error(`Missing tile ${o.id} (${o.x}-${o.y}-${o.z})`);const p=Tt(c,[o.z,o.x,o.y],n,l,i);a.push({distance:r,elevation:p,coordinate:c,tile:o}),s!==void 0&&(r+=T(s,c)),s=c}return a}function kt(t){let e=1/0,n=-1/0,i=0;for(const a of t)a.elevation<e&&(e=a.elevation),a.elevation>n&&(n=a.elevation),i+=a.elevation;return{distance:t[t.length-1].distance,minElevation:e,maxElevation:n,avgElevation:i/t.length,startElevation:t[0].elevation,endElevation:t[t.length-1].elevation,points:t}}function wt(t){const e=[];let n;for(let i=0;i<t.length;i++){const a=t[i],r=t[i+1]??t[i];if(n===void 0)e.push(a);else{const s={distance:a.distance,elevation:(n.elevation+a.elevation+r.elevation)/3,coordinate:a.coordinate,tile:a.tile};e.push(s)}n=a}return e}function $t(t){return{distance:g(t.distance),minElevation:g(t.minElevation),maxElevation:g(t.maxElevation),avgElevation:g(t.avgElevation),startElevation:g(t.startElevation),endElevation:g(t.endElevation),points:t.points.map(({distance:e,elevation:n,coordinate:i,tile:a})=>({distance:g(e),elevation:g(n),coordinate:i,tile:a}))}}export{b as ClientConfig,v as LanguageGeocoding,x as MapStyle,U as MapStyleVariant,D as ReferenceMapStyle,u as ServiceError,At as area,m as config,ot as coordinates,ct as data,B as defaultElevationParser,y as degToRad,S as earthRadius,H as expandMapStyle,et as geocoding,it as geolocation,V as getZoomLevelResolution,Lt as lineDistance,g as mToFt,I as mapStylePresetList,F as multiPolygonArea,T as pointDistance,P as polygonArea,Ut as profileLineString,vt as radToDeg,yt as staticMaps,G as xyzToTileID};
