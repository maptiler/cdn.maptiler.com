(function(p,R){typeof exports=="object"&&typeof module<"u"?R(exports):typeof define=="function"&&define.amd?define(["exports"],R):(p=typeof globalThis<"u"?globalThis:p||self,R(p.maptilerClient={}))})(this,function(p){"use strict";function R(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class j{constructor(){this._apiKey="",this._fetch=R()}set apiKey(e){this._apiKey=e}get apiKey(){return this._apiKey}set fetch(e){this._fetch=e}get fetch(){return this._fetch}}const u=new j,L={AUTO:"auto",ALBANIAN:"sq",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HUNGARIAN:"hu",ICELANDIC:"is",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALTESE:"mt",NORWEGIAN:"no",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},nt=new Set(Object.values(L));function it(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const t=Array.from(new Set(navigator.languages.map(e=>e.split("-")[0]))).filter(e=>nt.has(e));return t.length?t[0]:L.ENGLISH}async function v(t,e={}){if(u.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 please specify the fetch function with config.fetch");if(new URL(t).searchParams.get("key").trim()==="")throw new Error("The MapTiler Cloud API key is missing. Set it in `config.apiKey` or get one for free at https://maptiler.com");return u.fetch(t,e)}const d={maptilerApiURL:"https://api.maptiler.com/",mapStyle:"streets-v2"};Object.freeze(d);class f extends Error{constructor(e,n=""){super(`Call to enpoint ${e.url} failed with the status code ${e.status}. ${n}`),this.res=e}}const D={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function H(t,e){if(e.language==null)return;const n=Array.from(new Set((Array.isArray(e.language)?e.language:[e.language]).map(i=>i===L.AUTO?it():i))).join(",");t.set("language",n)}function V(t,e){t.set("key",e.apiKey??u.apiKey),e.limit!=null&&t.set("limit",String(e.limit)),e.types!=null&&t.set("types",e.types.join(",")),H(t,e)}function G(t,e){V(t,e),e.bbox!=null&&t.set("bbox",e.bbox.join(",")),e.proximity!=null&&t.set("proximity",e.proximity.join(",")),e.country!=null&&t.set("country",e.country.join(",")),e.fuzzyMatch!=null&&t.set("fuzzyMatch",e.fuzzyMatch?"true":"false"),e.autocomplete!=null&&t.set("autocomplete",e.autocomplete?"true":"false")}async function at(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The query must be a non-empty string");const n=new URL(`geocoding/${encodeURIComponent(t)}.json`,d.maptilerApiURL),{searchParams:i}=n;G(i,e);const a=n.toString(),r=await v(a);if(!r.ok)throw new f(r,D[r.status]??"");return await r.json()}async function rt(t,e={}){if(!Array.isArray(t)||t.length<2)throw new Error("The position must be an array of form [lng, lat].");const n=new URL(`geocoding/${t[0]},${t[1]}.json`,d.maptilerApiURL);V(n.searchParams,e);const i=n.toString(),a=await v(i);if(!a.ok)throw new f(a,D[a.status]??"");return await a.json()}async function ot(t,e={}){const n=new URL(`geocoding/${t}.json`,d.maptilerApiURL);n.searchParams.set("key",e.apiKey??u.apiKey),H(n.searchParams,e);const i=n.toString(),a=await v(i);if(!a.ok)throw new f(a,D[a.status]??"");return await a.json()}async function st(t,e={}){if(!t.length)return[];const n=t.map(c=>encodeURIComponent(c)).join(";"),i=new URL(`geocoding/${n}.json`,d.maptilerApiURL),{searchParams:a}=i;G(a,e);const r=i.toString(),o=await v(r);if(!o.ok)throw new f(o,D[o.status]??"");const s=await o.json();return t.length===1?[s]:s}const ct={forward:at,reverse:rt,byId:ot,batch:st,language:L},F={403:"Key is missing, invalid or restricted"};async function lt(t={}){const e=new URL("geolocation/ip.json",d.maptilerApiURL);e.searchParams.set("key",t.apiKey??u.apiKey);const n=e.toString(),i=await v(n);if(!i.ok)throw new f(i,i.status in F?F[i.status]:"");return await i.json()}const pt={info:lt},E={403:"Key is missing, invalid or restricted"};async function mt(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The query must be a non-empty string");const n=new URL(`coordinates/search/${t}.json`,d.maptilerApiURL);n.searchParams.set("key",e.apiKey??u.apiKey),"limit"in e&&n.searchParams.set("limit",e.limit.toString()),"transformations"in e&&n.searchParams.set("transformations",e.transformations.toString()),"exports"in e&&n.searchParams.set("exports",e.exports.toString());const i=n.toString(),a=await v(i);if(!a.ok)throw new f(a,a.status in E?E[a.status]:"");return await a.json()}async function ut(t,e={}){const n=(Array.isArray(t[0])?t:[t]).map(o=>`${o[0]},${o[1]}`).join(";"),i=new URL(`coordinates/transform/${n}.json`,d.maptilerApiURL);i.searchParams.set("key",e.apiKey??u.apiKey),"sourceCrs"in e&&i.searchParams.set("s_srs",e.sourceCrs.toString()),"targetCrs"in e&&i.searchParams.set("t_srs",e.targetCrs.toString()),"operations"in e&&i.searchParams.set("ops",(Array.isArray(e.operations)?e.operations:[e.operations]).join("|"));const a=i.toString(),r=await v(a);if(!r.ok)throw new f(r,r.status in E?E[r.status]:"");return await r.json()}const dt={search:mt,transform:ut},z={403:"Key is missing, invalid or restricted"};async function ht(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The data ID must be a non-empty string");const n=new URL(`data/${encodeURIComponent(t)}/features.json`,d.maptilerApiURL);n.searchParams.set("key",e.apiKey??u.apiKey);const i=n.toString(),a=await v(i);if(!a.ok)throw new f(a,a.status in z?z[a.status]:"");return await a.json()}const ft={get:ht};function B(t){const e=/^maptiler:\/\/(.*)/;let n;const i=t.trim();let a;return i.startsWith("http://")||i.startsWith("https://")?a=i:(n=e.exec(i))!==null?a=`https://api.maptiler.com/maps/${n[1]}/style.json`:a=`https://api.maptiler.com/maps/${i}/style.json`,a}class P{constructor(e,n,i,a,r,o){this.name=e,this.variantType=n,this.id=i,this.referenceStyle=a,this.description=r,this.imageURL=o}getName(){return this.name}getFullName(){return`${this.referenceStyle.getName()} ${this.name}`}getType(){return this.variantType}getId(){return this.id}getDescription(){return this.description}getReferenceStyle(){return this.referenceStyle}hasVariant(e){return this.referenceStyle.hasVariant(e)}getVariant(e){return this.referenceStyle.getVariant(e)}getVariants(){return this.referenceStyle.getVariants().filter(e=>e!==this)}getImageURL(){return this.imageURL}getExpandedStyleURL(){return B(this.getId())}}class N{constructor(e,n){this.name=e,this.id=n,this.variants={},this.orderedVariants=[]}getName(){return this.name}getId(){return this.id}addVariant(e){this.variants[e.getType()]=e,this.orderedVariants.push(e)}hasVariant(e){return e in this.variants}getVariant(e){return e in this.variants?this.variants[e]:this.orderedVariants[0]}getVariants(){return Object.values(this.variants)}getDefaultVariant(){return this.orderedVariants[0]}}const $=[{referenceStyleID:"STREETS",name:"Streets",description:"",variants:[{id:"streets-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"streets-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"streets-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"streets-v2-night",name:"Night",variantType:"NIGHT",description:"",imageURL:""},{id:"streets-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OUTDOOR",name:"Outdoor",description:"",variants:[{id:"outdoor-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"outdoor-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"WINTER",name:"Winter",description:"",variants:[{id:"winter-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"winter-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"SATELLITE",name:"Satellite",description:"",variants:[{id:"satellite",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"HYBRID",name:"Hybrid",description:"",variants:[{id:"hybrid",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"BASIC",name:"Basic",description:"",variants:[{id:"basic-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"basic-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"basic-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BRIGHT",name:"Bright",description:"",variants:[{id:"bright-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"bright-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"bright-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"bright-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OPENSTREETMAP",name:"OpenStreetMap",description:"",variants:[{id:"openstreetmap",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"TOPO",name:"Topo",description:"",variants:[{id:"topo-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"topo-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"topo-v2-shiny",name:"Shiny",variantType:"SHINY",description:"",imageURL:""},{id:"topo-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""},{id:"topo-v2-topographique",name:"Topographique",variantType:"TOPOGRAPHIQUE",description:"",imageURL:""}]},{referenceStyleID:"VOYAGER",name:"Voyager",description:"",variants:[{id:"voyager-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"voyager-v2-darkmatter",name:"Darkmatter",variantType:"DARK",description:"",imageURL:""},{id:"voyager-v2-positron",name:"Positron",variantType:"LIGHT",description:"",imageURL:""},{id:"voyager-v2-vintage",name:"Vintage",variantType:"VINTAGE",description:"",imageURL:""}]},{referenceStyleID:"TONER",name:"Toner",description:"",variants:[{id:"toner-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"toner-v2-background",name:"Background",variantType:"BACKGROUND",description:"",imageURL:""},{id:"toner-v2-lite",name:"Lite",variantType:"LITE",description:"",imageURL:""},{id:"toner-v2-lines",name:"Lines",variantType:"LINES",description:"",imageURL:""}]},{referenceStyleID:"DATAVIZ",name:"Dataviz",description:"",variants:[{id:"dataviz",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"dataviz-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"dataviz-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BACKDROP",name:"Backdrop",description:"",variants:[{id:"backdrop",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"backdrop-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"backdrop-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"OCEAN",name:"Ocean",description:"",variants:[{id:"ocean",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]}];function gt(t){return new Proxy(t,{get(e,n,i){return e.hasVariant(n)?e.getVariant(n):n.toString().toUpperCase()===n?t.getDefaultVariant():Reflect.get(e,n,i)}})}function yt(){const t={};for(let e=0;e<$.length;e+=1){const n=$[e],i=gt(new N(n.name,n.referenceStyleID));for(let a=0;a<n.variants.length;a+=1){const r=n.variants[a],o=new P(r.name,r.variantType,r.id,i,r.description,r.imageURL);i.addVariant(o)}t[n.referenceStyleID]=i}return t}function b(t){if(!t)return W[$[0].referenceStyleID].getDefaultVariant().getId();if(typeof t=="string"||t instanceof String)return t.trim().toLowerCase();if(t instanceof P)return t.getId();if(t instanceof N)return t.getDefaultVariant().getId()}const W=yt();function vt(t,e,n){let i=e[0],a=e[1],r=n[0]-i,o=n[1]-a;if(r!==0||o!==0){const s=((t[0]-i)*r+(t[1]-a)*o)/(r*r+o*o);s>1?(i=n[0],a=n[1]):s>0&&(i+=r*s,a+=o*s)}return r=t[0]-i,o=t[1]-a,r*r+o*o}function K(t,e,n,i,a){let r=i,o;for(let s=e+1;s<n;s++){const c=vt(t[s],t[e],t[n]);c>r&&(o=s,r=c)}r>i&&(o-e>1&&K(t,e,o,i,a),a.push(t[o]),n-o>1&&K(t,o,n,i,a))}function At(t,e){const n=t.length-1,i=[t[0]];return K(t,0,n,e,i),i.push(t[n]),i}function Rt(t,e){if(t.length<=2)return t;const n=e!==void 0?e*e:1;return At(t,n)}function C(t,e=!0){let n=`${t[0]},${t[1]}`;return t.length===3&&e&&(n+=`,${t[2]}`),n}function M(t,e=3e3){let n=t.map(r=>r.join(",")).join("|"),i=5e-6;const a=1e-5;for(;n.length>e;)n=Rt(t,i).map(r=>`${r[0]},${r[1]}`).join("|"),i+=a;return n}function Lt(t,e,n={}){const i=b(n.style),a=n.hiDPI?"@2x":"",r=n.format??"png";let o=~~(n.width??1024),s=~~(n.height??1024);n.hiDPI&&(o=~~(o/2),s=~~(s/2));const c=new URL(`maps/${encodeURIComponent(i)}/static/${t[0]},${t[1]},${e}/${o}x${s}${a}.${r}`,d.maptilerApiURL);if("attribution"in n&&c.searchParams.set("attribution",n.attribution.toString()),"markers"in n){let l="";const m="markerIcon"in n;m&&(l+=`icon:${n.markerIcon}|`),m&&"markerAnchor"in n&&(l+=`anchor:${n.markerAnchor}|`),m&&n.hiDPI&&(l+="scale:2|");const h=Array.isArray(n.markers[0])?n.markers:[n.markers];l+=h.map(y=>C(y,!m)).join("|"),c.searchParams.set("markers",l)}if("path"in n){let l="";if(l+=`fill:${n.pathFillColor??"none"}|`,"pathStrokeColor"in n&&(l+=`stroke:${n.pathStrokeColor}|`),"pathWidth"in n){const m=n.pathWidth/(n.hiDPI?2:1);l+=`width:${m.toString()}|`}l+=M(n.path),c.searchParams.set("path",l)}return c.searchParams.set("key",n.apiKey??u.apiKey),c.toString()}function It(t,e={}){const n=b(e.style),i=e.hiDPI?"@2x":"",a=e.format??"png";let r=~~(e.width??1024),o=~~(e.height??1024);e.hiDPI&&(r=~~(r/2),o=~~(o/2));const s=new URL(`maps/${encodeURIComponent(n)}/static/${t[0]},${t[1]},${t[2]},${t[3]}/${r}x${o}${i}.${a}`,d.maptilerApiURL);if("attribution"in e&&s.searchParams.set("attribution",e.attribution.toString()),"padding"in e&&s.searchParams.set("padding",e.padding.toString()),"markers"in e){let c="";const l="markerIcon"in e;l&&(c+=`icon:${e.markerIcon}|`),l&&"markerAnchor"in e&&(c+=`anchor:${e.markerAnchor}|`),l&&e.hiDPI&&(c+="scale:2|");const m=Array.isArray(e.markers[0])?e.markers:[e.markers];c+=m.map(h=>C(h,!l)).join("|"),s.searchParams.set("markers",c)}if("path"in e){let c="";if(c+=`fill:${e.pathFillColor??"none"}|`,"pathStrokeColor"in e&&(c+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e){const l=e.pathWidth/(e.hiDPI?2:1);c+=`width:${l.toString()}|`}c+=M(e.path),s.searchParams.set("path",c)}return s.searchParams.set("key",e.apiKey??u.apiKey),s.toString()}function St(t={}){if(!("markers"in t)&&!("path"in t))throw new Error("Automatic static maps require markers and/or path to be created.");const e=b(t.style),n=t.hiDPI?"@2x":"",i=t.format??"png";let a=~~(t.width??1024),r=~~(t.height??1024);t.hiDPI&&(a=~~(a/2),r=~~(r/2));const o=new URL(`maps/${encodeURIComponent(e)}/static/auto/${a}x${r}${n}.${i}`,d.maptilerApiURL);if("attribution"in t&&o.searchParams.set("attribution",t.attribution.toString()),"padding"in t&&o.searchParams.set("padding",t.padding.toString()),"markers"in t){let s="";const c="markerIcon"in t;c&&(s+=`icon:${t.markerIcon}|`),c&&"markerAnchor"in t&&(s+=`anchor:${t.markerAnchor}|`),c&&t.hiDPI&&(s+="scale:2|");const l=Array.isArray(t.markers[0])?t.markers:[t.markers];s+=l.map(m=>C(m,!c)).join("|"),o.searchParams.set("markers",s)}if("path"in t){let s="";if(s+=`fill:${t.pathFillColor??"none"}|`,"pathStrokeColor"in t&&(s+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t){const c=t.pathWidth/(t.hiDPI?2:1);s+=`width:${c.toString()}|`}s+=M(t.path),o.searchParams.set("path",s)}return o.searchParams.set("key",t.apiKey??u.apiKey),o.toString()}const Tt={centered:Lt,bounded:It,automatic:St};function Ut(t){return t*Math.PI/180}function _(t){return t%1!==0}var I={};function Dt(t,e){if(t<0||t>30)throw Error("Invalid zoom level");return _(t)?x(t,e):(I[e]===void 0&&(I[e]={}),Array.isArray(I[e][t])||(I[e][t]=x(t,e)),I[e][t])}function x(t,e){let n=e*Math.pow(2,t);return[n/360,n/(2*Math.PI),n/2,n]}function q(t,e,n=!1,i=512){let{min:a,max:r,sin:o,log:s,round:c}=Math,[l,m,h,y]=Dt(e,i),S=n?2:1,tt=h,et=a(r(o(Ut(t[1])),-.9999),.9999),T=tt+t[0]*l,U=tt+.5*s((1+et)/(1-et))*-m;return _(e)||(T=c(T),U=c(U)),T>y*S&&(T=y*S),U>y&&(U=y),[T,U]}function Et(t,e=512){let{floor:n}=Math,i=n(t[0]/e),a=n(t[1]/e);return[i,a]}function $t(t,e,n=512){let i=q(t,e,!1,n);return Et(i,n)}function kt(t,e,n=512){let[i,a,r]=e,o=q(t,i,!1,n),s=a*n,c=r*n;return[(o[0]-s)/n,(o[1]-c)/n]}const k=63710088e-1;function g(t){return t*3.28084}function A(t){return t%360*Math.PI/180}function wt(t){return t*180/Math.PI}function Z(t,e,n=512){return Math.cos(t*Math.PI/180)*2*Math.PI*6378137/(n*2**e)*3}function Y(t,e,n){return((1<<n)*e+t)*32+n}function Pt(t){const e="geometry"in t?t.geometry:t;return e.type==="MultiPolygon"?J(e.coordinates):O(e.coordinates)}function J(t){const e="coordinates"in t?t.coordinates:t;let n=0;for(const i of e)n+=O(i);return n}function O(t){const e="coordinates"in t?t.coordinates:t;let n=0;for(const i of e)n+=Nt(i);return n}function Nt(t){let e,n,i,a,r,o,s,c=0;const l=t.length;if(l>2){for(s=0;s<l;s++)s===l-2?(a=l-2,r=l-1,o=0):s===l-1?(a=l-1,r=0,o=1):(a=s,r=s+1,o=s+2),e=t[a],n=t[r],i=t[o],c+=(A(i[0])-A(e[0]))*Math.sin(A(n[1]));c=c*k*k/2}return Math.abs(c)}function bt(t){const e="geometry"in t?t.geometry.coordinates:"coordinates"in t?t.coordinates:t;let n=0,i;for(const a of e)i!==void 0&&(n+=w(i,a)),i=a;return n}function w(t,e){const{pow:n,sin:i,cos:a,sqrt:r,atan2:o}=Math,s=A(e[1]-t[1]),c=A(e[0]-t[0]),l=A(t[1]),m=A(e[1]),h=n(i(s/2),2)+n(i(c/2),2)*a(l)*a(m);return 2*o(r(h),r(1-h))*k}function Kt(t,e,n){const i=new Map,a=[],r=[],o=Z(t[0][1],e,n),s=Ct(t,o);for(const c of s){const l=c,[m,h]=$t(l,e,n),y=Y(m,h,e),S={id:y,x:m,y:h,z:e};i.set(y,S),r.push({coordinate:l,tile:S})}for(const c of i.values())a.push(c);return{coords:r,tiles:a}}function Ct(t,e){const n=[];let i;for(const a of t){if(i!==void 0){const r=w(i,a),o=Math.ceil(r/e);for(let s=0;s<=o-1;s++){const c=[i[0]+(a[0]-i[0])*(s/o),i[1]+(a[1]-i[1])*(s/o)];n.push(c)}}else n.push(a);i=a}return n}function Mt(t,e,n,i,a=X){const{channels:r,image:o}=i;let[s,c]=kt(t,e,n);s=Q(s,n),c=Q(c,n);const l=(c*n+s)*r;return a(o[l],o[l+1],o[l+2],r===4?o[l+3]:0)}function Q(t,e){return Math.max(0,Math.min(e,Math.floor(t*e)))}function X(t,e,n){return-1e4+(t*256*256+e*256+n)*.1}async function Ot(t,e){const n="geometry"in t?t.geometry.coordinates:t.coordinates,{coords:i,tiles:a}=Kt(n,e.zoom??13,e.tileSize??512),r=await jt(a,e.tileRequest);let o=Ht(i,r,e.tileSize??512,e.elevationParser);e.smooth===!0&&(o=Gt(o));let s=Vt(o);return e.metric==="ft"&&(s=Ft(s)),s}async function jt(t,e){const n=new Map,i=[];for(const a of t)i.push(e(a.x,a.y,a.z).then(r=>(n.set(a.id,r),r)).catch(r=>{console.error(r)}));return await Promise.allSettled(i),n}function Ht(t,e,n,i){const a=[];let r=0,o;for(const{tile:s,coordinate:c}of t){const l=e.get(s.id);if(l===void 0)throw new Error(`Missing tile ${s.id} (${s.x}-${s.y}-${s.z})`);const m=Mt(c,[s.z,s.x,s.y],n,l,i);a.push({distance:r,elevation:m,coordinate:c,tile:s}),o!==void 0&&(r+=w(o,c)),o=c}return a}function Vt(t){let e=1/0,n=-1/0,i=0;for(const a of t)a.elevation<e&&(e=a.elevation),a.elevation>n&&(n=a.elevation),i+=a.elevation;return{distance:t[t.length-1].distance,minElevation:e,maxElevation:n,avgElevation:i/t.length,startElevation:t[0].elevation,endElevation:t[t.length-1].elevation,points:t}}function Gt(t){const e=[];let n;for(let i=0;i<t.length;i++){const a=t[i],r=t[i+1]??t[i];if(n===void 0)e.push(a);else{const o={distance:a.distance,elevation:(n.elevation+a.elevation+r.elevation)/3,coordinate:a.coordinate,tile:a.tile};e.push(o)}n=a}return e}function Ft(t){return{distance:g(t.distance),minElevation:g(t.minElevation),maxElevation:g(t.maxElevation),avgElevation:g(t.avgElevation),startElevation:g(t.startElevation),endElevation:g(t.endElevation),points:t.points.map(({distance:e,elevation:n,coordinate:i,tile:a})=>({distance:g(e),elevation:g(n),coordinate:i,tile:a}))}}p.ClientConfig=j,p.LanguageGeocoding=L,p.MapStyle=W,p.MapStyleVariant=P,p.ReferenceMapStyle=N,p.ServiceError=f,p.area=Pt,p.config=u,p.coordinates=dt,p.data=ft,p.defaultElevationParser=X,p.degToRad=A,p.earthRadius=k,p.expandMapStyle=B,p.geocoding=ct,p.geolocation=pt,p.getZoomLevelResolution=Z,p.lineDistance=bt,p.mToFt=g,p.mapStylePresetList=$,p.multiPolygonArea=J,p.pointDistance=w,p.polygonArea=O,p.profileLineString=Ot,p.radToDeg=wt,p.staticMaps=Tt,p.xyzToTileID=Y});
