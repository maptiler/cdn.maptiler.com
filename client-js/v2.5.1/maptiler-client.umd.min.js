(function(d,T){typeof exports=="object"&&typeof module<"u"?T(exports):typeof define=="function"&&define.amd?define(["exports"],T):(d=typeof globalThis<"u"?globalThis:d||self,T(d.maptilerClient={}))})(this,function(d){"use strict";function T(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class Q{constructor(){this._apiKey="",this._fetch=T(),this.tileCacheSize=200}set apiKey(e){this._apiKey=e}get apiKey(){return this._apiKey}set fetch(e){this._fetch=e}get fetch(){return this._fetch}}const h=new Q,Z={AUTO:{code:null,flag:"auto",name:"Auto",latin:!1,isMode:!0,geocoding:!0},LATIN:{code:"latin",flag:"name:latin",name:"Latin",latin:!0,isMode:!1,geocoding:!1},NON_LATIN:{code:"nonlatin",flag:"name:nonlatin",name:"Non Latin",latin:!1,isMode:!1,geocoding:!1},LOCAL:{code:null,flag:"name",name:"Local",latin:!0,isMode:!1,geocoding:!1}},X={ALBANIAN:{code:"sq",flag:"name:sq",name:"Albanian",latin:!0,isMode:!1,geocoding:!0},AMHARIC:{code:"am",flag:"name:am",name:"Amharic",latin:!1,isMode:!1,geocoding:!0},ARABIC:{code:"ar",flag:"name:ar",name:"Arabic",latin:!1,isMode:!1,geocoding:!0},ARMENIAN:{code:"hy",flag:"name:hy",name:"Armenian",latin:!1,isMode:!1,geocoding:!0},AZERBAIJANI:{code:"az",flag:"name:az",name:"Azerbaijani",latin:!0,isMode:!1,geocoding:!0},BASQUE:{code:"eu",flag:"name:eu",name:"Basque",latin:!0,isMode:!1,geocoding:!0},BELARUSIAN:{code:"be",flag:"name:be",name:"Belarusian",latin:!1,isMode:!1,geocoding:!0},BENGALI:{code:"bn",flag:"name:bn",name:"Bengali",latin:!0,isMode:!1,geocoding:!0},BOSNIAN:{code:"bs",flag:"name:bs",name:"Bosnian",latin:!0,isMode:!1,geocoding:!0},BRETON:{code:"br",flag:"name:br",name:"Breton",latin:!0,isMode:!1,geocoding:!0},BULGARIAN:{code:"bg",flag:"bg",name:"Bulgarian",latin:!1,isMode:!1,geocoding:!0},CATALAN:{code:"ca",flag:"name:ca",name:"Catalan",latin:!0,isMode:!1,geocoding:!0},CHINESE:{code:"zh",flag:"name:zh",name:"Chinese",latin:!1,isMode:!1,geocoding:!0},TRADITIONAL_CHINESE:{code:"zh-Hant",flag:"name:zh-Hant",name:"Chinese (traditional)",latin:!1,isMode:!1,geocoding:!1},SIMPLIFIED_CHINESE:{code:"zh-Hans",flag:"name:zh-Hans",name:"Chinese (simplified)",latin:!1,isMode:!1,geocoding:!1},CORSICAN:{code:"co",flag:"name:co",name:"Corsican",latin:!0,isMode:!1,geocoding:!0},CROATIAN:{code:"hr",flag:"name:hr",name:"Croatian",latin:!0,isMode:!1,geocoding:!0},CZECH:{code:"cs",flag:"name:cs",name:"Czech",latin:!0,isMode:!1,geocoding:!0},DANISH:{code:"da",flag:"name:da",name:"Danish",latin:!0,isMode:!1,geocoding:!0},DUTCH:{code:"nl",flag:"name:nl",name:"Dutch",latin:!0,isMode:!1,geocoding:!0},GERMAN:{code:"de",flag:"name:de",name:"German",latin:!0,isMode:!1,geocoding:!0},GREEK:{code:"el",flag:"name:el",name:"Greek",latin:!1,isMode:!1,geocoding:!0},ENGLISH:{code:"en",flag:"name:en",name:"English",latin:!0,isMode:!1,geocoding:!0},ESPERANTO:{code:"eo",flag:"name:eo",name:"Esperanto",latin:!0,isMode:!1,geocoding:!0},ESTONIAN:{code:"et",flag:"name:et",name:"Estonian",latin:!0,isMode:!1,geocoding:!0},FINNISH:{code:"fi",flag:"name:fi",name:"Finnish",latin:!0,isMode:!1,geocoding:!0},FRENCH:{code:"fr",flag:"name:fr",name:"French",latin:!0,isMode:!1,geocoding:!0},FRISIAN:{code:"fy",flag:"name:fy",name:"Frisian (West)",latin:!0,isMode:!1,geocoding:!0},GEORGIAN:{code:"ka",flag:"name:ka",name:"Georgian",latin:!1,isMode:!1,geocoding:!0},HEBREW:{code:"he",flag:"name:he",name:"Hebrew",latin:!1,isMode:!1,geocoding:!0},HINDI:{code:"hi",flag:"name:hi",name:"Hindi",latin:!1,isMode:!1,geocoding:!0},HUNGARIAN:{code:"hu",flag:"name:hu",name:"Hungarian",latin:!0,isMode:!1,geocoding:!0},ICELANDIC:{code:"is",flag:"name:is",name:"Icelandic",latin:!0,isMode:!1,geocoding:!0},INDONESIAN:{code:"id",flag:"name:id",name:"Indonesian",latin:!0,isMode:!1,geocoding:!0},IRISH:{code:"ga",flag:"name:ga",name:"Irish",latin:!0,isMode:!1,geocoding:!0},ITALIAN:{code:"it",flag:"name:it",name:"Italian",latin:!0,isMode:!1,geocoding:!0},JAPANESE:{code:"ja",flag:"name:ja",name:"Japanese",latin:!1,isMode:!1,geocoding:!0},JAPANESE_HIRAGANA:{code:"ja-Hira",flag:"name:ja-Hira",name:"Japanese Hiragana form",latin:!1,isMode:!1,geocoding:!1},JAPANESE_2018:{code:"ja-Latn",flag:"name:ja-Latn",name:"Japanese (Latin 2018)",latin:!0,isMode:!1,geocoding:!1},JAPANESE_KANA:{code:"ja_kana",flag:"name:ja_kana",name:"Japanese (Kana)",latin:!1,isMode:!1,geocoding:!1},JAPANESE_LATIN:{code:"ja_rm",flag:"name:ja_rm",name:"Japanese (Latin script)",latin:!0,isMode:!1,geocoding:!1},KANNADA:{code:"kn",flag:"name:kn",name:"Kannada",latin:!0,isMode:!1,geocoding:!0},KAZAKH:{code:"kk",flag:"name:kk",name:"Kazakh",latin:!1,isMode:!1,geocoding:!0},KOREAN:{code:"ko",flag:"name:ko",name:"Korean",latin:!1,isMode:!1,geocoding:!0},KOREAN_LATIN:{code:"ko-Latn",flag:"name:ko-Latn",name:"Korean (Latin script)",latin:!0,isMode:!1,geocoding:!1},KURDISH:{code:"ku",flag:"name:ku",name:"Kurdish",latin:!0,isMode:!1,geocoding:!0},CLASSICAL_LATIN:{code:"la",flag:"name:la",name:"Latin",latin:!0,isMode:!1,geocoding:!0},LATVIAN:{code:"lv",flag:"name:lv",name:"Latvian",latin:!0,isMode:!1,geocoding:!0},LITHUANIAN:{code:"lt",flag:"name:lt",name:"Lithuanian",latin:!0,isMode:!1,geocoding:!0},LUXEMBOURGISH:{code:"lb",flag:"name:lb",name:"Luxembourgish",latin:!0,isMode:!1,geocoding:!0},MACEDONIAN:{code:"mk",flag:"name:mk",name:"Macedonian",latin:!1,isMode:!1,geocoding:!0},MALAYALAM:{code:"ml",flag:"name:ml",name:"Malayalam",latin:!1,isMode:!1,geocoding:!0},MALTESE:{code:"mt",flag:"name:mt",name:"Maltese",latin:!0,isMode:!1,geocoding:!0},NORWEGIAN:{code:"no",flag:"name:no",name:"Norwegian",latin:!0,isMode:!1,geocoding:!0},OCCITAN:{code:"oc",flag:"name:oc",name:"Occitan",latin:!0,isMode:!1,geocoding:!0},PERSIAN:{code:"fa",flag:"name:fa",name:"Persian",latin:!1,isMode:!1,geocoding:!0},POLISH:{code:"pl",flag:"name:pl",name:"Polish",latin:!0,isMode:!1,geocoding:!0},PORTUGUESE:{code:"pt",flag:"name:pt",name:"Portuguese",latin:!0,isMode:!1,geocoding:!0},PUNJABI:{code:"pa",flag:"name:pa",name:"Punjabi",latin:!1,isMode:!1,geocoding:!0},WESTERN_PUNJABI:{code:"pnb",flag:"name:pnb",name:"Western Punjabi",latin:!1,isMode:!1,geocoding:!1},ROMANIAN:{code:"ro",flag:"name:ro",name:"Romanian",latin:!0,isMode:!1,geocoding:!0},ROMANSH:{code:"rm",flag:"name:rm",name:"Romansh",latin:!0,isMode:!1,geocoding:!0},RUSSIAN:{code:"ru",flag:"name:ru",name:"Russian",latin:!1,isMode:!1,geocoding:!0},SERBIAN_CYRILLIC:{code:"sr",flag:"name:sr",name:"Serbian (Cyrillic script)",latin:!1,isMode:!1,geocoding:!0},SERBIAN_LATIN:{code:"sr-Latn",flag:"name:sr-Latn",name:"Serbian (Latin script)",latin:!0,isMode:!1,geocoding:!1},SCOTTISH_GAELIC:{code:"gd",flag:"name:gd",name:"Scottish Gaelic",latin:!0,isMode:!1,geocoding:!0},SLOVAK:{code:"sk",flag:"name:sk",name:"Slovak",latin:!0,isMode:!1,geocoding:!0},SLOVENE:{code:"sl",flag:"name:sl",name:"Slovene",latin:!0,isMode:!1,geocoding:!0},SPANISH:{code:"es",flag:"name:es",name:"Spanish",latin:!0,isMode:!1,geocoding:!0},SWEDISH:{code:"sv",flag:"name:sv",name:"Swedish",latin:!0,isMode:!1,geocoding:!0},TAMIL:{code:"ta",flag:"name:ta",name:"Tamil",latin:!1,isMode:!1,geocoding:!0},TELUGU:{code:"te",flag:"name:te",name:"Telugu",latin:!1,isMode:!1,geocoding:!0},THAI:{code:"th",flag:"name:th",name:"Thai",latin:!1,isMode:!1,geocoding:!0},TURKISH:{code:"tr",flag:"name:tr",name:"Turkish",latin:!0,isMode:!1,geocoding:!0},UKRAINIAN:{code:"uk",flag:"name:uk",name:"Ukrainian",latin:!1,isMode:!1,geocoding:!0},VIETNAMESE:{code:"vi",flag:"name:vi",name:"Vietnamese (Latin script)",latin:!0,isMode:!1,geocoding:!0},WELSH:{code:"cy",flag:"name:cy",name:"Welsh",latin:!0,isMode:!1,geocoding:!0}},y={...Z,...X};function ee(t,e=y){return t in e?t[t]:null}function M(t,e=y){for(const n of Object.values(e))if(n.code===t)return n;return null}function E(t,e=y){for(const n of Object.values(e))if(n.flag===t)return n;return null}function O(){if(typeof navigator>"u"){const t=Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];return M(t)??y.ENGLISH}return Array.from(new Set(navigator.languages.map(t=>t.split("-")[0]))).map(t=>M(t)).filter(t=>t)[0]??y.ENGLISH}function j(t){return t!==null&&typeof t=="object"&&"code"in t&&"flag"in t&&"name"in t&&"latin"in t&&"isMode"in t&&"geocoding"in t&&(typeof t.code=="string"||t.code===null)&&typeof t.flag=="string"&&typeof t.name=="string"&&typeof t.latin=="boolean"&&typeof t.isMode=="boolean"&&typeof t.geocoding=="boolean"}function H(t,e=y){return j(t)?E(t.flag,e):typeof t!="string"?null:ee(t,e)||M(t,e)||E(t,e)||null}function Te(t,e,n=y){const a=H(t,n),i=H(e,n);return a&&i&&a.flag===i.flag}async function u(t,e={}){if(h.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 please specify the fetch function with config.fetch");if(new URL(t).searchParams.get("key").trim()==="")throw new Error("The MapTiler Cloud API key is missing. Set it in `config.apiKey` or get one for free at https://maptiler.com");return h.fetch(t,e)}const f={maptilerApiURL:"https://api.maptiler.com/",mapStyle:"streets-v2"};Object.freeze(f);class p extends Error{constructor(e,n=""){super(`Call to enpoint ${e.url} failed with the status code ${e.status}. ${n}`),this.res=e}}const D={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function te(t,e){const{language:n}=e;if(n===void 0)return;const a=(Array.isArray(n)?n:[n]).map(o=>Me(o)).filter(o=>o),i=Array.from(new Set(a)).join(",");t.set("language",i)}function Me(t){const e=t===y.AUTO.flag?O():typeof t=="string"?M(t):j(t)?t.flag===y.AUTO.flag?O():E(t.flag):null;return e?.geocoding?e.code:null}function ne(t,e){const{apiKey:n,limit:a,types:i,excludeTypes:o}=e;t.set("key",n??h.apiKey),a!==void 0&&t.set("limit",String(a)),i!==void 0&&t.set("types",i.join(",")),o!==void 0&&t.set("excludeTypes",String(o)),te(t,e)}function ae(t,e){ne(t,e);const{bbox:n,proximity:a,country:i,fuzzyMatch:o,autocomplete:r}=e;n!==void 0&&t.set("bbox",n.join(",")),a!==void 0&&t.set("proximity",a==="ip"?a:a.join(",")),i!==void 0&&t.set("country",i.join(",")),o!==void 0&&t.set("fuzzyMatch",o?"true":"false"),r!==void 0&&t.set("autocomplete",r?"true":"false")}async function Re(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The query must be a non-empty string");const n=new URL(`geocoding/${encodeURIComponent(t)}.json`,f.maptilerApiURL);ae(n.searchParams,e);const a=await u(n.toString());if(!a.ok)throw new p(a,D[a.status]??"");return await a.json()}async function we(t,e={}){if(!Array.isArray(t)||t.length<2)throw new Error("The position must be an array of form [lng, lat].");const n=new URL(`geocoding/${t[0]},${t[1]}.json`,f.maptilerApiURL);ne(n.searchParams,e);const a=await u(n.toString());if(!a.ok)throw new p(a,D[a.status]??"");return await a.json()}async function Ee(t,e={}){const n=new URL(`geocoding/${t}.json`,f.maptilerApiURL);n.searchParams.set("key",e.apiKey??h.apiKey),te(n.searchParams,e);const a=await u(n.toString());if(!a.ok)throw new p(a,D[a.status]??"");return await a.json()}async function De(t,e={}){if(!t.length)return[];const n=t.map(r=>encodeURIComponent(r)).join(";"),a=new URL(`geocoding/${n}.json`,f.maptilerApiURL);ae(a.searchParams,e);const i=await u(a.toString());if(!i.ok)throw new p(i,D[i.status]??"");const o=await i.json();return t.length===1?[o]:o}const Ue={forward:Re,reverse:we,byId:Ee,batch:De},ie={403:"Key is missing, invalid or restricted"};async function Pe(t={}){const e=new URL("geolocation/ip.json",f.maptilerApiURL);e.searchParams.set("key",t.apiKey??h.apiKey),"elevation"in t&&e.searchParams.set("elevation",t.elevation?"true":"false");const n=e.toString(),a=await u(n);if(!a.ok)throw new p(a,a.status in ie?ie[a.status]:"");return await a.json()}const ke={info:Pe},U={403:"Key is missing, invalid or restricted"};async function Ne(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The query must be a non-empty string");const n=new URL(`coordinates/search/${t}.json`,f.maptilerApiURL);n.searchParams.set("key",e.apiKey??h.apiKey),"limit"in e&&n.searchParams.set("limit",e.limit.toString()),"transformations"in e&&n.searchParams.set("transformations",e.transformations.toString()),"exports"in e&&n.searchParams.set("exports",e.exports.toString());const a=n.toString(),i=await u(a);if(!i.ok)throw new p(i,i.status in U?U[i.status]:"");return await i.json()}async function be(t,e={}){const n=(Array.isArray(t[0])?t:[t]).map(r=>`${r[0]},${r[1]}`).join(";"),a=new URL(`coordinates/transform/${n}.json`,f.maptilerApiURL);a.searchParams.set("key",e.apiKey??h.apiKey),"sourceCrs"in e&&a.searchParams.set("s_srs",e.sourceCrs.toString()),"targetCrs"in e&&a.searchParams.set("t_srs",e.targetCrs.toString()),"operations"in e&&a.searchParams.set("ops",(Array.isArray(e.operations)?e.operations:[e.operations]).join("|"));const i=a.toString(),o=await u(i);if(!o.ok)throw new p(o,o.status in U?U[o.status]:"");return await o.json()}const $e={search:Ne,transform:be},oe={403:"Key is missing, invalid or restricted"};async function Ce(t,e={}){if(typeof t!="string"||t.trim().length===0)throw new Error("The data ID must be a non-empty string");const n=new URL(`data/${encodeURIComponent(t)}/features.json`,f.maptilerApiURL);n.searchParams.set("key",e.apiKey??h.apiKey);const a=n.toString(),i=await u(a);if(!i.ok)throw new p(i,i.status in oe?oe[i.status]:"");return await i.json()}const Ke={get:Ce};function re(t){const e=/^maptiler:\/\/(.*)/;let n;const a=t.trim();let i;return a.startsWith("http://")||a.startsWith("https://")?i=a:(n=e.exec(a))!==null?i=`https://api.maptiler.com/maps/${n[1]}/style.json`:i=`https://api.maptiler.com/maps/${a}/style.json`,i}class F{constructor(e,n,a,i,o,r,s=!1){this.name=e,this.variantType=n,this.id=a,this.referenceStyle=i,this.description=o,this.imageURL=r,this.deprecated=s}getName(){return this.name}getFullName(){return`${this.referenceStyle.getName()} ${this.name}`}getType(){return this.variantType}getId(){return this.id}getDescription(){return this.description}getReferenceStyle(){return this.referenceStyle}hasVariant(e){return this.referenceStyle.hasVariant(e)}getVariant(e){const n=this.referenceStyle.getVariant(e);return this.warnIfDeprecated(n),n}getVariants(){return this.referenceStyle.getVariants().filter(e=>e!==this).map(e=>(this.warnIfDeprecated(e),e))}getImageURL(){return this.imageURL}getExpandedStyleURL(){return re(this.getId())}warnIfDeprecated(e=this){if(!e.deprecated)return e;const n=e.getFullName();return console.warn(`Style "${n}" is deprecated and will be removed in a future version.`),e}}class V{constructor(e,n){this.name=e,this.id=n,this.variants={},this.orderedVariants=[]}getName(){return this.name}getId(){return this.id}addVariant(e){this.variants[e.getType()]=e,this.orderedVariants.push(e)}hasVariant(e){return e in this.variants}getVariant(e){return e in this.variants?this.variants[e]:this.orderedVariants[0]}getVariants(){return Object.values(this.variants)}getDefaultVariant(){return this.orderedVariants[0].warnIfDeprecated()}}const P=[{referenceStyleID:"STREETS",name:"Streets",description:"",variants:[{id:"streets-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"streets-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"streets-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"streets-v2-night",name:"Night",variantType:"NIGHT",description:"",imageURL:""},{id:"streets-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OUTDOOR",name:"Outdoor",description:"",variants:[{id:"outdoor-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"outdoor-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"WINTER",name:"Winter",description:"",variants:[{id:"winter-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"winter-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""}]},{referenceStyleID:"SATELLITE",name:"Satellite",description:"",variants:[{id:"satellite",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"HYBRID",name:"Hybrid",description:"",variants:[{id:"hybrid",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"BASIC",name:"Basic",description:"",variants:[{id:"basic-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"basic-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"basic-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BRIGHT",name:"Bright",description:"",variants:[{id:"bright-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"bright-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"bright-v2-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""},{id:"bright-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""}]},{referenceStyleID:"OPENSTREETMAP",name:"OpenStreetMap",description:"",variants:[{id:"openstreetmap",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"TOPO",name:"Topo",description:"",variants:[{id:"topo-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"topo-v2-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"topo-v2-shiny",name:"Shiny",deprecated:!0,variantType:"SHINY",description:"",imageURL:""},{id:"topo-v2-pastel",name:"Pastel",variantType:"PASTEL",description:"",imageURL:""},{id:"topo-v2-topographique",name:"Topographique",variantType:"TOPOGRAPHIQUE",description:"",imageURL:""}]},{referenceStyleID:"VOYAGER",name:"Voyager",description:"",variants:[{id:"voyager-v2",name:"Default",deprecated:!0,variantType:"DEFAULT",description:"",imageURL:""},{id:"voyager-v2-darkmatter",name:"Darkmatter",deprecated:!0,variantType:"DARK",description:"",imageURL:""},{id:"voyager-v2-positron",name:"Positron",deprecated:!0,variantType:"LIGHT",description:"",imageURL:""},{id:"voyager-v2-vintage",name:"Vintage",deprecated:!0,variantType:"VINTAGE",description:"",imageURL:""}]},{referenceStyleID:"TONER",name:"Toner",description:"",variants:[{id:"toner-v2",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"toner-v2-background",name:"Background",variantType:"BACKGROUND",deprecated:!0,description:"",imageURL:""},{id:"toner-v2-lite",name:"Lite",variantType:"LITE",description:"",imageURL:""},{id:"toner-v2-lines",name:"Lines",variantType:"LINES",deprecated:!0,description:"",imageURL:""}]},{referenceStyleID:"DATAVIZ",name:"Dataviz",description:"",variants:[{id:"dataviz",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"dataviz-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"dataviz-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"BACKDROP",name:"Backdrop",description:"",variants:[{id:"backdrop",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"backdrop-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"backdrop-light",name:"Light",variantType:"LIGHT",description:"",imageURL:""}]},{referenceStyleID:"OCEAN",name:"Ocean",description:"",variants:[{id:"ocean",name:"Default",variantType:"DEFAULT",description:"",imageURL:""}]},{referenceStyleID:"AQUARELLE",name:"Aquarelle",description:"Watercolor map for creative use",variants:[{id:"aquarelle",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"aquarelle-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"aquarelle-vivid",name:"Vivid",variantType:"VIVID",description:"",imageURL:""}]},{referenceStyleID:"LANDSCAPE",name:"Landscape",description:"Terrain map for data overlays and visualisations",variants:[{id:"landscape",name:"Default",variantType:"DEFAULT",description:"",imageURL:""},{id:"landscape-dark",name:"Dark",variantType:"DARK",description:"",imageURL:""},{id:"landscape-vivid",name:"Vivid",variantType:"VIVID",description:"",imageURL:""}]}];function Oe(t){return new Proxy(t,{get(e,n,a){return e.hasVariant(n)?e.getVariant(n):n.toString().toUpperCase()===n?t.getDefaultVariant():Reflect.get(e,n,a)}})}function je(){const t={};for(let e=0;e<P.length;e+=1){const n=P[e],a=Oe(new V(n.name,n.referenceStyleID));for(let i=0;i<n.variants.length;i+=1){const o=n.variants[i],r=new F(o.name,o.variantType,o.id,a,o.description,o.imageURL,o.deprecated);a.addVariant(r)}t[n.referenceStyleID]=a}return t}function k(t){if(!t)return se[P[0].referenceStyleID].getDefaultVariant().getId();if(typeof t=="string"||t instanceof String)return t.trim().toLowerCase();if(t instanceof F)return t.getId();if(t instanceof V)return t.getDefaultVariant().getId()}const se=je();function He(t){const e=[];function n(o){(o.type==="LineString"||o.type==="MultiLineString")&&e.push(o)}function a(o){o.geometry&&n(o.geometry)}function i(o){for(const r of o.features)r.type==="Feature"?a(r):r.type==="FeatureCollection"&&i(r)}return t.type==="Feature"?a(t):t.type==="FeatureCollection"?i(t):n(t),e}function Fe(t,e,n){let a=e[0],i=e[1],o=n[0]-a,r=n[1]-i;if(o!==0||r!==0){const s=((t[0]-a)*o+(t[1]-i)*r)/(o*o+r*r);s>1?(a=n[0],i=n[1]):s>0&&(a+=o*s,i+=r*s)}return o=t[0]-a,r=t[1]-i,o*o+r*r}function _(t,e,n,a,i){let o=a,r;for(let s=e+1;s<n;s++){const c=Fe(t[s],t[e],t[n]);c>o&&(r=s,o=c)}o>a&&(r-e>1&&_(t,e,r,a,i),i.push(t[r]),n-r>1&&_(t,r,n,a,i))}function Ve(t,e){const n=t.length-1,a=[t[0]];return _(t,0,n,e,a),a.push(t[n]),a}function _e(t,e){if(t.length<=2)return t;const n=e!==void 0?e*e:1;return Ve(t,n)}const ce={extractLineStrings:He,simplify:_e};function x(t,e=!0){let n=`${t[0]},${t[1]}`;return t.length===3&&e&&(n+=`,${t[2]}`),n}function z(t,e=3e3){let n=t.map(o=>o.join(",")).join("|"),a=5e-6;const i=1e-5;for(;n.length>e;)n=ce.simplify(t,a).map(o=>`${o[0]},${o[1]}`).join("|"),a+=i;return n}function xe(t,e,n={}){const a=k(n.style),i=n.hiDPI?"@2x":"",o=n.format??"png";let r=~~(n.width??1024),s=~~(n.height??1024);n.hiDPI&&(r=~~(r/2),s=~~(s/2));const c=new URL(`maps/${encodeURIComponent(a)}/static/${t[0]},${t[1]},${e}/${r}x${s}${i}.${o}`,f.maptilerApiURL);if("attribution"in n&&c.searchParams.set("attribution",n.attribution.toString()),"markers"in n){let g="";const m="markerIcon"in n;m&&(g+=`icon:${n.markerIcon}|`),m&&"markerAnchor"in n&&(g+=`anchor:${n.markerAnchor}|`),m&&n.hiDPI&&(g+="scale:2|");const A=Array.isArray(n.markers[0])?n.markers:[n.markers];g+=A.map(I=>x(I,!m)).join("|"),c.searchParams.set("markers",g)}if("path"in n){let g="";if(g+=`fill:${n.pathFillColor??"none"}|`,"pathStrokeColor"in n&&(g+=`stroke:${n.pathStrokeColor}|`),"pathWidth"in n){const m=n.pathWidth/(n.hiDPI?2:1);g+=`width:${m.toString()}|`}g+=z(n.path),c.searchParams.set("path",g)}return c.searchParams.set("key",n.apiKey??h.apiKey),c.toString()}function ze(t,e={}){const n=k(e.style),a=e.hiDPI?"@2x":"",i=e.format??"png";let o=~~(e.width??1024),r=~~(e.height??1024);e.hiDPI&&(o=~~(o/2),r=~~(r/2));const s=new URL(`maps/${encodeURIComponent(n)}/static/${t[0]},${t[1]},${t[2]},${t[3]}/${o}x${r}${a}.${i}`,f.maptilerApiURL);if("attribution"in e&&s.searchParams.set("attribution",e.attribution.toString()),"padding"in e&&s.searchParams.set("padding",e.padding.toString()),"markers"in e){let c="";const g="markerIcon"in e;g&&(c+=`icon:${e.markerIcon}|`),g&&"markerAnchor"in e&&(c+=`anchor:${e.markerAnchor}|`),g&&e.hiDPI&&(c+="scale:2|");const m=Array.isArray(e.markers[0])?e.markers:[e.markers];c+=m.map(A=>x(A,!g)).join("|"),s.searchParams.set("markers",c)}if("path"in e){let c="";if(c+=`fill:${e.pathFillColor??"none"}|`,"pathStrokeColor"in e&&(c+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e){const g=e.pathWidth/(e.hiDPI?2:1);c+=`width:${g.toString()}|`}c+=z(e.path),s.searchParams.set("path",c)}return s.searchParams.set("key",e.apiKey??h.apiKey),s.toString()}function Be(t={}){if(!("markers"in t)&&!("path"in t))throw new Error("Automatic static maps require markers and/or path to be created.");const e=k(t.style),n=t.hiDPI?"@2x":"",a=t.format??"png";let i=~~(t.width??1024),o=~~(t.height??1024);t.hiDPI&&(i=~~(i/2),o=~~(o/2));const r=new URL(`maps/${encodeURIComponent(e)}/static/auto/${i}x${o}${n}.${a}`,f.maptilerApiURL);if("attribution"in t&&r.searchParams.set("attribution",t.attribution.toString()),"padding"in t&&r.searchParams.set("padding",t.padding.toString()),"markers"in t){let s="";const c="markerIcon"in t;c&&(s+=`icon:${t.markerIcon}|`),c&&"markerAnchor"in t&&(s+=`anchor:${t.markerAnchor}|`),c&&t.hiDPI&&(s+="scale:2|");const g=Array.isArray(t.markers[0])?t.markers:[t.markers];s+=g.map(m=>x(m,!c)).join("|"),r.searchParams.set("markers",s)}if("path"in t){let s="";if(s+=`fill:${t.pathFillColor??"none"}|`,"pathStrokeColor"in t&&(s+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t){const c=t.pathWidth/(t.hiDPI?2:1);s+=`width:${c.toString()}|`}s+=z(t.path),r.searchParams.set("path",s)}return r.searchParams.set("key",t.apiKey??h.apiKey),r.toString()}const Ge={centered:xe,bounded:ze,automatic:Be},N=63710088e-1,le=2*Math.PI*N;function de(t){return(180+t)/360}function ge(t){return(180-180/Math.PI*Math.log(Math.tan(Math.PI/4+t*Math.PI/360)))/360}function me(t){const e=ue(t);return[de(e[0]),ge(e[1])]}function he(t){return t*360-180}function fe(t){const e=180-t*360;return 360/Math.PI*Math.atan(Math.exp(e*Math.PI/180))-90}function We(t){return[he(t[0]),fe(t[1])]}function B(t,e){const n=Math.PI/180,a=t[1]*n,i=e[1]*n,o=Math.sin(a)*Math.sin(i)+Math.cos(a)*Math.cos(i)*Math.cos((e[0]-t[0])*n);return N*Math.acos(Math.min(o,1))}function Je(t){const e=Array(t.length);e[0]=0;const n=e.length;for(let a=1;a<n;a++)e[a]=B(t[a-1],t[a])+e[a-1];return e}function ue(t){const e=t[0],n=t[1],a=360,i=((e+180)%a+a)%a-180;return[i===-180?180:i,n]}function pe(t){return le*Math.cos(t*Math.PI/180)}function ye(t,e,n=!0){const a=2**e,i=[t[0]*a,t[1]*a];return n?[~~i[0],~~i[1]]:i}function qe(t,e,n=!0){const a=me(t);return ye(a,e,n)}function R(t){return t*Math.PI/180}function G(t){return t*180/Math.PI}function Ye(t,e,n){const a=B(t,e),i=R(t[0]),o=R(t[1]),r=R(e[0]),s=R(e[1]),c=a/N,g=Math.sin((1-n)*c)/Math.sin(c),m=Math.sin(n*c)/Math.sin(c),A=g*Math.cos(o)*Math.cos(i)+m*Math.cos(s)*Math.cos(r),I=g*Math.cos(o)*Math.sin(i)+m*Math.cos(s)*Math.sin(r),w=g*Math.sin(o)+m*Math.sin(s),C=Math.atan2(w,Math.sqrt(A*A+I*I)),l=Math.atan2(I,A);return[G(l),G(C)]}const Ae={EARTH_RADIUS:N,EARTH_CIRCUMFERENCE:le,longitudeToMercatorX:de,latitudeToMercatorY:ge,wgs84ToMercator:me,mercatorXToLongitude:he,mercatorYToLatitude:fe,mercatorToWgs84:We,haversineDistanceWgs84:B,wrapWgs84:ue,circumferenceAtLatitude:pe,mercatorToTileIndex:ye,wgs84ToTileIndex:qe,toRadians:R,toDegrees:G,haversineIntermediateWgs84:Ye,haversineCumulatedDistanceWgs84:Je};class Qe extends Map{#a=0;#e=new Map;#t=new Map;#i;#r;#o;constructor(e={}){if(super(),!(e.maxSize&&e.maxSize>0))throw new TypeError("`maxSize` must be a number greater than 0");if(typeof e.maxAge=="number"&&e.maxAge===0)throw new TypeError("`maxAge` must be a number greater than 0");this.#i=e.maxSize,this.#r=e.maxAge||Number.POSITIVE_INFINITY,this.#o=e.onEviction}get __oldCache(){return this.#t}#s(e){if(typeof this.#o=="function")for(const[n,a]of e)this.#o(n,a.value)}#n(e,n){return typeof n.expiry=="number"&&n.expiry<=Date.now()?(typeof this.#o=="function"&&this.#o(e,n.value),this.delete(e)):!1}#m(e,n){if(this.#n(e,n)===!1)return n.value}#c(e,n){return n.expiry?this.#m(e,n):n.value}#l(e,n){const a=n.get(e);return this.#c(e,a)}#d(e,n){this.#e.set(e,n),this.#a++,this.#a>=this.#i&&(this.#a=0,this.#s(this.#t),this.#t=this.#e,this.#e=new Map)}#h(e,n){this.#t.delete(e),this.#d(e,n)}*#g(){for(const e of this.#t){const[n,a]=e;this.#e.has(n)||this.#n(n,a)===!1&&(yield e)}for(const e of this.#e){const[n,a]=e;this.#n(n,a)===!1&&(yield e)}}get(e){if(this.#e.has(e)){const n=this.#e.get(e);return this.#c(e,n)}if(this.#t.has(e)){const n=this.#t.get(e);if(this.#n(e,n)===!1)return this.#h(e,n),n.value}}set(e,n,{maxAge:a=this.#r}={}){const i=typeof a=="number"&&a!==Number.POSITIVE_INFINITY?Date.now()+a:void 0;return this.#e.has(e)?this.#e.set(e,{value:n,expiry:i}):this.#d(e,{value:n,expiry:i}),this}has(e){return this.#e.has(e)?!this.#n(e,this.#e.get(e)):this.#t.has(e)?!this.#n(e,this.#t.get(e)):!1}peek(e){if(this.#e.has(e))return this.#l(e,this.#e);if(this.#t.has(e))return this.#l(e,this.#t)}delete(e){const n=this.#e.delete(e);return n&&this.#a--,this.#t.delete(e)||n}clear(){this.#e.clear(),this.#t.clear(),this.#a=0}resize(e){if(!(e&&e>0))throw new TypeError("`maxSize` must be a number greater than 0");const n=[...this.#g()],a=n.length-e;a<0?(this.#e=new Map(n),this.#t=new Map,this.#a=n.length):(a>0&&this.#s(n.slice(0,a)),this.#t=new Map(n.slice(a)),this.#e=new Map,this.#a=0),this.#i=e}*keys(){for(const[e]of this)yield e}*values(){for(const[,e]of this)yield e}*[Symbol.iterator](){for(const e of this.#e){const[n,a]=e;this.#n(n,a)===!1&&(yield[n,a.value])}for(const e of this.#t){const[n,a]=e;this.#e.has(n)||this.#n(n,a)===!1&&(yield[n,a.value])}}*entriesDescending(){let e=[...this.#e];for(let n=e.length-1;n>=0;--n){const a=e[n],[i,o]=a;this.#n(i,o)===!1&&(yield[i,o.value])}e=[...this.#t];for(let n=e.length-1;n>=0;--n){const a=e[n],[i,o]=a;this.#e.has(i)||this.#n(i,o)===!1&&(yield[i,o.value])}}*entriesAscending(){for(const[e,n]of this.#g())yield[e,n.value]}get size(){if(!this.#a)return this.#t.size;let e=0;for(const n of this.#t.keys())this.#e.has(n)||e++;return Math.min(this.#a+e,this.#i)}get maxSize(){return this.#i}entries(){return this.entriesAscending()}forEach(e,n=this){for(const[a,i]of this.entriesAscending())e.call(n,i,a,this)}get[Symbol.toStringTag](){return JSON.stringify([...this.entriesAscending()])}}let W=null;function Le(){return W||(W=new Qe({maxSize:h.tileCacheSize})),W}async function Ie(t){const e=new Blob([t]),n=await createImageBitmap(e),a=document.createElement("canvas"),i=a.getContext("2d");a.width=n.width,a.height=n.height,i.drawImage(n,0,0);const o=i.getImageData(0,0,a.width,a.height);return{pixels:o.data,width:a.width,height:a.height,components:o.data.length/(a.width*a.height)}}function ve(){if(h.bufferToPixelData)return h.bufferToPixelData;if(typeof window<"u")return Ie;throw new Error("An image file buffer to pixel data parser is necessary. Specify it in `config.bufferToPixelData`")}function J(){return!!h.bufferToPixelData||typeof window<"u"}const Ze="terrain-rgb-v2",q=50,Xe=1e3;let b=null;const Se={403:"Key is missing, invalid or restricted"};async function et(t,e){t.length>Xe&&console.warn("Computing elevation for complex geometries is discouraged - simplify the geometry before proceeding");const n=Math.ceil(t.length/q),a=Array.from({length:n},()=>null).map((o,r)=>{const s=r*q,c=t.slice(s,s+q).map(m=>m.join(",")).join(";"),g=new URL(`elevation/${c}.json`,f.maptilerApiURL);return g.searchParams.set("key",e),u(g.toString())}),i=await Promise.allSettled(a);return(await Promise.all(i.map(async o=>{if(o.status==="rejected")throw new Error(`Some segments could not be fetched, error: ${o.reason}`);if(!o.value.ok)throw new Error(`Some segments could not be fetched, response: ${o.value.status} ${await o.value.text()}, url: ${o.value.url}`);return o.value.json()}))).flat()}async function tt(t,e,n){if(!b){const l=new URL(`tiles/${Ze}/tiles.json`,f.maptilerApiURL);l.searchParams.set("key",e);const S=l.toString(),L=await u(S);if(L.ok)b=await L.json();else throw new p(L,Se[L.status]??"")}const a=ve(),i=b.tiles[0],o=Le(),r=b.maxzoom;let s=~~(n??r);(s>r||s<0)&&(s=r);const c=t.map(l=>Ae.wgs84ToTileIndex(l,s,!1)),g=c.map(l=>[~~l[0],~~l[1]]).map(l=>`terrain_${s.toString()}_${l[0].toString()}_${l[1].toString()}`),m=Array.from(new Set(g.filter(l=>!o.has(l)))).map(l=>l.split("_").slice(1)),A=m.map(l=>i.replace("{x}",l[1].toString()).replace("{y}",l[2].toString()).replace("{z}",l[0].toString())).map(l=>u(l)),I=(await Promise.allSettled(A)).map(l=>l.status==="fulfilled"?l.value:null).filter(l=>l),w=I.filter(l=>!l.ok);if(I.length!==A.length)throw new Error("Some tiles could not be fetched.");if(w.length)throw new p(w[0],Se[w[0].status]??"");const C=await Promise.all(I.map(l=>l.arrayBuffer()));if(!C.every(l=>l.byteLength>0))throw new Error("Some tiles are not available.");return(await Promise.all(C.map(l=>a(l)))).forEach((l,S)=>{const L=m[S],K=`terrain_${L[0].toString()}_${L[1].toString()}_${L[2].toString()}`;o.set(K,l)}),t.map((l,S)=>{const L=g[S],K=c[S],v=o.get(L),rt=Math.min(Math.round(v.width*(K[0]%1)),v.width-1),Y=(Math.min(Math.round(v.height*(K[1]%1)),v.height-1)*v.width+rt)*v.components,st=v.pixels[Y],ct=v.pixels[Y+1],lt=v.pixels[Y+2],dt=-1e4+(st*256*256+ct*256+lt)*.1;return[l[0],l[1],~~(dt*1e3)/1e3]})}async function nt(t,e={}){return(await $([t],e))[0]}async function $(t,e={}){if(t.length===0)return[];const n=e.apiKey??h.apiKey,a=e.computeOn==="client"?await tt(t,n,e.zoom):await et(t,n);if(e.smoothingKernelSize){const i=~~(e.smoothingKernelSize/2)*2+1,o=a.map(s=>s[2]),r=~~(i/2);for(let s=r;s<o.length-r-1;s+=1){let c=0;for(let g=0;g<i;g+=1){const m=o[s-r+g];c+=m}c/=i,a[s][2]=c}}return a}async function at(t,e={}){if(t.type!=="LineString")throw new Error("The provided object is not a GeoJSON LineString");e.computeOn??(e.computeOn=J()?"client":"server");const n=structuredClone(t),a=await $(n.coordinates,e);return n.coordinates=a,n}async function it(t,e={}){if(t.type!=="MultiLineString")throw new Error("The provided object is not a GeoJSON MultiLineString");e.computeOn??(e.computeOn=J()?"client":"server");const n=structuredClone(t),a=n.coordinates.map(c=>c.length),i=n.coordinates.flat(),o=await $(i,e),r=[];let s=0;for(const c of a)r.push(o.slice(s,s+c)),s+=c;return n.coordinates=r,n}const ot={at:nt,batch:$,fromLineString:at,fromMultiLineString:it};d.ClientConfig=Q,d.ISOLanguage=X,d.Language=y,d.MapStyle=se,d.MapStyleVariant=F,d.NonISOLanguage=Z,d.ReferenceMapStyle=V,d.ServiceError=p,d.areSameLanguages=Te,d.bufferToPixelDataBrowser=Ie,d.canParsePixelData=J,d.circumferenceAtLatitude=pe,d.config=h,d.coordinates=$e,d.data=Ke,d.elevation=ot,d.expandMapStyle=re,d.geocoding=Ue,d.geolocation=ke,d.getAutoLanguage=O,d.getBufferToPixelDataParser=ve,d.getLanguageInfoFromCode=M,d.getLanguageInfoFromFlag=E,d.getLanguageInfoFromKey=ee,d.getTileCache=Le,d.isLanguageInfo=j,d.mapStylePresetList=P,d.math=Ae,d.misc=ce,d.staticMaps=Ge,d.styleToStyle=k,d.toLanguageInfo=H});
