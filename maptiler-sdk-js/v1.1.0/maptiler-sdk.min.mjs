import a from"maplibre-gl";export*from"maplibre-gl";import{Base64 as Q}from"js-base64";import tt from"events";import{config as C,expandMapStyle as et,MapStyleVariant as rt,ReferenceMapStyle as nt,MapStyle as it,mapStylePresetList as at,geolocation as w}from"@maptiler/client";import{LanguageGeocoding as Te,MapStyle as Ce,MapStyleVariant as be,ReferenceMapStyle as ve,ServiceError as we,coordinates as Ee,data as Ie,geocoding as Re,geolocation as Ne,staticMaps as Pe}from"@maptiler/client";import{v4 as ot}from"uuid";const f={AUTO:"auto",STYLE_LOCK:"style_lock",LATIN:"latin",NON_LATIN:"nonlatin",LOCAL:"",ALBANIAN:"sq",AMHARIC:"am",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BASQUE:"eu",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CORSICAN:"co",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HINDI:"hi",HUNGARIAN:"hu",ICELANDIC:"is",INDONESIAN:"id",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",JAPANESE_HIRAGANA:"ja-Hira",JAPANESE_KANA:"ja_kana",JAPANESE_LATIN:"ja_rm",JAPANESE_2018:"ja-Latn",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",KOREAN_LATIN:"ko-Latn",KURDISH:"ku",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALAYALAM:"ml",MALTESE:"mt",NORWEGIAN:"no",OCCITAN:"oc",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SERBIAN_LATIN:"sr-Latn",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",TAMIL:"ta",TELUGU:"te",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},st=new Set(Object.values(f));function E(r){return st.has(r)}const lt=new Set(Object.values(f));function b(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const r=Array.from(new Set(navigator.languages.map(t=>t.split("-")[0]))).filter(t=>lt.has(t));return r.length?r[0]:f.LATIN}const I=ot();let R=class extends tt{constructor(){super(),this.primaryLanguage=f.AUTO,this.secondaryLanguage=null,this.session=!0,this._unit="metric",this._apiKey=""}set unit(t){this._unit=t,this.emit("unit",t)}get unit(){return this._unit}set apiKey(t){this._apiKey=t,C.apiKey=t,this.emit("apiKey",t)}get apiKey(){return this._apiKey}set fetch(t){C.fetch=t}get fetch(){return C.fetch}};const L=new R,y={maptilerLogoURL:"https://api.maptiler.com/resources/logo.svg",maptilerURL:"https://www.maptiler.com/",maptilerApiHost:"api.maptiler.com",rtlPluginURL:"https://cdn.maptiler.com/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.min.js",primaryLanguage:f.AUTO,secondaryLanguage:f.LOCAL,terrainSourceURL:"https://api.maptiler.com/tiles/terrain-rgb-v2/tiles.json",terrainSourceId:"maptiler-terrain"};Object.freeze(y);class N extends a.LogoControl{onAdd(t){return super.onAdd(t)}}class v extends N{constructor(t={}){var e,i;super(t),this.logoURL="",this.linkURL="",this.logoURL=(e=t.logoURL)!=null?e:y.maptilerLogoURL,this.linkURL=(i=t.linkURL)!=null?i:y.maptilerURL}onAdd(t){this._map=t,this._compact=this.options&&this.options.compact,this._container=window.document.createElement("div"),this._container.className="maplibregl-ctrl";const e=window.document.createElement("a");return e.style.backgroundRepeat="no-repeat",e.style.cursor="pointer",e.style.display="block",e.style.height="23px",e.style.margin="0 0 -4px -4px",e.style.overflow="hidden",e.style.width="88px",e.style.backgroundImage=`url(${this.logoURL})`,e.style.backgroundSize="100px 30px",e.style.width="100px",e.style.height="30px",e.target="_blank",e.rel="noopener",e.href=this.linkURL,e.setAttribute("aria-label","MapTiler logo"),e.setAttribute("rel","noopener"),this._container.appendChild(e),this._container.style.display="block",this._map.on("resize",this._updateCompact),this._updateCompact(),this._container}}var ct=Object.defineProperty,P=Object.getOwnPropertySymbols,ht=Object.prototype.hasOwnProperty,ut=Object.prototype.propertyIsEnumerable,O=(r,t,e)=>t in r?ct(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,M=(r,t)=>{for(var e in t||(t={}))ht.call(t,e)&&O(r,e,t[e]);if(P)for(var e of P(t))ut.call(t,e)&&O(r,e,t[e]);return r};function gt(){a.getRTLTextPluginStatus()==="unavailable"&&a.setRTLTextPlugin(y.rtlPluginURL,null,!0)}function dt(r,t){r.forEach(e=>{t[e]&&(t[e]=t[e].bind(t))})}function _(r,t,e){const i=window.document.createElement(r);return t!==void 0&&(i.className=t),e&&e.appendChild(i),i}function pt(r){r.parentNode&&r.parentNode.removeChild(r)}function U(r,t){let e=null;try{e=new URL(r)}catch{return{url:r}}return e.host===y.maptilerApiHost&&(e.searchParams.has("key")||e.searchParams.append("key",L.apiKey),L.session&&e.searchParams.append("mtsid",I)),{url:e.href}}function k(r=null){return function(t,e){if(r){const i=r(t,e),s=U(i.url);return M(M({},i),s)}else return U(t)}}function B(r){return r?typeof r=="string"||r instanceof String?!r.startsWith("http")&&r.toLowerCase().includes(".json")?r:et(r):r instanceof rt?r.getExpandedStyleURL():r instanceof nt?r.getDefaultVariant().getExpandedStyleURL():r:it[at[0].referenceStyleID].getDefaultVariant().getExpandedStyleURL()}class ${constructor(){dt(["_toggleTerrain","_updateTerrainIcon"],this)}onAdd(t){return this._map=t,this._container=_("div","maplibregl-ctrl maplibregl-ctrl-group"),this._terrainButton=_("button","maplibregl-ctrl-terrain",this._container),_("span","maplibregl-ctrl-icon",this._terrainButton).setAttribute("aria-hidden","true"),this._terrainButton.type="button",this._terrainButton.addEventListener("click",this._toggleTerrain),this._updateTerrainIcon(),this._map.on("terrain",this._updateTerrainIcon),this._container}onRemove(){pt(this._container),this._map.off("terrain",this._updateTerrainIcon),this._map=void 0}_toggleTerrain(){this._map.hasTerrain()?this._map.disableTerrain():this._map.enableTerrain(),this._updateTerrainIcon()}_updateTerrainIcon(){this._terrainButton.classList.remove("maplibregl-ctrl-terrain"),this._terrainButton.classList.remove("maplibregl-ctrl-terrain-enabled"),this._map.hasTerrain()?(this._terrainButton.classList.add("maplibregl-ctrl-terrain-enabled"),this._terrainButton.title=this._map._getUIString("TerrainControl.disableTerrain")):(this._terrainButton.classList.add("maplibregl-ctrl-terrain"),this._terrainButton.title=this._map._getUIString("TerrainControl.enableTerrain"))}}class G extends a.NavigationControl{onAdd(t){return super.onAdd(t)}}class K extends G{constructor(){super({showCompass:!0,showZoom:!0,visualizePitch:!0}),this._compass.removeEventListener("click",this._compass.clickFunction),this._compass.addEventListener("click",t=>{this._map.getPitch()===0?this._map.easeTo({pitch:Math.min(this._map.getMaxPitch(),80)}):this.options.visualizePitch?this._map.resetNorthPitch({},{originalEvent:t}):this._map.resetNorth({},{originalEvent:t})})}_createButton(t,e){const i=super._createButton(t,e);return i.clickFunction=e,i}_rotateCompassArrow(){const t=this.options.visualizePitch?`scale(${Math.min(1.5,1/Math.pow(Math.cos(this._map.transform.pitch*(Math.PI/180)),.5))}) rotateX(${Math.min(70,this._map.transform.pitch)}deg) rotateZ(${this._map.transform.angle*(180/Math.PI)}deg)`:`rotate(${this._map.transform.angle*(180/Math.PI)}deg)`;this._compassIcon.style.transform=t}}class j extends a.GeolocateControl{onAdd(t){return super.onAdd(t)}}var mt=Object.defineProperty,yt=Object.defineProperties,ft=Object.getOwnPropertyDescriptors,H=Object.getOwnPropertySymbols,Lt=Object.prototype.hasOwnProperty,At=Object.prototype.propertyIsEnumerable,D=(r,t,e)=>t in r?mt(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,St=(r,t)=>{for(var e in t||(t={}))Lt.call(t,e)&&D(r,e,t[e]);if(H)for(var e of H(t))At.call(t,e)&&D(r,e,t[e]);return r},_t=(r,t)=>yt(r,ft(t));const F=a.Marker,q=a.LngLat,xt=a.LngLatBounds;class V extends j{constructor(){super(...arguments),this.lastUpdatedCenter=new q(0,0)}_updateCamera(t){const e=new q(t.coords.longitude,t.coords.latitude),i=t.coords.accuracy,s=this._map.getBearing(),g=_t(St({bearing:s},this.options.fitBoundsOptions),{linear:!0}),h=this._map.getZoom();h>this.options.fitBoundsOptions.maxZoom&&(g.zoom=h),this._map.fitBounds(xt.fromLngLat(e,i),g,{geolocateSource:!0});let c=!1;const o=()=>{c=!0};this._map.once("click",o),this._map.once("dblclick",o),this._map.once("dragstart",o),this._map.once("mousedown",o),this._map.once("touchstart",o),this._map.once("wheel",o),this._map.once("moveend",()=>{this._map.off("click",o),this._map.off("dblclick",o),this._map.off("dragstart",o),this._map.off("mousedown",o),this._map.off("touchstart",o),this._map.off("wheel",o),!c&&(this.lastUpdatedCenter=this._map.getCenter())})}_setupUI(t){if(this.lastUpdatedCenter=this._map.getCenter(),this._container.addEventListener("contextmenu",e=>e.preventDefault()),this._geolocateButton=_("button","maplibregl-ctrl-geolocate",this._container),_("span","maplibregl-ctrl-icon",this._geolocateButton).setAttribute("aria-hidden","true"),this._geolocateButton.type="button",t===!1){const e=this._map._getUIString("GeolocateControl.LocationNotAvailable");this._geolocateButton.disabled=!0,this._geolocateButton.title=e,this._geolocateButton.setAttribute("aria-label",e)}else{const e=this._map._getUIString("GeolocateControl.FindMyLocation");this._geolocateButton.title=e,this._geolocateButton.setAttribute("aria-label",e)}this.options.trackUserLocation&&(this._geolocateButton.setAttribute("aria-pressed","false"),this._watchState="OFF"),this.options.showUserLocation&&(this._dotElement=_("div","maplibregl-user-location-dot"),this._userLocationDotMarker=new F(this._dotElement),this._circleElement=_("div","maplibregl-user-location-accuracy-circle"),this._accuracyCircleMarker=new F({element:this._circleElement,pitchAlignment:"map"}),this.options.trackUserLocation&&(this._watchState="OFF"),this._map.on("move",this._onZoom)),this._geolocateButton.addEventListener("click",this.trigger.bind(this)),this._setup=!0,this.options.trackUserLocation&&this._map.on("moveend",e=>{const i=e.originalEvent&&e.originalEvent.type==="resize",s=this.lastUpdatedCenter.distanceTo(this._map.getCenter());!e.geolocateSource&&this._watchState==="ACTIVE_LOCK"&&!i&&s>1&&(this._watchState="BACKGROUND",this._geolocateButton.classList.add("maplibregl-ctrl-geolocate-background"),this._geolocateButton.classList.remove("maplibregl-ctrl-geolocate-active"),this.fire(new Event("trackuserlocationend")))})}_updateCircleRadius(){if(this._watchState!=="BACKGROUND"&&this._watchState!=="ACTIVE_LOCK")return;const t=[this._lastKnownPosition.coords.longitude,this._lastKnownPosition.coords.latitude],e=this._map.project(t),i=this._map.unproject([e.x,e.y]),s=this._map.unproject([e.x+20,e.y]),g=i.distanceTo(s)/20,h=Math.ceil(2*this._accuracy/g);this._circleElement.style.width=`${h}px`,this._circleElement.style.height=`${h}px`}_onZoom(){this.options.showUserLocation&&this.options.showAccuracyCircle&&this._updateCircleRadius()}}class z extends a.AttributionControl{onAdd(t){return super.onAdd(t)}}class W extends a.ScaleControl{onAdd(t){return super.onAdd(t)}}class J extends a.FullscreenControl{onAdd(t){return super.onAdd(t)}}var Tt=Object.defineProperty,Ct=Object.defineProperties,bt=Object.getOwnPropertyDescriptors,Z=Object.getOwnPropertySymbols,vt=Object.prototype.hasOwnProperty,wt=Object.prototype.propertyIsEnumerable,Y=(r,t,e)=>t in r?Tt(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,Et=(r,t)=>{for(var e in t||(t={}))vt.call(t,e)&&Y(r,e,t[e]);if(Z)for(var e of Z(t))wt.call(t,e)&&Y(r,e,t[e]);return r},It=(r,t)=>Ct(r,bt(t)),S=(r,t,e)=>new Promise((i,s)=>{var g=o=>{try{c(e.next(o))}catch(m){s(m)}},h=o=>{try{c(e.throw(o))}catch(m){s(m)}},c=o=>o.done?i(o.value):Promise.resolve(o.value).then(g,h);c((e=e.apply(r,t)).next())});const X={POINT:"POINT",COUNTRY:"COUNTRY"};class Rt extends a.Map{constructor(t){var e,i,s;t.apiKey&&(L.apiKey=t.apiKey);const g=B(t.style),h=location.hash;L.apiKey||console.warn("MapTiler Cloud API key is not set. Visit https://maptiler.com and try Cloud for free!"),super(It(Et({},t),{style:g,maplibreLogo:!1,transformRequest:k(t.transformRequest)})),this.isTerrainEnabled=!1,this.terrainExaggeration=1,this.primaryLanguage=null,this.secondaryLanguage=null,this.terrainGrowing=!1,this.terrainFlattening=!1,this.primaryLanguage=(e=t.language)!=null?e:L.primaryLanguage,this.secondaryLanguage=L.secondaryLanguage,this.terrainExaggeration=(i=t.terrainExaggeration)!=null?i:this.terrainExaggeration,this.once("styledata",()=>S(this,null,function*(){if(!t.geolocate||t.center||t.hash&&h)return;try{if(t.geolocate===X.COUNTRY){yield this.fitToIpBounds();return}}catch(n){console.warn(n.message)}let u=null;try{yield this.centerOnIpPoint(t.zoom),u=this.getCameraHash()}catch(n){console.warn(n.message)}(yield navigator.permissions.query({name:"geolocation"})).state==="granted"&&navigator.geolocation.getCurrentPosition(n=>{u===this.getCameraHash()&&(this.terrain?this.easeTo({center:[n.coords.longitude,n.coords.latitude],zoom:t.zoom||12,duration:2e3}):this.once("terrain",()=>{this.easeTo({center:[n.coords.longitude,n.coords.latitude],zoom:t.zoom||12,duration:2e3})}))},null,{maximumAge:24*3600*1e3,timeout:5e3,enableHighAccuracy:!1})})),this.on("styledata",()=>{this.setPrimaryLanguage(this.primaryLanguage),this.setSecondaryLanguage(this.secondaryLanguage)}),this.on("styledata",()=>{this.getTerrain()===null&&this.isTerrainEnabled&&this.enableTerrain(this.terrainExaggeration)}),this.once("load",()=>S(this,null,function*(){gt()})),this.once("load",()=>S(this,null,function*(){let u={logo:null};try{const n=Object.keys(this.style.sourceCaches).map(l=>this.getSource(l)).filter(l=>typeof l.url=="string"&&l.url.includes("tiles.json")),p=new URL(n[0].url);p.searchParams.has("key")||p.searchParams.append("key",L.apiKey),u=yield(yield fetch(p.href)).json()}catch{}if("logo"in u&&u.logo){const n=u.logo;this.addControl(new v({logoURL:n}),t.logoPosition),t.attributionControl===!1&&this.addControl(new z({customAttribution:t.customAttribution}))}else t.maptilerLogo&&this.addControl(new v,t.logoPosition);if(t.scaleControl){const n=t.scaleControl===!0||t.scaleControl===void 0?"bottom-right":t.scaleControl,p=new W({unit:L.unit});this.addControl(p,n),L.on("unit",l=>{p.setUnit(l)})}if(t.navigationControl!==!1){const n=t.navigationControl===!0||t.navigationControl===void 0?"top-right":t.navigationControl;this.addControl(new K,n)}if(t.geolocateControl!==!1){const n=t.geolocateControl===!0||t.geolocateControl===void 0?"top-right":t.geolocateControl;this.addControl(new V({positionOptions:{enableHighAccuracy:!0,maximumAge:0,timeout:6e3},fitBoundsOptions:{maxZoom:15},trackUserLocation:!0,showAccuracyCircle:!0,showUserLocation:!0}),n)}if(t.terrainControl){const n=t.terrainControl===!0||t.terrainControl===void 0?"top-right":t.terrainControl;this.addControl(new $,n)}if(t.fullscreenControl){const n=t.fullscreenControl===!0||t.fullscreenControl===void 0?"top-right":t.fullscreenControl;this.addControl(new J({}),n)}}));let c=!1,o=!1,m=null;this.once("load",u=>{c=!0,o&&this.fire("loadWithTerrain",m)});const d=u=>{u.terrain&&(o=!0,m={type:"loadWithTerrain",target:this,terrain:u.terrain},this.off("terrain",d),c&&this.fire("loadWithTerrain",m))};this.on("terrain",d),t.terrain&&this.enableTerrain((s=t.terrainExaggeration)!=null?s:this.terrainExaggeration)}onLoadAsync(){return S(this,null,function*(){return new Promise((t,e)=>{if(this.loaded())return t(this);this.once("load",i=>{t(this)})})})}onLoadWithTerrainAsync(){return S(this,null,function*(){return new Promise((t,e)=>{if(this.loaded()&&this.terrain)return t(this);this.once("loadWithTerrain",i=>{t(this)})})})}setStyle(t,e){return super.setStyle(B(t),e)}setLanguage(t=y.primaryLanguage){if(t===f.AUTO)return this.setLanguage(b());this.setPrimaryLanguage(t)}setPrimaryLanguage(t=y.primaryLanguage){if(this.primaryLanguage===f.STYLE_LOCK){console.warn("The language cannot be changed because this map has been instantiated with the STYLE_LOCK language flag.");return}E(t)&&(this.primaryLanguage=t,this.onStyleReady(()=>{if(t===f.AUTO)return this.setPrimaryLanguage(b());const e=this.getStyle().layers,i=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,s=/^\s*name\s*(:\s*(\S*))?\s*$/,g=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/,h=/^(.*)({\s*name\s*(:\s*(\S*))?\s*})(.*)$/,c=t?`name:${t}`:"name",o=["case",["has",c],["get",c],["get","name"]];for(let m=0;m<e.length;m+=1){const d=e[m],u=d.layout;if(!u||!u["text-field"])continue;const n=this.getLayoutProperty(d.id,"text-field");let p;if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="concat"){const l=n.slice();for(let x=0;x<n.length;x+=1){const A=n[x];if((typeof A=="string"||A instanceof String)&&i.exec(A.toString())){l[x]=o;break}else if(Array.isArray(A)&&A.length>=2&&A[0].trim().toLowerCase()==="get"&&s.exec(A[1].toString())){l[x]=o;break}else if(Array.isArray(A)&&A.length===4&&A[0].trim().toLowerCase()==="case"){l[x]=o;break}}this.setLayoutProperty(d.id,"text-field",l)}else if(Array.isArray(n)&&n.length>=2&&n[0].trim().toLowerCase()==="get"&&s.exec(n[1].toString())){const l=o;this.setLayoutProperty(d.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&i.exec(n.toString())){const l=o;this.setLayoutProperty(d.id,"text-field",l)}else if(Array.isArray(n)&&n.length===4&&n[0].trim().toLowerCase()==="case"){const l=o;this.setLayoutProperty(d.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&(p=g.exec(n.toString()))!==null){const l=`{${c}}${p[3]}{name${p[4]||""}}`;this.setLayoutProperty(d.id,"text-field",l)}else if((typeof n=="string"||n instanceof String)&&(p=h.exec(n.toString()))!==null){const l=`${p[1]}{${c}}${p[5]}`;this.setLayoutProperty(d.id,"text-field",l)}}}))}setSecondaryLanguage(t=y.secondaryLanguage){if(this.primaryLanguage===f.STYLE_LOCK){console.warn("The language cannot be changed because this map has been instantiated with the STYLE_LOCK language flag.");return}E(t)&&(this.secondaryLanguage=t,this.onStyleReady(()=>{if(t===f.AUTO)return this.setSecondaryLanguage(b());const e=this.getStyle().layers,i=/^\s*{\s*name\s*(:\s*(\S*))?\s*}$/,s=/^\s*name\s*(:\s*(\S*))?\s*$/,g=/^\s*{\s*name\s*(:\s*(\S*))?\s*}(\s*){\s*name\s*(:\s*(\S*))?\s*}$/;let h;for(let c=0;c<e.length;c+=1){const o=e[c],m=o.layout;if(!m||!m["text-field"])continue;const d=this.getLayoutProperty(o.id,"text-field");let u;if(Array.isArray(d)&&d.length>=2&&d[0].trim().toLowerCase()==="concat"){u=d.slice();let n=0;for(let p=0;p<d.length;p+=1){const l=d[p];if((typeof l=="string"||l instanceof String)&&i.exec(l.toString())){if(n===1){u[p]=`{name:${t}}`;break}n+=1}else if(Array.isArray(l)&&l.length>=2&&l[0].trim().toLowerCase()==="get"&&s.exec(l[1].toString())){if(n===1){u[p][1]=`name:${t}`;break}n+=1}else if(Array.isArray(l)&&l.length===4&&l[0].trim().toLowerCase()==="case"){if(n===1){u[p]=["get",`name:${t}`];break}n+=1}}this.setLayoutProperty(o.id,"text-field",u)}else if((typeof d=="string"||d instanceof String)&&(h=g.exec(d.toString()))!==null){const n=t?`name:${t}`:"name";u=`{name${h[1]||""}}${h[3]}{${n}}`,this.setLayoutProperty(o.id,"text-field",u)}}}))}getPrimaryLanguage(){return this.primaryLanguage}getSecondaryLanguage(){return this.secondaryLanguage}getTerrainExaggeration(){return this.terrainExaggeration}hasTerrain(){return this.isTerrainEnabled}growTerrain(t,e=1e3){if(!this.terrain)return;const i=performance.now(),s=this.terrain.exaggeration,g=t-s,h=()=>{if(!this.terrain||this.terrainFlattening)return;const c=(performance.now()-i)/e;if(c<.99){const o=1-Math.pow(1-c,4),m=s+o*g;this.terrain.exaggeration=m,requestAnimationFrame(h)}else this.terrainGrowing=!1,this.terrainFlattening=!1,this.terrain.exaggeration=t;this.triggerRepaint()};this.terrainGrowing=!0,this.terrainFlattening=!1,requestAnimationFrame(h)}enableTerrain(t=this.terrainExaggeration){if(t<0){console.warn("Terrain exaggeration cannot be negative.");return}const e=s=>S(this,null,function*(){!this.terrain||s.type!=="data"||s.dataType!=="source"||!("source"in s)||s.sourceId!=="maptiler-terrain"||s.source.type!=="raster-dem"||s.isSourceLoaded&&(this.off("data",e),this.growTerrain(t))}),i=()=>{this.isTerrainEnabled=!0,this.terrainExaggeration=t,this.on("data",e),this.addSource(y.terrainSourceId,{type:"raster-dem",url:y.terrainSourceURL}),this.setTerrain({source:y.terrainSourceId,exaggeration:0})};if(this.getTerrain()){this.isTerrainEnabled=!0,this.growTerrain(t);return}this.loaded()||this.isTerrainEnabled?i():this.once("load",()=>{this.getTerrain()&&this.getSource(y.terrainSourceId)||i()})}disableTerrain(){if(!this.terrain)return;this.isTerrainEnabled=!1;const t=1*1e3,e=performance.now(),i=this.terrain.exaggeration,s=()=>{if(!this.terrain||this.terrainGrowing)return;const g=(performance.now()-e)/t;if(g<.99){const h=Math.pow(1-g,4),c=i*h;this.terrain.exaggeration=c,requestAnimationFrame(s)}else this.terrain.exaggeration=0,this.terrainGrowing=!1,this.terrainFlattening=!1,this.setTerrain(null),this.getSource(y.terrainSourceId)&&this.removeSource(y.terrainSourceId);this.triggerRepaint()};this.terrainGrowing=!1,this.terrainFlattening=!0,requestAnimationFrame(s)}setTerrainExaggeration(t,e=!0){!e&&this.terrain?(this.terrainExaggeration=t,this.terrain.exaggeration=t,this.triggerRepaint()):this.enableTerrain(t)}onStyleReady(t){this.isStyleLoaded()?t():this.once("styledata",()=>{t()})}fitToIpBounds(){return S(this,null,function*(){const t=yield w.info();this.fitBounds(t.country_bounds,{duration:0,padding:100})})}centerOnIpPoint(t){return S(this,null,function*(){const e=yield w.info();this.jumpTo({center:[e.longitude,e.latitude],zoom:t||11})})}getCameraHash(){const t=new Float32Array(5),e=this.getCenter();return t[0]=e.lng,t[1]=e.lat,t[2]=this.getZoom(),t[3]=this.getPitch(),t[4]=this.getBearing(),Q.fromUint8Array(new Uint8Array(t.buffer))}getSdkConfig(){return L}getMaptilerSessionId(){return I}setTransformRequest(t){return super.setTransformRequest(k(t)),this}}class Nt extends a.Marker{addTo(t){return super.addTo(t)}}class Pt extends a.Popup{addTo(t){return super.addTo(t)}}class Ot extends a.Style{constructor(t,e={}){super(t,e)}}class Mt extends a.CanvasSource{onAdd(t){super.onAdd(t)}}class Ut extends a.GeoJSONSource{onAdd(t){super.onAdd(t)}}class kt extends a.ImageSource{onAdd(t){super.onAdd(t)}}class Bt extends a.RasterTileSource{onAdd(t){super.onAdd(t)}}class $t extends a.RasterDEMTileSource{onAdd(t){super.onAdd(t)}}class Gt extends a.VectorTileSource{onAdd(t){super.onAdd(t)}}class Kt extends a.VideoSource{onAdd(t){super.onAdd(t)}}class jt extends a.TerrainControl{onAdd(t){return super.onAdd(t)}}class T{constructor(t,e){this.x=t,this.y=e}_matMult(t){const e=t[0]*this.x+t[1]*this.y,i=t[2]*this.x+t[3]*this.y;return this.x=e,this.y=i,this}_add(t){return this.x+=t.x,this.y+=t.y,this}_sub(t){return this.x-=t.x,this.y-=t.y,this}_mult(t){return this.x*=t,this.y*=t,this}_div(t){return this.x/=t,this.y/=t,this}_multByPoint(t){return this.x*=t.x,this.y*=t.y,this}_divByPoint(t){return this.x/=t.x,this.y/=t.y,this}_unit(){return this._div(this.mag()),this}_perp(){const t=this.y;return this.y=this.x,this.x=-t,this}_rotate(t){const e=Math.cos(t),i=Math.sin(t),s=e*this.x-i*this.y,g=i*this.x+e*this.y;return this.x=s,this.y=g,this}_rotateAround(t,e){const i=Math.cos(t),s=Math.sin(t),g=e.x+i*(this.x-e.x)-s*(this.y-e.y),h=e.y+s*(this.x-e.x)+i*(this.y-e.y);return this.x=g,this.y=h,this}_round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}clone(){return new T(this.x,this.y)}add(t){return this.clone()._add(t)}sub(t){return this.clone()._sub(t)}multByPoint(t){return this.clone()._multByPoint(t)}divByPoint(t){return this.clone()._divByPoint(t)}mult(t){return this.clone()._mult(t)}div(t){return this.clone()._div(t)}rotate(t){return this.clone()._rotate(t)}rotateAround(t,e){return this.clone()._rotateAround(t,e)}matMult(t){return this.clone()._matMult(t)}unit(){return this.clone()._unit()}perp(){return this.clone()._perp()}round(){return this.clone()._round()}mag(){return Math.sqrt(this.x*this.x+this.y*this.y)}equals(t){return this.x===t.x&&this.y===t.y}dist(t){return Math.sqrt(this.distSqr(t))}distSqr(t){const e=t.x-this.x,i=t.y-this.y;return e*e+i*i}angle(){return Math.atan2(this.y,this.x)}angleTo(t){return Math.atan2(this.y-t.y,this.x-t.x)}angleWith(t){return this.angleWithSep(t.x,t.y)}angleWithSep(t,e){return Math.atan2(this.x*e-this.y*t,this.x*t+this.y*e)}static convert(t){return t instanceof T?t:Array.isArray(t)?new T(t[0],t[1]):t}}const{setRTLTextPlugin:Ht,getRTLTextPluginStatus:Dt,LngLat:Ft,LngLatBounds:qt,MercatorCoordinate:Vt,Evented:zt,AJAXError:Wt,prewarm:Jt,clearPrewarmedResources:Zt,version:Yt,workerCount:Xt,maxParallelImageRequests:Qt,workerUrl:te,addProtocol:ee,removeProtocol:re}=a,ne=a.Map,ie=a.Marker,ae=a.Popup,oe=a.Style,se=a.CanvasSource,le=a.GeoJSONSource,ce=a.ImageSource,he=a.RasterTileSource,ue=a.RasterDEMTileSource,ge=a.VectorTileSource,de=a.VideoSource;a.NavigationControl,a.GeolocateControl,a.AttributionControl,a.LogoControl,a.ScaleControl,a.FullscreenControl,a.TerrainControl;export{Wt as AJAXError,z as AttributionControl,Mt as CanvasSource,se as CanvasSourceMLGL,zt as Evented,J as FullscreenControl,Ut as GeoJSONSource,le as GeoJSONSourceMLGL,j as GeolocateControl,X as GeolocationType,kt as ImageSource,ce as ImageSourceMLGL,f as Language,Te as LanguageGeocoding,Ft as LngLat,qt as LngLatBounds,N as LogoControl,Rt as Map,ne as MapMLGL,Ce as MapStyle,be as MapStyleVariant,V as MaptilerGeolocateControl,v as MaptilerLogoControl,K as MaptilerNavigationControl,$ as MaptilerTerrainControl,Nt as Marker,ie as MarkerMLGL,Vt as MercatorCoordinate,G as NavigationControl,T as Point,Pt as Popup,ae as PopupMLGL,$t as RasterDEMTileSource,ue as RasterDEMTileSourceMLGL,Bt as RasterTileSource,he as RasterTileSourceMLGL,ve as ReferenceMapStyle,W as ScaleControl,R as SdkConfig,we as ServiceError,Ot as Style,oe as StyleMLGL,jt as TerrainControl,Gt as VectorTileSource,ge as VectorTileSourceMLGL,Kt as VideoSource,de as VideoSourceMLGL,ee as addProtocol,Zt as clearPrewarmedResources,L as config,Ee as coordinates,Ie as data,Re as geocoding,Ne as geolocation,Dt as getRTLTextPluginStatus,Qt as maxParallelImageRequests,Jt as prewarm,re as removeProtocol,Ht as setRTLTextPlugin,Pe as staticMaps,Yt as version,Xt as workerCount,te as workerUrl};
