{"version":3,"file":"openlayers-controller.js","sources":["../node_modules/ol/AssertionError.js","../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/ol/asserts.js","../node_modules/ol/Feature.js","../node_modules/ol/has.js","../node_modules/ol/transform.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/math.js","../node_modules/ol/coordinate.js","../node_modules/ol/console.js","../node_modules/ol/proj.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/render/EventType.js","../node_modules/ol/style/Fill.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/ImageState.js","../node_modules/ol/size.js","../node_modules/ol/style/Image.js","../node_modules/ol/color.js","../node_modules/ol/colorlike.js","../node_modules/ol/dom.js","../node_modules/ol/css.js","../node_modules/ol/render/canvas.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/easing.js","../node_modules/ol/View.js","../node_modules/ol/layer/Layer.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/flat.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/render/Event.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/Source.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/@turf/helpers/dist/es/index.js","../node_modules/@turf/meta/dist/es/index.js","../node_modules/@turf/bbox/dist/es/index.js","../node_modules/@turf/center/dist/es/index.js","../node_modules/turf-jsts/jsts.mjs","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/polygon.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/@turf/buffer/dist/es/index.js","../node_modules/splaytree/dist/splay.esm.js","../node_modules/polygon-clipping/dist/polygon-clipping.esm.js","../node_modules/@turf/invariant/dist/es/index.js","../node_modules/@turf/difference/dist/es/index.js","../src/mask.ts","../src/openlayers-controller.ts"],"sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n","import bbox from \"@turf/bbox\";\nimport { point, } from \"@turf/helpers\";\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.points([\n *   [-97.522259, 35.4691],\n *   [-97.502754, 35.463455],\n *   [-97.508269, 35.463245]\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var ext = bbox(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return point([x, y], options.properties, options);\n}\nexport default center;\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","export default function(x) {\n  return x;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import center from '@turf/center';\nimport { GeoJSONReader, BufferOp, GeoJSONWriter } from 'turf-jsts';\nimport { featureEach, geomEach } from '@turf/meta';\nimport { geoAzimuthalEquidistant } from 'd3-geo';\nimport { featureCollection, earthRadius, radiansToLength, lengthToRadians, feature } from '@turf/helpers';\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=8] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer(geojson, radius, options) {\n  // Optional params\n  options = options || {};\n\n  // use user supplied options or default values\n  var units = options.units || \"kilometers\";\n  var steps = options.steps || 8;\n\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (typeof options !== \"object\") throw new Error(\"options must be an object\");\n  if (typeof steps !== \"number\") throw new Error(\"steps must be an number\");\n\n  // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n  if (radius === undefined) throw new Error(\"radius is required\");\n  if (steps <= 0) throw new Error(\"steps must be greater than 0\");\n\n  var results = [];\n  switch (geojson.type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        var buffered = bufferFeature(geometry, radius, units, steps);\n        if (buffered) results.push(buffered);\n      });\n      return featureCollection(results);\n    case \"FeatureCollection\":\n      featureEach(geojson, function (feature) {\n        var multiBuffered = bufferFeature(feature, radius, units, steps);\n        if (multiBuffered) {\n          featureEach(multiBuffered, function (buffered) {\n            if (buffered) results.push(buffered);\n          });\n        }\n      });\n      return featureCollection(results);\n  }\n  return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=8] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n  var properties = geojson.properties || {};\n  var geometry = geojson.type === \"Feature\" ? geojson.geometry : geojson;\n\n  // Geometry Types faster than jsts\n  if (geometry.type === \"GeometryCollection\") {\n    var results = [];\n    geomEach(geojson, function (geometry) {\n      var buffered = bufferFeature(geometry, radius, units, steps);\n      if (buffered) results.push(buffered);\n    });\n    return featureCollection(results);\n  }\n\n  // Project GeoJSON to Azimuthal Equidistant projection (convert to Meters)\n  var projection = defineProjection(geometry);\n  var projected = {\n    type: geometry.type,\n    coordinates: projectCoords(geometry.coordinates, projection),\n  };\n\n  // JSTS buffer operation\n  var reader = new GeoJSONReader();\n  var geom = reader.read(projected);\n  var distance = radiansToLength(lengthToRadians(radius, units), \"meters\");\n  var buffered = BufferOp.bufferOp(geom, distance, steps);\n  var writer = new GeoJSONWriter();\n  buffered = writer.write(buffered);\n\n  // Detect if empty geometries\n  if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n  // Unproject coordinates (convert to Degrees)\n  var result = {\n    type: buffered.type,\n    coordinates: unprojectCoords(buffered.coordinates, projection),\n  };\n\n  return feature(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n  if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n  return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj(coords);\n  return coords.map(function (coord) {\n    return projectCoords(coord, proj);\n  });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj.invert(coords);\n  return coords.map(function (coord) {\n    return unprojectCoords(coord, proj);\n  });\n}\n\n/**\n * Define Azimuthal Equidistant projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Azimuthal Equidistant Projection\n */\nfunction defineProjection(geojson) {\n  var coords = center(geojson).geometry.coordinates;\n  var rotation = [-coords[0], -coords[1]];\n  return geoAzimuthalEquidistant().rotate(rotation).scale(earthRadius);\n}\n\nexport default buffer;\n","/**\n * splaytree v3.1.1\n * Fast Splay tree for Node and browser\n *\n * @author Alexander Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar Node = /** @class */ (function () {\r\n    function Node(key, data) {\r\n        this.next = null;\r\n        this.key = key;\r\n        this.data = data;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n    return Node;\r\n}());\n\n/* follows \"An implementation of top-down splaying\"\r\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n */\r\nfunction DEFAULT_COMPARE(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n/**\r\n * Simple top down splay, not requiring i to be in the tree t.\r\n */\r\nfunction splay(i, t, comparator) {\r\n    var N = new Node(null, null);\r\n    var l = N;\r\n    var r = N;\r\n    while (true) {\r\n        var cmp = comparator(i, t.key);\r\n        //if (i < t.key) {\r\n        if (cmp < 0) {\r\n            if (t.left === null)\r\n                break;\r\n            //if (i < t.left.key) {\r\n            if (comparator(i, t.left.key) < 0) {\r\n                var y = t.left; /* rotate right */\r\n                t.left = y.right;\r\n                y.right = t;\r\n                t = y;\r\n                if (t.left === null)\r\n                    break;\r\n            }\r\n            r.left = t; /* link right */\r\n            r = t;\r\n            t = t.left;\r\n            //} else if (i > t.key) {\r\n        }\r\n        else if (cmp > 0) {\r\n            if (t.right === null)\r\n                break;\r\n            //if (i > t.right.key) {\r\n            if (comparator(i, t.right.key) > 0) {\r\n                var y = t.right; /* rotate left */\r\n                t.right = y.left;\r\n                y.left = t;\r\n                t = y;\r\n                if (t.right === null)\r\n                    break;\r\n            }\r\n            l.right = t; /* link left */\r\n            l = t;\r\n            t = t.right;\r\n        }\r\n        else\r\n            break;\r\n    }\r\n    /* assemble */\r\n    l.right = t.left;\r\n    r.left = t.right;\r\n    t.left = N.right;\r\n    t.right = N.left;\r\n    return t;\r\n}\r\nfunction insert(i, data, t, comparator) {\r\n    var node = new Node(i, data);\r\n    if (t === null) {\r\n        node.left = node.right = null;\r\n        return node;\r\n    }\r\n    t = splay(i, t, comparator);\r\n    var cmp = comparator(i, t.key);\r\n    if (cmp < 0) {\r\n        node.left = t.left;\r\n        node.right = t;\r\n        t.left = null;\r\n    }\r\n    else if (cmp >= 0) {\r\n        node.right = t.right;\r\n        node.left = t;\r\n        t.right = null;\r\n    }\r\n    return node;\r\n}\r\nfunction split(key, v, comparator) {\r\n    var left = null;\r\n    var right = null;\r\n    if (v) {\r\n        v = splay(key, v, comparator);\r\n        var cmp = comparator(v.key, key);\r\n        if (cmp === 0) {\r\n            left = v.left;\r\n            right = v.right;\r\n        }\r\n        else if (cmp < 0) {\r\n            right = v.right;\r\n            v.right = null;\r\n            left = v;\r\n        }\r\n        else {\r\n            left = v.left;\r\n            v.left = null;\r\n            right = v;\r\n        }\r\n    }\r\n    return { left: left, right: right };\r\n}\r\nfunction merge(left, right, comparator) {\r\n    if (right === null)\r\n        return left;\r\n    if (left === null)\r\n        return right;\r\n    right = splay(left.key, right, comparator);\r\n    right.left = left;\r\n    return right;\r\n}\r\n/**\r\n * Prints level of the tree\r\n */\r\nfunction printRow(root, prefix, isTail, out, printNode) {\r\n    if (root) {\r\n        out(\"\" + prefix + (isTail ? '└── ' : '├── ') + printNode(root) + \"\\n\");\r\n        var indent = prefix + (isTail ? '    ' : '│   ');\r\n        if (root.left)\r\n            printRow(root.left, indent, false, out, printNode);\r\n        if (root.right)\r\n            printRow(root.right, indent, true, out, printNode);\r\n    }\r\n}\r\nvar Tree = /** @class */ (function () {\r\n    function Tree(comparator) {\r\n        if (comparator === void 0) { comparator = DEFAULT_COMPARE; }\r\n        this._root = null;\r\n        this._size = 0;\r\n        this._comparator = comparator;\r\n    }\r\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\r\n    Tree.prototype.insert = function (key, data) {\r\n        this._size++;\r\n        return this._root = insert(key, data, this._root, this._comparator);\r\n    };\r\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\r\n    Tree.prototype.add = function (key, data) {\r\n        var node = new Node(key, data);\r\n        if (this._root === null) {\r\n            node.left = node.right = null;\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        var comparator = this._comparator;\r\n        var t = splay(key, this._root, comparator);\r\n        var cmp = comparator(key, t.key);\r\n        if (cmp === 0)\r\n            this._root = t;\r\n        else {\r\n            if (cmp < 0) {\r\n                node.left = t.left;\r\n                node.right = t;\r\n                t.left = null;\r\n            }\r\n            else if (cmp > 0) {\r\n                node.right = t.right;\r\n                node.left = t;\r\n                t.right = null;\r\n            }\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        return this._root;\r\n    };\r\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\r\n    Tree.prototype.remove = function (key) {\r\n        this._root = this._remove(key, this._root, this._comparator);\r\n    };\r\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\r\n    Tree.prototype._remove = function (i, t, comparator) {\r\n        var x;\r\n        if (t === null)\r\n            return null;\r\n        t = splay(i, t, comparator);\r\n        var cmp = comparator(i, t.key);\r\n        if (cmp === 0) { /* found it */\r\n            if (t.left === null) {\r\n                x = t.right;\r\n            }\r\n            else {\r\n                x = splay(i, t.left, comparator);\r\n                x.right = t.right;\r\n            }\r\n            this._size--;\r\n            return x;\r\n        }\r\n        return t; /* It wasn't there */\r\n    };\r\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\r\n    Tree.prototype.pop = function () {\r\n        var node = this._root;\r\n        if (node) {\r\n            while (node.left)\r\n                node = node.left;\r\n            this._root = splay(node.key, this._root, this._comparator);\r\n            this._root = this._remove(node.key, this._root, this._comparator);\r\n            return { key: node.key, data: node.data };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Find without splaying\r\n     */\r\n    Tree.prototype.findStatic = function (key) {\r\n        var current = this._root;\r\n        var compare = this._comparator;\r\n        while (current) {\r\n            var cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return current;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return null;\r\n    };\r\n    Tree.prototype.find = function (key) {\r\n        if (this._root) {\r\n            this._root = splay(key, this._root, this._comparator);\r\n            if (this._comparator(key, this._root.key) !== 0)\r\n                return null;\r\n        }\r\n        return this._root;\r\n    };\r\n    Tree.prototype.contains = function (key) {\r\n        var current = this._root;\r\n        var compare = this._comparator;\r\n        while (current) {\r\n            var cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return true;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return false;\r\n    };\r\n    Tree.prototype.forEach = function (visitor, ctx) {\r\n        var current = this._root;\r\n        var Q = []; /* Initialize stack s */\r\n        var done = false;\r\n        while (!done) {\r\n            if (current !== null) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length !== 0) {\r\n                    current = Q.pop();\r\n                    visitor.call(ctx, current);\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\r\n    Tree.prototype.range = function (low, high, fn, ctx) {\r\n        var Q = [];\r\n        var compare = this._comparator;\r\n        var node = this._root;\r\n        var cmp;\r\n        while (Q.length !== 0 || node) {\r\n            if (node) {\r\n                Q.push(node);\r\n                node = node.left;\r\n            }\r\n            else {\r\n                node = Q.pop();\r\n                cmp = compare(node.key, high);\r\n                if (cmp > 0) {\r\n                    break;\r\n                }\r\n                else if (compare(node.key, low) >= 0) {\r\n                    if (fn.call(ctx, node))\r\n                        return this; // stop if smth is returned\r\n                }\r\n                node = node.right;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns array of keys\r\n     */\r\n    Tree.prototype.keys = function () {\r\n        var keys = [];\r\n        this.forEach(function (_a) {\r\n            var key = _a.key;\r\n            return keys.push(key);\r\n        });\r\n        return keys;\r\n    };\r\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\r\n    Tree.prototype.values = function () {\r\n        var values = [];\r\n        this.forEach(function (_a) {\r\n            var data = _a.data;\r\n            return values.push(data);\r\n        });\r\n        return values;\r\n    };\r\n    Tree.prototype.min = function () {\r\n        if (this._root)\r\n            return this.minNode(this._root).key;\r\n        return null;\r\n    };\r\n    Tree.prototype.max = function () {\r\n        if (this._root)\r\n            return this.maxNode(this._root).key;\r\n        return null;\r\n    };\r\n    Tree.prototype.minNode = function (t) {\r\n        if (t === void 0) { t = this._root; }\r\n        if (t)\r\n            while (t.left)\r\n                t = t.left;\r\n        return t;\r\n    };\r\n    Tree.prototype.maxNode = function (t) {\r\n        if (t === void 0) { t = this._root; }\r\n        if (t)\r\n            while (t.right)\r\n                t = t.right;\r\n        return t;\r\n    };\r\n    /**\r\n     * Returns node at given index\r\n     */\r\n    Tree.prototype.at = function (index) {\r\n        var current = this._root;\r\n        var done = false;\r\n        var i = 0;\r\n        var Q = [];\r\n        while (!done) {\r\n            if (current) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length > 0) {\r\n                    current = Q.pop();\r\n                    if (i === index)\r\n                        return current;\r\n                    i++;\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Tree.prototype.next = function (d) {\r\n        var root = this._root;\r\n        var successor = null;\r\n        if (d.right) {\r\n            successor = d.right;\r\n            while (successor.left)\r\n                successor = successor.left;\r\n            return successor;\r\n        }\r\n        var comparator = this._comparator;\r\n        while (root) {\r\n            var cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0) {\r\n                successor = root;\r\n                root = root.left;\r\n            }\r\n            else\r\n                root = root.right;\r\n        }\r\n        return successor;\r\n    };\r\n    Tree.prototype.prev = function (d) {\r\n        var root = this._root;\r\n        var predecessor = null;\r\n        if (d.left !== null) {\r\n            predecessor = d.left;\r\n            while (predecessor.right)\r\n                predecessor = predecessor.right;\r\n            return predecessor;\r\n        }\r\n        var comparator = this._comparator;\r\n        while (root) {\r\n            var cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0)\r\n                root = root.left;\r\n            else {\r\n                predecessor = root;\r\n                root = root.right;\r\n            }\r\n        }\r\n        return predecessor;\r\n    };\r\n    Tree.prototype.clear = function () {\r\n        this._root = null;\r\n        this._size = 0;\r\n        return this;\r\n    };\r\n    Tree.prototype.toList = function () {\r\n        return toList(this._root);\r\n    };\r\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\r\n    Tree.prototype.load = function (keys, values, presort) {\r\n        if (values === void 0) { values = []; }\r\n        if (presort === void 0) { presort = false; }\r\n        var size = keys.length;\r\n        var comparator = this._comparator;\r\n        // sort if needed\r\n        if (presort)\r\n            sort(keys, values, 0, size - 1, comparator);\r\n        if (this._root === null) { // empty tree\r\n            this._root = loadRecursive(keys, values, 0, size);\r\n            this._size = size;\r\n        }\r\n        else { // that re-builds the whole tree from two in-order traversals\r\n            var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\r\n            size = this._size + size;\r\n            this._root = sortedListToBST({ head: mergedList }, 0, size);\r\n        }\r\n        return this;\r\n    };\r\n    Tree.prototype.isEmpty = function () { return this._root === null; };\r\n    Object.defineProperty(Tree.prototype, \"size\", {\r\n        get: function () { return this._size; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tree.prototype, \"root\", {\r\n        get: function () { return this._root; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Tree.prototype.toString = function (printNode) {\r\n        if (printNode === void 0) { printNode = function (n) { return String(n.key); }; }\r\n        var out = [];\r\n        printRow(this._root, '', true, function (v) { return out.push(v); }, printNode);\r\n        return out.join('');\r\n    };\r\n    Tree.prototype.update = function (key, newKey, newData) {\r\n        var comparator = this._comparator;\r\n        var _a = split(key, this._root, comparator), left = _a.left, right = _a.right;\r\n        if (comparator(key, newKey) < 0) {\r\n            right = insert(newKey, newData, right, comparator);\r\n        }\r\n        else {\r\n            left = insert(newKey, newData, left, comparator);\r\n        }\r\n        this._root = merge(left, right, comparator);\r\n    };\r\n    Tree.prototype.split = function (key) {\r\n        return split(key, this._root, this._comparator);\r\n    };\r\n    Tree.prototype[Symbol.iterator] = function () {\r\n        var n;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    n = this.minNode();\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!n) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, n];\r\n                case 2:\r\n                    _a.sent();\r\n                    n = this.next(n);\r\n                    return [3 /*break*/, 1];\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    return Tree;\r\n}());\r\nfunction loadRecursive(keys, values, start, end) {\r\n    var size = end - start;\r\n    if (size > 0) {\r\n        var middle = start + Math.floor(size / 2);\r\n        var key = keys[middle];\r\n        var data = values[middle];\r\n        var node = new Node(key, data);\r\n        node.left = loadRecursive(keys, values, start, middle);\r\n        node.right = loadRecursive(keys, values, middle + 1, end);\r\n        return node;\r\n    }\r\n    return null;\r\n}\r\nfunction createList(keys, values) {\r\n    var head = new Node(null, null);\r\n    var p = head;\r\n    for (var i = 0; i < keys.length; i++) {\r\n        p = p.next = new Node(keys[i], values[i]);\r\n    }\r\n    p.next = null;\r\n    return head.next;\r\n}\r\nfunction toList(root) {\r\n    var current = root;\r\n    var Q = [];\r\n    var done = false;\r\n    var head = new Node(null, null);\r\n    var p = head;\r\n    while (!done) {\r\n        if (current) {\r\n            Q.push(current);\r\n            current = current.left;\r\n        }\r\n        else {\r\n            if (Q.length > 0) {\r\n                current = p = p.next = Q.pop();\r\n                current = current.right;\r\n            }\r\n            else\r\n                done = true;\r\n        }\r\n    }\r\n    p.next = null; // that'll work even if the tree was empty\r\n    return head.next;\r\n}\r\nfunction sortedListToBST(list, start, end) {\r\n    var size = end - start;\r\n    if (size > 0) {\r\n        var middle = start + Math.floor(size / 2);\r\n        var left = sortedListToBST(list, start, middle);\r\n        var root = list.head;\r\n        root.left = left;\r\n        list.head = list.head.next;\r\n        root.right = sortedListToBST(list, middle + 1, end);\r\n        return root;\r\n    }\r\n    return null;\r\n}\r\nfunction mergeLists(l1, l2, compare) {\r\n    var head = new Node(null, null); // dummy\r\n    var p = head;\r\n    var p1 = l1;\r\n    var p2 = l2;\r\n    while (p1 !== null && p2 !== null) {\r\n        if (compare(p1.key, p2.key) < 0) {\r\n            p.next = p1;\r\n            p1 = p1.next;\r\n        }\r\n        else {\r\n            p.next = p2;\r\n            p2 = p2.next;\r\n        }\r\n        p = p.next;\r\n    }\r\n    if (p1 !== null) {\r\n        p.next = p1;\r\n    }\r\n    else if (p2 !== null) {\r\n        p.next = p2;\r\n    }\r\n    return head.next;\r\n}\r\nfunction sort(keys, values, left, right, compare) {\r\n    if (left >= right)\r\n        return;\r\n    var pivot = keys[(left + right) >> 1];\r\n    var i = left - 1;\r\n    var j = right + 1;\r\n    while (true) {\r\n        do\r\n            i++;\r\n        while (compare(keys[i], pivot) < 0);\r\n        do\r\n            j--;\r\n        while (compare(keys[j], pivot) > 0);\r\n        if (i >= j)\r\n            break;\r\n        var tmp = keys[i];\r\n        keys[i] = keys[j];\r\n        keys[j] = tmp;\r\n        tmp = values[i];\r\n        values[i] = values[j];\r\n        values[j] = tmp;\r\n    }\r\n    sort(keys, values, left, j, compare);\r\n    sort(keys, values, j + 1, right, compare);\r\n}\n\nexport default Tree;\n//# sourceMappingURL=splay.esm.js.map\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  var ab = a - b;\n\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder = /*#__PURE__*/function () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder = /*#__PURE__*/function () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\nvar SweepEvent = /*#__PURE__*/function () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment = /*#__PURE__*/function () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n      }\n\n      if (arx !== brx) {\n        // are these two [almost] vertical segments with opposite orientation?\n        // if so, the one with the lower right endpoint comes first\n        var ay = ary - aly;\n        var ax = arx - alx;\n        var by = bry - bly;\n        var bx = brx - blx;\n        if (ay > ax && by < bx) return 1;\n        if (ay < ax && by > bx) return -1;\n      } // we have colinear segments with matching orientation\n      // consider the one with more left-more right endpoint to be first\n\n\n      if (arx > brx) return 1;\n      if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, rings, windings) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point.\n     *\n     * A point P is considered to be colinear to a segment if there\n     * exists a distance D such that if we travel along the segment\n     * from one * endpoint towards the other a distance D, we find\n     * ourselves at point P.\n     *\n     * Return value indicates:\n     *\n     *   1: point lies above the segment (to the left of vertical)\n     *   0: point is colinear to segment\n     *  -1: point lies below the segment (to the right of vertical)\n     */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var lPt = this.leftSE.point;\n      var rPt = this.rightSE.point;\n      var v = this.vector(); // Exactly vertical segments.\n\n      if (lPt.x === rPt.x) {\n        if (point.x === lPt.x) return 0;\n        return point.x < lPt.x ? 1 : -1;\n      } // Nearly vertical segments with an intersection.\n      // Check to see where a point on the line with matching Y coordinate is.\n\n\n      var yDist = (point.y - lPt.y) / v.y;\n      var xFromYDist = lPt.x + yDist * v.x;\n      if (point.x === xFromYDist) return 0; // General case.\n      // Check to see where a point on the line with matching X coordinate is.\n\n      var xDist = (point.x - lPt.x) / v.x;\n      var yFromXDist = lPt.y + xDist * v.y;\n      if (point.y === yFromXDist) return 0;\n      return point.y < yFromXDist ? -1 : 1;\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var tBbox = this.bbox();\n      var oBbox = other.bbox();\n      var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      var tlp = this.leftSE.point;\n      var trp = this.rightSE.point;\n      var olp = other.leftSE.point;\n      var orp = other.rightSE.point; // does each endpoint touch the other segment?\n      // note that we restrict the 'touching' definition to only allow segments\n      // to touch endpoints that lie forward from where we are in the sweep line pass\n\n      var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n      var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n      var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n      var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return trp;\n        if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE) {\n          if (tlp.x === orp.x && tlp.y === orp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return tlp;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE) {\n          if (trp.x === olp.x && trp.y === olp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return olp;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return trp;\n      if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n      // sometimes one of the resulting new segments is vertical, in which\n      // case its left and right events may need to be swapped\n\n      if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n        newSeg.swapEvents();\n      }\n\n      if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n        this.swapEvents();\n      } // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Swap which event is left and right */\n\n  }, {\n    key: \"swapEvents\",\n    value: function swapEvents() {\n      var tmpEvt = this.rightSE;\n      this.rightSE = this.leftSE;\n      this.leftSE = tmpEvt;\n      this.leftSE.isLeft = true;\n      this.rightSE.isLeft = false;\n\n      for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n        this.windings[i] *= -1;\n      }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp = Segment.compare(consumer, consumee);\n      if (cmp === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n        var ring = consumee.rings[i];\n        var winding = consumee.windings[i];\n        var index = consumer.rings.indexOf(ring);\n\n        if (index === -1) {\n          consumer.rings.push(ring);\n          consumer.windings.push(winding);\n        } else consumer.windings[index] += winding;\n      }\n\n      consumee.rings = null;\n      consumee.windings = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      if (this._prevInResult !== undefined) return this._prevInResult;\n      if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n      return this._prevInResult;\n    }\n  }, {\n    key: \"beforeState\",\n    value: function beforeState() {\n      if (this._beforeState !== undefined) return this._beforeState;\n      if (!this.prev) this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };else {\n        var seg = this.prev.consumedBy || this.prev;\n        this._beforeState = seg.afterState();\n      }\n      return this._beforeState;\n    }\n  }, {\n    key: \"afterState\",\n    value: function afterState() {\n      if (this._afterState !== undefined) return this._afterState;\n      var beforeState = this.beforeState();\n      this._afterState = {\n        rings: beforeState.rings.slice(0),\n        windings: beforeState.windings.slice(0),\n        multiPolys: []\n      };\n      var ringsAfter = this._afterState.rings;\n      var windingsAfter = this._afterState.windings;\n      var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n      for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n        var ring = this.rings[i];\n        var winding = this.windings[i];\n        var index = ringsAfter.indexOf(ring);\n\n        if (index === -1) {\n          ringsAfter.push(ring);\n          windingsAfter.push(winding);\n        } else windingsAfter[index] += winding;\n      } // calcualte polysAfter\n\n\n      var polysAfter = [];\n      var polysExclude = [];\n\n      for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n        if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n        var _ring = ringsAfter[_i];\n        var poly = _ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (_ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n          var _index = polysAfter.indexOf(_ring.poly);\n\n          if (_index !== -1) polysAfter.splice(_index, 1);\n        }\n      } // calculate multiPolysAfter\n\n\n      for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n        var mp = polysAfter[_i2].multiPoly;\n        if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n      }\n\n      return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      if (this._isInResult !== undefined) return this._isInResult;\n      var mpsBefore = this.beforeState().multiPolys;\n      var mpsAfter = this.afterState().multiPolys;\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            this._isInResult = noBefores !== noAfters;\n            break;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            this._isInResult = most === operation.numMultiPolys && least < most;\n            break;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            this._isInResult = diff % 2 === 1;\n            break;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n            break;\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n\n      return this._isInResult;\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n        winding = 1;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n        winding = -1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn = /*#__PURE__*/function () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n\n    if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n    this.bbox = {\n      ll: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      },\n      ur: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      }\n    };\n    var prevPoint = firstPoint;\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n      if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    } // add segment from last to first if last is not the same as first\n\n\n    if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn = /*#__PURE__*/function () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    if (!Array.isArray(geomPoly)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      var ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn = /*#__PURE__*/function () {\n  function MultiPolyIn(geom, isSubject) {\n    _classCallCheck(this, MultiPolyIn);\n\n    if (!Array.isArray(geom)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    try {\n      // if the input looks like a polygon, convert it to a multipolygon\n      if (typeof geom[0][0][0] === 'number') geom = [geom];\n    } catch (ex) {// The input is either malformed or has empty arrays.\n      // In either case, it will be handled later on.\n    }\n\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n\n    for (var i = 0, iMax = geom.length; i < iMax; i++) {\n      var poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n\n    this.isSubject = isSubject;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut = /*#__PURE__*/function () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut = /*#__PURE__*/function () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut = /*#__PURE__*/function () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine = /*#__PURE__*/function () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\nvar POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\nvar Operation = /*#__PURE__*/function () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Convert inputs to MultiPoly objects */\n\n      var multipolys = [new MultiPolyIn(geom, true)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n      }\n\n      operation.numMultiPolys = multipolys.length;\n      /* BBox optimization for difference operation\n       * If the bbox of a multipolygon that's part of the clipping doesn't\n       * intersect the bbox of the subject at all, we can just drop that\n       * multiploygon. */\n\n      if (operation.type === 'difference') {\n        // in place removal\n        var subject = multipolys[0];\n        var _i = 1;\n\n        while (_i < multipolys.length) {\n          if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n        }\n      }\n      /* BBox optimization for intersection operation\n       * If we can find any pair of multipolygons whose bbox does not overlap,\n       * then the result will be empty. */\n\n\n      if (operation.type === 'intersection') {\n        // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n        //       it could be optimized to O(n * ln(n))\n        for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n          var mpA = multipolys[_i2];\n\n          for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n          }\n        }\n      }\n      /* Put segment endpoints in a priority queue */\n\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n          queue.insert(sweepEvents[_j]);\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n          }\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          var seg = evt.segment;\n          throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n        }\n\n        if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n        }\n\n        if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import polygonClipping from 'polygon-clipping';\nimport { polygon, multiPolygon } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n  var geom1 = getGeom(polygon1);\n  var geom2 = getGeom(polygon2);\n  var properties = polygon1.properties || {};\n\n  var differenced = polygonClipping.difference(\n    geom1.coordinates,\n    geom2.coordinates\n  );\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return polygon(differenced[0], properties);\n  return multiPolygon(differenced, properties);\n}\n\nexport default difference;\n","import buffer from \"@turf/buffer\";\nimport difference from \"@turf/difference\";\nimport type {\n  MultiPolygon,\n  Polygon,\n  Position,\n  Feature as TurfFeature,\n} from \"@turf/helpers\";\nimport type { FeatureCollection } from \"geojson\";\n\n// see https://maplibre.org/maplibre-gl-js-docs/example/line-across-180th-meridian/\nfunction fixRing(ring: Position[]) {\n  let prev: Position | undefined = undefined;\n\n  for (const c of ring) {\n    if (prev && c[0] - prev[0] >= 180) {\n      c[0] -= 360;\n    } else if (prev && c[0] - prev[0] < -180) {\n      c[0] += 360;\n    }\n\n    prev = c;\n  }\n}\n\nexport function setMask(\n  picked: TurfFeature<Polygon | MultiPolygon>,\n  setData: (data: FeatureCollection<Polygon | MultiPolygon>) => void,\n) {\n  const diff = difference(\n    {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [180, 90],\n          [-180, 90],\n          [-180, -90],\n          [180, -90],\n          [180, 90],\n        ],\n      ],\n    },\n    picked,\n  );\n\n  if (!diff) {\n    return;\n  }\n\n  diff.properties = { isMask: \"y\" };\n\n  const fixed = buffer(picked, 0);\n\n  if (fixed.geometry.type === \"Polygon\") {\n    for (const ring of fixed.geometry.coordinates) {\n      fixRing(ring);\n    }\n  } else {\n    for (const poly of fixed.geometry.coordinates) {\n      for (const ring of poly) {\n        fixRing(ring);\n      }\n    }\n  }\n\n  setData({\n    type: \"FeatureCollection\",\n    features: [fixed, diff],\n  });\n}\n","import type { MultiPolygon, Polygon } from \"@turf/helpers\";\nimport type { FeatureCollection } from \"geojson\";\nimport { Feature, MapBrowserEvent } from \"ol\";\nimport type { FeatureLike } from \"ol/Feature\";\nimport type Map from \"ol/Map\";\nimport type { AnimationOptions, FitOptions } from \"ol/View\";\nimport {\n  Geometry as OlGeometry,\n  GeometryCollection as OlGeometryCollection,\n  LineString as OlLineString,\n  MultiLineString as OlMultiLineString,\n  MultiPolygon as OlMultiPolygon,\n  Polygon as OlPolygon,\n  Point,\n} from \"ol/geom\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport { fromLonLat, toLonLat, transformExtent } from \"ol/proj\";\nimport VectorSource from \"ol/source/Vector\";\nimport Fill from \"ol/style/Fill\";\nimport Icon from \"ol/style/Icon\";\nimport Stroke from \"ol/style/Stroke\";\nimport Style, { type StyleLike } from \"ol/style/Style\";\nimport Text from \"ol/style/Text\";\nimport type { FlatStyleLike } from \"ol/style/flat\";\nimport { setMask } from \"./mask\";\nimport type {\n  BBox,\n  Feature as FeatureType,\n  MapController,\n  MapEvent,\n  Position,\n} from \"./types\";\n\nconst EPSG_4326 = \"EPSG:4326\";\n\nfunction defaultStyle(feature: FeatureLike) {\n  const properties = feature.getProperties();\n\n  const { isMask } = properties;\n\n  const type = feature.getGeometry()?.getType();\n\n  const weight = isMask\n    ? 0\n    : type === \"LineString\" || type === \"MultiLineString\"\n    ? 3\n    : 2;\n\n  return new Style({\n    stroke: isMask\n      ? undefined\n      : new Stroke({\n          color: \"#3170fe\",\n          lineDash: [weight, weight],\n          width: weight,\n          lineCap: \"butt\",\n        }),\n    fill: isMask\n      ? new Fill({\n          color: \"#00000020\",\n        })\n      : undefined,\n    image: new Icon({\n      src: `/icons/marker_${\n        properties.isReverse\n          ? \"reverse\"\n          : properties.isSelected\n          ? \"selected\"\n          : \"unselected\"\n      }.svg`,\n      anchor: [0.5, 1],\n    }),\n    zIndex: properties.isSelected ? 2 : properties.isReverse ? 0 : 1,\n    text:\n      properties.isSelected && properties.tooltip\n        ? new Text({\n            backgroundFill: new Fill({ color: \"white\" }),\n            text: properties.tooltip,\n            offsetY: -40,\n            backgroundStroke: new Stroke({\n              color: \"white\",\n              lineJoin: \"round\",\n              width: 3,\n            }),\n            padding: [2, 0, 0, 2],\n          })\n        : undefined,\n  });\n}\n\nexport function createOpenLayersMapController(\n  map: Map,\n  flyToOptions: AnimationOptions = {},\n  flyToBounds: FitOptions = {},\n  fullGeometryStyle: StyleLike | FlatStyleLike = defaultStyle,\n) {\n  let prevSelected = -1;\n\n  let prevHovered: string | undefined;\n\n  let eventHandler: ((e: MapEvent) => void) | undefined;\n\n  let reverseMarker: Feature | undefined;\n\n  let indicatingReverse = false;\n\n  const vectorLayer = new VectorLayer({\n    updateWhileAnimating: true,\n  });\n\n  map.addLayer(vectorLayer);\n\n  const source = new VectorSource({});\n\n  vectorLayer.setSource(source);\n\n  vectorLayer.setStyle(fullGeometryStyle);\n\n  map.on(\"click\", (e) => {\n    map.forEachFeatureAtPixel(e.pixel, (feature) => {\n      const id = feature.getId() as string;\n\n      if (!id) {\n        return;\n      }\n\n      e.stopPropagation();\n\n      eventHandler?.({ type: \"markerClick\", id });\n\n      return feature;\n    });\n  });\n\n  map.on(\"pointermove\", (e) => {\n    const featureId = map.forEachFeatureAtPixel(e.pixel, (feature) => {\n      return feature.getId() as string | undefined;\n    });\n\n    if (prevHovered === featureId) {\n      return;\n    }\n\n    if (prevHovered) {\n      eventHandler?.({\n        type: \"markerMouseLeave\",\n        id: prevHovered,\n      });\n    }\n\n    if (featureId) {\n      eventHandler?.({\n        type: \"markerMouseEnter\",\n        id: featureId,\n      });\n    }\n\n    map.getTargetElement().style.cursor = featureId\n      ? \"pointer\"\n      : indicatingReverse\n      ? \"crosshair\"\n      : \"\";\n\n    prevHovered = featureId;\n  });\n\n  function fromWgs84(geometry: OlGeometry) {\n    return geometry.transform(EPSG_4326, map.getView().getProjection());\n  }\n\n  const handleMapClick = (e: MapBrowserEvent<PointerEvent>) => {\n    eventHandler?.({\n      type: \"mapClick\",\n      coordinates: toLonLat(e.coordinate, map.getView().getProjection()) as [\n        number,\n        number,\n      ],\n    });\n  };\n\n  return {\n    setEventHandler(handler: undefined | ((e: MapEvent) => void)): void {\n      if (handler) {\n        eventHandler = handler;\n        map.on(\"click\", handleMapClick);\n      } else {\n        eventHandler = undefined;\n        map.un(\"click\", handleMapClick);\n      }\n    },\n\n    flyTo(center: Position, zoom: number) {\n      map.getView().animate({\n        center: fromLonLat(center, map.getView().getProjection()),\n        zoom,\n        duration: 2000,\n        ...flyToOptions,\n      });\n    },\n\n    fitBounds(bbox: BBox, padding: number, maxZoom: number): void {\n      map\n        .getView()\n        .fit(transformExtent(bbox, EPSG_4326, map.getView().getProjection()), {\n          padding: [padding, padding, padding, padding],\n          maxZoom,\n          duration: 2000,\n          ...flyToBounds,\n        });\n    },\n\n    indicateReverse(reverse: boolean): void {\n      indicatingReverse = reverse;\n\n      map.getTargetElement().style.cursor = reverse ? \"crosshair\" : \"\";\n    },\n\n    setReverseMarker(coordinates?: Position) {\n      if (reverseMarker) {\n        if (!coordinates) {\n          source.removeFeature(reverseMarker);\n\n          reverseMarker.dispose();\n\n          reverseMarker = undefined;\n        } else {\n          (reverseMarker.getGeometry() as Point).setCoordinates(\n            fromLonLat(coordinates, map.getView().getProjection()),\n          );\n        }\n      } else if (coordinates) {\n        reverseMarker = new Feature(\n          new Point(fromLonLat(coordinates, map.getView().getProjection())),\n        );\n\n        reverseMarker.setProperties({ isReverse: true });\n\n        source.addFeature(reverseMarker);\n      }\n    },\n\n    setMarkers(\n      markedFeatures: FeatureType[] | undefined,\n      picked: FeatureType | undefined,\n    ): void {\n      function setData(data?: FeatureCollection<Polygon | MultiPolygon>) {\n        if (!data) {\n          return;\n        }\n\n        for (const f of data.features) {\n          const geom =\n            f.geometry.type === \"Polygon\"\n              ? new OlPolygon(f.geometry.coordinates)\n              : f.geometry.type === \"MultiPolygon\"\n              ? new OlMultiPolygon(f.geometry.coordinates)\n              : null;\n\n          if (!geom) {\n            continue;\n          }\n\n          source.addFeature(\n            new Feature({\n              isMask: !!f.properties?.isMask,\n              geometry: fromWgs84(geom),\n            }),\n          );\n        }\n      }\n\n      source.clear();\n\n      if (reverseMarker) {\n        source.addFeature(reverseMarker);\n      }\n\n      setData();\n\n      if (picked) {\n        let handled = false;\n\n        if (picked.geometry.type === \"GeometryCollection\") {\n          const geoms = picked.geometry.geometries\n            .map((geometry) =>\n              geometry.type === \"Polygon\"\n                ? new OlPolygon(geometry.coordinates)\n                : geometry.type === \"MultiPolygon\"\n                ? new OlMultiPolygon(geometry.coordinates)\n                : null,\n            )\n            .filter(<T>(a: T | null): a is T => !!a);\n\n          if (geoms.length > 0) {\n            source.addFeature(\n              new Feature(fromWgs84(new OlGeometryCollection(geoms))),\n            );\n\n            handled = true;\n          } else {\n            for (const geometry of picked.geometry.geometries) {\n              if (geometry.type === \"LineString\") {\n                source.addFeature(\n                  new Feature(\n                    fromWgs84(new OlLineString(geometry.coordinates)),\n                  ),\n                );\n\n                handled = true;\n              } else if (geometry.type === \"MultiLineString\") {\n                source.addFeature(\n                  new Feature(\n                    fromWgs84(new OlMultiLineString(geometry.coordinates)),\n                  ),\n                );\n              }\n\n              handled = true;\n            }\n          }\n        }\n\n        if (handled) {\n          // nothing\n        } else if (picked.geometry.type === \"Polygon\") {\n          setMask(picked as any, setData);\n        } else if (picked.geometry.type === \"MultiPolygon\") {\n          setMask(picked as any, setData);\n        } else if (picked.geometry.type === \"LineString\") {\n          source.addFeature(\n            new Feature(\n              fromWgs84(new OlLineString(picked.geometry.coordinates)),\n            ),\n          );\n\n          return; // no pin for (multi)linestrings\n        } else if (picked.geometry.type === \"MultiLineString\") {\n          source.addFeature(\n            new Feature(\n              fromWgs84(new OlMultiLineString(picked.geometry.coordinates)),\n            ),\n          );\n\n          return; // no pin for (multi)linestrings\n        }\n\n        source.addFeature(new Feature(fromWgs84(new Point(picked.center))));\n      }\n\n      for (const feature of markedFeatures ?? []) {\n        if (feature === picked) {\n          continue;\n        }\n\n        const marker = new Feature(\n          new Point(fromLonLat(feature.center, map.getView().getProjection())),\n        );\n\n        marker.setId(feature.id);\n\n        marker.setProperties({\n          fuzzy: !!feature.matching_text,\n          tooltip: feature.place_name.replace(/,.*/, \"\"),\n        });\n\n        source.addFeature(marker);\n      }\n    },\n\n    setSelectedMarker(index: number): void {\n      const features = source.getFeatures();\n\n      const offset = features[0]?.getProperties().isReverse ? 1 : 0;\n\n      if (prevSelected > -1) {\n        features[prevSelected + offset]?.setProperties({\n          isSelected: false,\n        });\n      }\n\n      if (index > -1) {\n        features[index + offset]?.setProperties({\n          isSelected: true,\n        });\n      }\n\n      prevSelected = index;\n    },\n\n    getCenterAndZoom() {\n      const view = map.getView();\n\n      const center = view.getCenter();\n\n      const zoom = view.getZoom();\n\n      if (!center || zoom === undefined) {\n        return undefined;\n      }\n\n      return [zoom, ...(toLonLat(center, view.getProjection()) as Position)];\n    },\n  } satisfies MapController;\n}\n"],"names":["messages","AssertionError","code","message","AssertionError$1","BaseEvent","type","Event","ObjectEventType","Disposable","Disposable$1","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","linearFindNearest","arr","target","direction","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","TRUE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","evt","dispatching","pendingRemovals","propagate","ii","pr","index","Target$1","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","len","keys","unByKey","Observable$1","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","BaseObject$1","CollectionEventType","Property","CollectionEvent","element","array","options","f","elem","n","prev","except","Collection$2","Collection","assert","assertion","errorCode","Feature","geometryOrProperties","geometry","properties","clone","style","createStyleFunction","id","name","styles","Feature$1","ua","SAFARI","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","passive","create","set","transform","c","d","e","setFromArray","transform1","transform2","apply","coordinate","x","y","makeScale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","node","Relationship","_boundingExtentXYs","xs","ys","dest","minX","minY","maxX","maxY","createOrUpdate","buffer","extent","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendCoordinate","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getCenter","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getHeight","getWidth","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","coordinates","width","height","l","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","func","Projection$1","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","add","transforms","destination","sourceCode","destinationCode","clamp","min","max","squaredSegmentDistance","t","squaredDistance","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","delta","coordinate1","coordinate2","rotate","cosAngle","sinAngle","worldsAway","getWorldsAway","sourceExtentWidth","levels","level","warn","args","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","toLonLat","lonLat","lon","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","scale","translate","tmpTransform","createTransform","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","Geometry$2","Geometry","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","SimpleGeometry$1","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","area","linearRingss","LinearRing","linearRingArea","LinearRing$2","Point","Point$2","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","polygon","linearRingsArea","flatCenter","OlPolygon","fromExtent","RenderEventType","Fill","color","Fill$1","interpolatePoint","fraction","o","cumulativeLengths","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","LineString","lineString","OlLineString","Stroke","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","Stroke$1","ImageState","toSize","ImageStyle","pixelRatio","displacement","opacity","rotateWithView","ImageStyle$1","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","rgb","fromString","cacheSize","s","fromStringInternal_","asArray","g","hasAlpha","normalize","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","releaseCanvas","context","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","w","h","executeLabelInstructions","label","contextInstructions","RegularShape","fill","image","renderOptions","stroke","strokeWidth","r1","r2","points","alpha","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","strokeStyle","maxRadius","radius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","Circle","Style","defaultGeometryFunction","renderer","feature","zIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","Style$1","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","offsetX","offsetY","placement","repeat","textAlign","justify","textBaseline","padding","Text$1","LayerProperty","BaseLayer","managed","state","states","background","maxResolution","minResolution","maxZoom","minZoom","visible","zindex","BaseLayer$1","ViewHint","ViewProperty","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","oldPadding","newPadding","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","View$1","Layer","baseOptions","pixel","view","frameState","map","layerState","layerExtent","inView","getAttributions","attributions","layerRenderer","layerStatesArray","arrayLayerState","viewState","Layer$1","quickselect","left","compare","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","RBush$2","maxEntries","bbox","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","children","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","error","taintedTestContext","IconImage","imageState","ctx","iconImageCache","calculateScale","wantedWidth","wantedHeight","Icon","getIconImage","onload","imageSize","iconImageSize","Icon$1","toStyle","flatStyle","getFill","getStroke","getText","getImage","prefix","iconSrc","iconImg","shapePoints","circleRadius","BaseVectorLayer","RBush","renderOrder","styleLike","toStyleFunction","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","dashArray","dash","tmpCoord","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","Builder","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","PolygonBuilder$1","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","oo","cc","chunk","chunkBegin","range","geometryWidths","beg","keep","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","LayerRenderer","layer","tiles","tile","tileRange","hitTolerance","matches","LayerRenderer$1","RenderEvent","inversePixelTransform","RenderEvent$1","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","container","topLeft","topRight","bottomRight","bottomLeft","inverted","CanvasLayerRenderer$1","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","declutterMode","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","ExecutorGroup$1","CanvasImmediateRenderer","userTransform","localTransform","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","features","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","executorGroup","vectorSource","viewHints","endWorld","world","compositionContext","canvasTransform","transformToString","declutterExecutorGroup","clipped","render","intersectsExtent","resolve","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ready","dirty","userExtent","replayGroupInstructions","CanvasVectorLayerRenderer$1","VectorLayer","VectorLayer$1","RBush_","extents","uid","rbush","RBush$1","Source","adaptAttributions","self","reject","attributionLike","Source$1","VectorEventType","all","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","dataProjection","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","collection","featureKey","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","filter","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","clonedGeometries","OlGeometryCollection","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","OlMultiLineString","MultiPoint","multiPoint","MultiPoint$2","MultiPolygon","thisLayout","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","OlMultiPolygon","earthRadius","factors","geom","feat","isNumber","_i","coordinates_1","ring","featureCollection","fc","radiansToLength","radians","units","lengthToRadians","num","coordEach","geojson","excludeWrapCoord","stopG","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","featureEach","geomEach","featureProperties","featureBBox","ext","arrayLike","relativeStart","relativeEnd","NumberUtil","IllegalArgumentException","Error","Double","staticAccessors$1","Comparable","Clonable","Comparator","Serializable","Coordinate","staticAccessors","ordinateIndex","other","dz","DimensionalComparator","dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","compZ","CoordinateSequenceFactory","Location","staticAccessors$4","locationValue","hasInterface","MathUtil","staticAccessors$5","ln","v1","v2","v3","v4","x$1","min$1","max$1","v1$1","v2$1","v3$1","StringBuffer","str","Integer","Character","DD","staticAccessors$7","insertDecimalPoint","magnitude","mag","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","continueExtractingDigits","remMag","y$1","yhi","ylo","hc","tc","hy","ty","C","U","u","zhi","zlo","exp","fhi","flo","plus5","value$1","ax","axdd","diffSq","d2","H","S","H$1","h$1","T","S$1","s$1","e$1","f$1","hx","tx","specialStr","sigDigits","numZeroes","zeroes","digits","expStr","trailingDigits","digitsWithDecimal","strlen","isNegative","signCh","numBeforeDec","ch","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","xApprox","CGAlgorithmsDD","staticAccessors$6","q","q1","q2","denom1","denom2","denom","numx1","numx2","numx","fracP","numy1","numy2","numy","fracQ","pa","pb","pc","detsum","detleft","detright","errbound","CoordinateSequence","staticAccessors$8","env","Exception","NotRepresentableException","Exception$$1","System","srcPos","destPos","HCoordinate","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","staticAccessors$9","otherEnvelope","intMinX","intMinY","intMaxX","intMaxY","transX","transY","minq","maxq","minp","maxp","regExes","WKTParser","geometryFactory","GeometryFactory","wkt","parse$1","extract$1","wktType","coordinate$1","point$1","multipoint$1","this$1","linestring$1","linearring$1","multilinestring$1","polygon$1","multipolygon$1","components","lines","linestring","linearring","rings","shell","holes","wktArray","WKTWriter","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","expectedValue","actualValue","LineIntersector","staticAccessors$10","segmentIndex","intIndex","catBuf","dist0","dist1","precisionModel","inputLineIndex","dist","ptIndex","pt","pdx","pdy","RobustLineIntersector","LineIntersector$$1","intPt","env0","env1","CGAlgorithms","n1","n2","n3","n4","normPt","x4","xabs","intPtDD","isIn","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","collinear","nearestPt","minDist","RobustDeterminant","sign","RayCrossingCounter","minx","maxx","xIntSign","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","sum","x0$1","sum$1","A","B","D","noIntersection","rNumb","sNum","pts","nPts","hiPt","hiIndex","iPrev","iNext","next","disc","isCCW","len2","lineIntersector","GeometryComponentFilter","factory","staticAccessors$11","g$1","other$1","comp","copy","SRID","userData","aElement","bElement","comparison","geometryChangedFilter","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","boundaryCount","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","IndexOutOfBoundsException","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","oldElement","Iterator_","Iterator$$1","arrayList","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coll","isChanged","coord$2","allowRepeated$1","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","allowRepeated$4","coord$5","allowRepeated$5","inc","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","testPts","testPt","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","nonNull","newCoord","srcStart","destStart","pts1","pts2","minCoord","npts","extractPts","iPts","forwardComp","isEqualRev","dir1","dir2","i1","i2","comparePt","Map$1","SortedMap","Map","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","BLACK","RED","colorOf","parentOf","setColor","leftOf","rightOf","TreeMap","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","Arrays","Dimension","staticAccessors$14","dimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","Geometry$$1","envelope","childCoordinates","otherCollection","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","GeometryCollection$$1","nLines","revLines","BoundaryOp","bnRule","geom$1","bnRule$1","mLine","bdyPts","closedEndpointOnBoundary","it","entry","valence","Counter","bop","bop$1","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","os","ps","t$1","depth","stackTrace","lineNumberReader","separator","separatorlen","tokenList","tmpString","pos","token","res","CoordinateSequences","minDim","dim","cs1","cs2","cs1Size","cs2Size","fact","newseq","cs","isClosed","otherLineString","revLine","line$1","ls","Puntal","Polygonal","shellCoordinates","xChanged","yChanged","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","minCoordinate","poly","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","otherHole","LineString$$1","rev","allRings","allRingsArray","GeometryEditor","staticAccessors$16","isUserDataCopied","operation","collectionForType","newPolygon","hole","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","HashMap","MapInterface","PrecisionModel","Type","modelType","pm","staticAccessors$19","otherPrecisionModel","otherSigDigits","description","floatSingleVal","maxSigDigits","pm1","pm2","staticAccessors$1$1","staticAccessors$2","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","geom0","isCollection","coordinates$1","shell$1","editor","ptSeq","multiPolygons","multiPolygonArray","geometryArray","multiLineStrings","multiLineStringArray","lineStringArray","multiPoints","multiPointArray","linearRingArray","pointArray","polygonArray","exemplar","geometryTypes","GeoJSONParser","json","parse","extract","sub","multipoint","geoJson","multilinestring","shellGeoJson","holeGeoJson","multipolygon","GeoJSONReader","GeoJSONWriter","Position","staticAccessors$20","EmptyStackException","Stack","RightmostEdgeFinder","de","side","pPrev","pNext","orientation","usePrev","star","dirEdgeList","rightmostSide","TopologyException","msg","LinkedList","BufferSubgraph","startEdge","de$1","outsideDepth","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","dirEdge","nodeStack","symNode","TopologyLocation","location","on","gl","on$1","locValue","newLoc","temp","posIndex","locIndex","locValue$1","le","loc","Label","onLoc","lbl","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","count","location$1","lineLabel","EdgeRing","isFirstEdge","degree","isForward","edgePts","startIndex","startIndex$1","deLabel","deLabel$1","holeLR","MinimalEdgeRing","EdgeRing$$1","er","MaximalEdgeRing","minEdgeRings","minEr","GraphComponent","isVisited","isInResult","isCovered","im","Node","GraphComponent$$1","edges","out","label2","eltIndex","nLoc","argIndex","onLocation","thisLoc","NodeMap","nodeFact","node$1","bdyNodes","Quadrant","staticAccessors$21","quad","quad1","quad2","diff","halfPlane","EdgeEnd","edge$1","edge$2","p0$1","label$1","className","lastDotPos","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","depthVal","isInteriorAreaEdge","nextMin","minEdgeRing","isLine","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","directionFactor","oppositePos","oppositeDepth","currLocation","nextLocation","NodeFactory","PlanarGraph","nodeit","ep0","ep1","eCoord","ee","edgesToAdd","de1","de2","nodes","edgeRings","shellList","freeHoleList","resultPolyList","maxEdgeRings","dirEdges","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","ItemBoundable","bounds","PriorityQueue","minItem","ItemVisitor","SpatialIndex","itemEnv","AbstractNode","staticAccessors$22","childBoundable","Collections","alen","BoundablePair","boundable1","boundable2","itemDistance","priQ","isComp1","isComp2","nd","bndComposite","bndOther","bp","AbstractSTRtree","nodeCapacity","nodeCapacity$1","staticAccessors$23","childToRemove","valuesTree","valuesTreeForNode","valuesTreeForChild","boundables","level$1","top","boundables$1","boundable","searchBounds","searchBounds$1","visitor","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","item$1","childToPrune","boundablesOfALevel","parentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","IntersectsOp","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","verticalSlices","STRtreeNode","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","itemDist","initBndPair","tree","itemDist$1","bp$1","initBndPair$1","maxDistance","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","octant","xSign","ySign","compareSign0","compareSign1","SegmentNode","segString","segmentOctant","maxSegmentIndex","SegmentNodeList","eiPrev","ei","collapsedVertexIndexes","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","edgeList","newEdge","collapsedVertexIndex","numVerticesBetween","isCollapsed","maxSegIndex","ipt","NodedSegmentString","eiNew","splitEdges","split0","pt0","splitn","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","NodableSegmentString","intPt$1","li","segmentIndex$1","normalizedSegmentIndex","nextSegIndex","nextPt","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","ss","LineSegment","staticAccessors$24","seg","orient0","orient1","geomFactory","pf0","pf1","newp0","newp1","closestPt","close00","close01","close10","close11","comp0","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","offsetx","offsety","inputPt","segFrac","bits0","hash0","bits1","hash1","MonotoneChainOverlapAction","mc1","start1","mc2","start2","MonotoneChain","start0","end0","mcs","mc","mco","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","startIndexList","safeStart","chainQuad","pts$1","mcList","list","Noder","SinglePassNoder","segInt","MCIndexNoder","SinglePassNoder$$1","si","segStr","segChains","inputSegStrings","overlapAction","SegmentOverlapAction","queryChain","overlapChains","testChain","MonotoneChainOverlapAction$$1","ss1","ss2","BufferParameters","quadrantSegments","quadrantSegments$1","endCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","staticAccessors$25","quadSegs","simplifyFactor","isSingleSided","BufferInputLineSimplifier","inputLine","staticAccessors$26","i0","distanceTol","midIndex","lastIndex","isMiddleVertexDeleted","isAngleToSimplify","isConcave","simp","OffsetSegmentString","staticAccessors$28","bufPt","lastPt","ptDist","startPt","minimimVertexDistance","Angle","staticAccessors$29","dx0","dy0","dotprod","anglePrev","angleNext","tip1","tail","tip2","a1","a2","ang1","ang2","delAngle","angleDegrees","crossproduct","angDel","OffsetSegmentGenerator","bufParams","staticAccessors$27","addStartPoint","outsideTurn","offsetL","offsetR","squareCapSideOffset","squareCapLOffset","squareCapROffset","offset0","isMitreWithinLimit","mitreRatio","endAngle","s1","s2","basePt","ang0","angDiff","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelDelta","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","sideSign","totalAngle","nSegs","initAngle","currAngleInc","currAngle","numInt","OffsetCurveBuilder","inputPts","isRightSide","posDistance","segGen","curvePts","distTol","simp2","simp1","lineCoord","bufDistance","SubgraphDepthLocater","subgraphs","staticAccessors$30","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","stabbedSegments$1","ds","DepthSegment","stabbingRayLeftPt$2","stabbedSegments$2","orientIndex","seg0","seg1","compare0","Triangle","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","ccx","ccy","l1","l2","len0","frac","splitPt","uz","vx","vy","vz","crossx","crossy","crossz","absSq","area3D","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","inputGeom","curveBuilder","curve","offsetSide","shellCoord","holeCoord","triangleCoord","bufferDistance","tri","inCentre","distToCentre","cwLeftLoc","cwRightLoc","ringCoord","envMinDimension","PointOnGeometryLocator","GeometryCollectionIterator","SimplePointInAreaLocator","geomi","g2","EdgeEndStar","iNextCW","startLoc","currLoc","it$1","geomGraph","lastEdgeIndex","startLabel","eSearch","hasDimensionalCollapseEdge","geomi$1","DirectedEdgeStar","EdgeEndStar$$1","firstOut","incoming","nextOut","nextIn","de0","deLast","quad0","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","lastDepth","endIndex","startDepth$1","currDepth","nextDe","degree$1","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","oca","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","edgeColl","matchEdge","SegmentIntersector","e0","segIndex0","e1","segIndex1","IntersectionAdder","EdgeIntersection","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","mcb","chainIndex","chainIndex0","mce","chainIndex1","mce$1","Depth","staticAccessors$31","depthValue","minDepth","newValue","newPts","newe","isIsolated","isEqualForward","isEqualReverse","iRev","BufferBuilder","existingEdge","existingLabel","labelToMerge","mergeDelta","existingDelta","newDelta","subgraphList","polyBuilder","processedGraphs","subgraph","locater","emptyGeom","noder","curveSetBuilder","bufferSegStrList","resultGeom","nodedSegStrings","oldLabel","lLoc","rLoc","ScaledNoder","scaleFactor","noder$1","scaleFactor$1","nodedSegmentStrings","roundPts","roundPtsNoDup","splitSS","intSegStrings","NodingValidator","staticAccessors$33","ss$1","ss0","ss0$1","ss1$1","pts0","HotPixel","staticAccessors$34","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","pScaled","safeTolerance","intersectsLeft","intersectsBottom","segIndex","MonotoneChainSelectAction","MCIndexPointSnapper","staticAccessors$35","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","HotPixelSnapAction","MonotoneChainSelectAction$$1","InteriorIntersectionFinderAdder","MCIndexSnapRounder","inputSegmentStrings","resultSegStrings","nv","intFinderAdder","edge0","isNodeAdded","snapPts","snapPt","BufferOp","staticAccessors$32","fixedPM","bufBuilder","precDigits","precisionDigits","sizeBasedScaleFactor","argPM","gBuf","geomBuf","distance$1","bufOp","geomBuf$1","g$2","distance$2","params","bufOp$1","geomBuf$2","g$3","distance$3","bufOp$2","geomBuf$3","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","PointPairDistance","DistanceToPointFinder","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","segment","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","staticAccessors$36","distFilter","MaxMidpointDistanceFilter","MaxPointDistanceFilter","bufferCurve","midPt","PolygonExtracter","comps","LinearComponentExtracter","lines$1","isForcedToLineString","forceToLineString","geoms","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","boundaryRule","shellLoc","holeLoc","p$2","ptCoord","ml","mpoly","GeometryLocation","component","component$1","staticAccessors$38","PointExtracter","ConnectedElementLocationFilter","locations","DistanceOp","g0","g1","g0$1","g1$1","terminateDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","polys","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","locGeom","lines0","lines1","flip","nearestPts","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","pt1","distOp","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","staticAccessors$39","densifyFrac","discreteGeom","MaxPointDistanceFilter$1","fracFilter","MaxDensifiedByFractionDistanceFilter","delx","dely","BufferDistanceValidator","staticAccessors$37","bufCurve","maxDist","haus","distDelta","inputCurve","lineExtracter","BufferResultValidator","staticAccessors$40","expectedEnv","bufEnv","distValid","inputArea","resultArea","checkName","validator","BasicSegmentString","InteriorIntersectionFinder","isCheckEndSegmentsOnly","findAllIntersections","keepIntersections","isEndSegPresent","finder","FastNodingValidator","intSegs","EdgeNodingValidator","GeometryCollectionMapper","mapOp","mapped","op","mapper","LineBuilder","ptLocator","opCode","targetIndex","OverlayOp","edgesList","PointBuilder","GeometryTransformer","isAllValidLinearRings","transGeomList","transformGeom","seqSize","LineStringSnapper","srcLine","snapTolerance","srcPts","snapTolerance$1","srcCoords","srcPt","snapVert","distinctPtCount","snapIndex","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","staticAccessors$41","snapGeom","snapTrans","SnapTransformer","cleanResult","snappedGeom","ringPts","minSegLen","snapTol","ptSet","segLen","snapper0","snapper1","fixedSnapTol","minDimension","GeometryTransformer$$1","isSelfSnap","snapper","CommonBits","numBits","numSignExp","bits","numStr","padStr","bitStr","mask","nBits","invMask","zeroed","num1","num2","CommonBitsRemover","CommonCoordinateFilter","staticAccessors$42","trans","Translater","invCoord","xp","yp","SnapOverlayOp","remGeom","prepGeom","SnapIfNeededOverlayOp","isSuccess","savedException","isValid","MonotoneChain$2","SweepLineEvent","insertEvent","staticAccessors$43","deleteEventIndex","pe","ev","EdgeSetIntersector","SegmentIntersector$2","includeProper","recordIsolated","isDoneWhenProperInt","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","edges0","edges1","si$1","si$2","testAllSegments","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","staticAccessors$45","queryMin","queryMax","NodeComparator","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","SortedPackedIntervalRTree","ArrayListVisitor","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","rcc","SegmentVisitor","GeometryGraph","PlanarGraph$$1","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","isRings","computeAllSegments","edgelist","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","g0$2","GeometryMapper","op$1","mapped$1","gr","resultPointList","resultLineList","opcode","newEdges","overlayOpCode","baseSplitEdges","lineBuilder","pointBuilder","graphNode","ni","geom1","gov","geomOv","dim0","dim1","resultDimension","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","boundaryDistanceTolerance","extracter","PolygonalLineworkExtracter","linework","OffsetPointGenerator","offsetPts","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","staticAccessors$46","overlayOp","expectedInterior","overlayOp$1","ptGen","resultInInterior","GeometryCombiner","elems","elemGeom","combiner","combiner$1","combiner$2","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","staticAccessors$47","geomTree","disjointGeoms","intersectingGeoms","g0Env","g1Env","combo","commonEnv","itemTree","unionAll","union","common","disjointPolys","g0Int","g1Int","overallUnion","gColl","factory$1","gColl$1","unionAll$1","UnionOp","adder","Adder","bv","av","epsilon","pi","halfPi","quarterPi","tau","degrees","abs","atan","atan2","sqrt","asin","noop","streamGeometry","stream","streamGeometryType","streamObjectType","streamLine","streamPolygon","geoStream","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","t0","t1","cosRadius","sinRadius","clipBuffer","clipLine","pointEqual","Intersection","clipPolygon","segments","compareIntersection","startInside","subject","clip","link","current","isSubject","bisector","ascendingComparator","merge$1","arrays","merged","clipMax","clipMin","clipExtent","from","to","corner","comparePoint","ca","cb","activeStream","bufferStream","x__","y__","v__","x_","y_","v_","clean","clipStream","lineStart","lineEnd","polygonStart","polygonEnd","polygonInside","winding","a0","b0","b1","cleanInside","merge","linePoint","v","polygonContains","normal","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","phi1","absDelta","antimeridian","arc","intersection","phiArc","identity","boundsStream","boundsPoint","pointVisible","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","ringSegments","validSegment","clipAntimeridian","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","clipCircle","cr","smallRadius","notHemisphere","c0","v00","intersect","two","n2n2","n1n2","n1xn2","uu","t2","polar","meridian","transformer","methods","TransformStream","fitExtent","fitSize","maxDepth","cosMinDistance","resample","project","delta2","resampleNone","resampleLineTo","phi2","lambda2","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","transformRadians","projectionMutator","projectAt","projectRotate","preclip","postclip","projectResample","projectTransform","cacheStream","invert","_","reset","recenter","azimuthalRaw","azimuthalInvert","sc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","geoAzimuthalEquidistant","equirectangularRaw","steps","results","buffered","bufferFeature","multiBuffered","defineProjection","projected","projectCoords","reader","writer","coordsIsNaN","unprojectCoords","proj","__generator","body","verb","DEFAULT_COMPARE","splay","insert","split","printRow","root","isTail","printNode","indent","Tree","Q","_a","successor","predecessor","toList","presort","sort","loadRecursive","mergedList","mergeLists","createList","sortedListToBST","newKey","newData","middle","head","pivot","_classCallCheck","instance","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","isInBbox","getBboxOverlap","b2","lowerX","upperX","lowerY","upperY","EPSILON_SQ","ab","PtRounder","CoordRounder","SplayTree","prevNode","nextNode","rounder","crossProduct","dotProduct","compareVectorAngles","endPt1","endPt2","kross","sineOfAngle","pShared","pBase","pAngle","vBase","vAngle","cosineOfAngle","horizontalIntersection","verticalIntersection","pt2","ve","d1","SweepEvent","ptCmp","Segment","aPt","bPt","isLeft","otherEvents","iMax","numEvents","evt1","evt2","events","baseEvent","_this","fillCache","linkedEvent","nextEvent","_cache$get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","leftSE","rightSE","windings","newRightSE","lPt","rPt","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","newEvents","alreadyLinked","newLeftSE","oldRightSE","newSeg","tmpEvt","consumer","consumee","_tmp","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_iMax","_ring","_index","_i2","_iMax2","mp","mpsBefore","noBefores","noAfters","least","most","isJustSubject","mps","leftPt","rightPt","cmpPts","RingIn","geomRing","isExterior","firstPoint","prevPoint","sweepEvents","PolyIn","geomPoly","multiPoly","ringSweepEvents","jMax","MultiPolyIn","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","startingPoint","intersectionLEs","availableLEs","firstPt","indexLE","intersectionLE","ringEvents","prevPt","_pt","_nextPt","iEnd","orderedPoints","enclosing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","exteriorRing","ringGeom","MultiPolyOut","polyGeom","enclosingRing","SweepLine","queue","nextSeg","prevMySplitter","prevInter","newEventsFromSplit","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","cmpSplitters","_newEventsFromSplit2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","POLYGON_CLIPPING_MAX_QUEUE_SIZE","POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS","Operation","moreGeoms","multipolys","mpA","_j","_jMax","sweepLine","prevQueueSize","_evt","_len","_key","intersection$1","_len2","_key2","xor","_len3","_key3","difference","subjectGeom","_len4","clippingGeoms","_key4","getGeom","polygon1","polygon2","geom2","differenced","polygonClipping","fixRing","setMask","picked","setData","fixed","EPSG_4326","defaultStyle","isMask","weight","createOpenLayersMapController","flyToOptions","flyToBounds","fullGeometryStyle","prevSelected","prevHovered","eventHandler","reverseMarker","indicatingReverse","fromWgs84","handleMapClick","handler","markedFeatures","handled","marker","_b","_c"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162]}