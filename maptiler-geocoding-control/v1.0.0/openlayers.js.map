{"version":3,"file":"openlayers.js","sources":["../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/MapEventType.js","../node_modules/ol/has.js","../node_modules/ol/dom.js","../node_modules/ol/control/Control.js","../node_modules/ol/css.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/AssertionError.js","../node_modules/ol/asserts.js","../node_modules/ol/extent.js","../node_modules/ol/math.js","../node_modules/ol/coordinate.js","../node_modules/ol/console.js","../node_modules/ol/proj.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/ol/transform.js","../node_modules/ol/color.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/render/EventType.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/easing.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/View.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/canvas.js","../node_modules/ol/size.js","../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../src/ClearIcon.svelte","../src/FailIcon.svelte","../src/FeatureItem.svelte","../src/LoadingIcon.svelte","../src/ReverseGeocodingIcon.svelte","../src/SearchIcon.svelte","../src/geoUtils.ts","../src/proximity.ts","../src/GeocodingControl.svelte","../node_modules/ol/Feature.js","../node_modules/ol/style/Fill.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/ImageState.js","../node_modules/ol/style/Image.js","../node_modules/ol/colorlike.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/flat.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/Source.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/@turf/helpers/dist/es/index.js","../node_modules/@turf/meta/dist/es/index.js","../node_modules/@turf/bbox/dist/es/index.js","../node_modules/@turf/center/dist/es/index.js","../node_modules/turf-jsts/jsts.mjs","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/polygon.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/@turf/buffer/dist/es/index.js","../node_modules/splaytree/dist/splay.esm.js","../node_modules/polygon-clipping/dist/polygon-clipping.esm.js","../node_modules/@turf/invariant/dist/es/index.js","../node_modules/@turf/difference/dist/es/index.js","../src/mask.ts","../src/openlayers-controller.ts","../src/openlayers.ts"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.2';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","<svg viewBox=\"0 0 14 14\" width=\"13\" height=\"13\">\n  <path\n    d=\"M13.12.706a.982.982 0 0 0-1.391 0L6.907 5.517 2.087.696a.982.982 0 1 0-1.391 1.39l4.821 4.821L.696 11.73a.982.982 0 1 0 1.39 1.39l4.821-4.821 4.822 4.821a.982.982 0 1 0 1.39-1.39L8.298 6.908l4.821-4.822a.988.988 0 0 0 0-1.38Z\"\n  />\n</svg>\n\n<style>\n  svg {\n    display: block;\n    fill: var(--color-icon-button);\n  }\n</style>\n","<svg viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M15 0C6.705 0 0 6.705 0 15C0 23.295 6.705 30 15 30C23.295 30 30 23.295 30 15C30 6.705 23.295 0 15 0ZM22.5 20.385L20.385 22.5L15 17.115L9.615 22.5L7.5 20.385L12.885 15L7.5 9.615L9.615 7.5L15 12.885L20.385 7.5L22.5 9.615L17.115 15L22.5 20.385Z\"\n  />\n</svg>\n\n<style>\n  svg {\n    display: block;\n    fill: #e15042;\n  }\n</style>\n","<script lang=\"ts\">\n  import type { Feature } from \"./types\";\n\n  export let feature: Feature;\n\n  export let selected = false;\n\n  export let showPlaceType: false | \"always\" | \"ifNeeded\";\n\n  export let missingIconsCache: Set<string>;\n\n  export let iconsBaseUrl: string;\n\n  const categories = feature.properties?.categories;\n\n  let category: string | undefined;\n\n  let imageUrl: string | undefined;\n\n  let loadIconAttempt = 0;\n\n  $: index = categories?.length ?? 0;\n\n  $: {\n    loadIconAttempt;\n\n    do {\n      index--;\n\n      category = categories?.[index];\n\n      imageUrl = category\n        ? iconsBaseUrl + category.replace(/ /g, \"_\") + \".svg\"\n        : undefined;\n    } while (index > -1 && (!imageUrl || missingIconsCache.has(imageUrl)));\n  }\n\n  $: placeType = feature.id.startsWith(\"poi.\")\n    ? feature.properties?.categories?.join(\", \")\n    : feature.properties?.place_type_name?.[0] ?? feature.place_type[0];\n\n  function handleImgError(e: Element) {\n    if (imageUrl) {\n      missingIconsCache.add(imageUrl);\n    }\n\n    loadIconAttempt++;\n  }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<li tabindex=\"0\" data-selected={selected} class:selected on:mouseenter on:focus>\n  {#if imageUrl}\n    <img\n      src={imageUrl}\n      alt={category}\n      on:error={(e) => handleImgError(e.currentTarget)}\n    />\n  {:else if feature.address}\n    <img src={iconsBaseUrl + \"housenumber.svg\"} alt={placeType} />\n  {:else if feature.properties?.kind === \"road\" || feature.properties?.kind === \"road_relation\"}\n    <img src={iconsBaseUrl + \"road.svg\"} alt={placeType} />\n  {:else if feature.id.startsWith(\"address.\")}\n    <img src={iconsBaseUrl + \"street.svg\"} alt={placeType} />\n  {:else if feature.id.startsWith(\"postal_code.\")}\n    <img src={iconsBaseUrl + \"postal_code.svg\"} alt={placeType} />\n  {:else if feature.id.startsWith(\"poi.\")}\n    <img src={iconsBaseUrl + \"poi.svg\"} alt={placeType} />\n  {:else}\n    <img src={iconsBaseUrl + \"area.svg\"} alt={placeType} />\n  {/if}\n\n  <span class=\"texts\">\n    <span>\n      <span class=\"primary\">\n        {feature.place_name.replace(/,.*/, \"\")}\n      </span>\n\n      {#if showPlaceType === \"always\" || (showPlaceType && !feature.address && feature.properties?.kind !== \"road\" && feature.properties?.kind !== \"road_relation\" && !feature.id.startsWith(\"address.\") && !feature.id.startsWith(\"postal_code.\") && (!feature.id.startsWith(\"poi.\") || !imageUrl))}\n        <span class=\"secondary\">\n          {placeType}\n        </span>\n      {/if}\n    </span>\n\n    <span class=\"line2\">\n      {feature.place_name.replace(/[^,]*,?\\s*/, \"\")}\n    </span>\n  </span>\n</li>\n\n<style lang=\"scss\">\n  li {\n    text-align: left;\n    cursor: default;\n    display: grid;\n    grid-template-columns: 40px 1fr;\n    color: var(--color-text);\n    padding: 8px 0px;\n    font-size: 14px;\n    line-height: 18px;\n    min-width: fit-content;\n\n    &:first-child {\n      padding-top: 10px;\n    }\n\n    &:last-child {\n      padding-bottom: 10px;\n    }\n\n    &.selected {\n      background-color: #f3f6ff;\n\n      & {\n        animation: backAndForth 5s linear infinite;\n      }\n\n      & .primary {\n        color: #2b8bfb;\n      }\n    }\n\n    & > img {\n      align-self: center;\n      justify-self: center;\n      opacity: 0.75;\n    }\n  }\n\n  .texts {\n    padding: 0 17px 0 0;\n\n    & > * {\n      white-space: nowrap;\n      display: block;\n      min-width: fit-content;\n    }\n  }\n\n  .primary {\n    font-weight: 600;\n  }\n\n  .secondary {\n    color: #aeb6c7;\n    padding-left: 4px;\n  }\n\n  .line2 {\n    color: #aeb6c7;\n  }\n\n  @keyframes backAndForth {\n    0% {\n      transform: translateX(0);\n    }\n    10% {\n      transform: translateX(0);\n    }\n    45% {\n      transform: translateX(calc(-100% + 270px));\n    }\n    55% {\n      transform: translateX(calc(-100% + 270px));\n    }\n    90% {\n      transform: translateX(0);\n    }\n    100% {\n      transform: translateX(0);\n    }\n  }\n</style>\n","<div>\n  <svg viewBox=\"0 0 18 18\" width=\"24\" height=\"24\">\n    <path\n      fill=\"#333\"\n      d=\"M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z\"\n    />\n    <path\n      opacity=\".1\"\n      d=\"M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z\"\n    />\n  </svg>\n</div>\n\n<style>\n  div {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    pointer-events: none;\n\n    display: flex;\n    align-items: center;\n  }\n\n  svg {\n    animation: rotate 0.8s infinite cubic-bezier(0.45, 0.05, 0.55, 0.95);\n  }\n\n  @keyframes rotate {\n    from {\n      -webkit-transform: rotate(0);\n      transform: rotate(0);\n    }\n    to {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n</style>\n","<svg viewBox=\"0 0 60.006 21.412\" width=\"14\" height=\"20\">\n  <path\n    d=\"M30.003-26.765C13.46-26.765 0-14.158 0 1.337c0 23.286 24.535 42.952 28.39 46.04.24.192.402.316.471.376.323.282.732.424 1.142.424.41 0 .82-.142 1.142-.424.068-.06.231-.183.471-.376 3.856-3.09 28.39-22.754 28.39-46.04 0-15.495-13.46-28.102-30.003-28.102Zm1.757 12.469c4.38 0 7.858 1.052 10.431 3.158 2.595 2.105 3.89 4.913 3.89 8.422 0 2.34-.53 4.362-1.593 6.063-1.063 1.702-3.086 3.616-6.063 5.742-2.042 1.51-3.337 2.659-3.89 3.446-.532.787-.8 1.82-.8 3.096v1.914h-8.449V15.18c0-2.041.434-3.815 1.306-5.325.872-1.51 2.467-3.118 4.785-4.82 2.233-1.594 3.7-2.89 4.402-3.889a5.582 5.582 0 0 0 1.087-3.35c0-1.382-.51-2.435-1.531-3.158-1.02-.723-2.45-1.087-4.28-1.087-3.19 0-6.826 1.047-10.91 3.131l-3.472-6.986c4.742-2.659 9.77-3.992 15.087-3.992Zm-1.88 37.324c1.765 0 3.124.472 4.08 1.408.98.936 1.47 2.276 1.47 4.02 0 1.68-.49 3.007-1.47 3.985-.977.957-2.336 1.435-4.08 1.435-1.787 0-3.171-.465-4.15-1.4-.978-.958-1.47-2.298-1.47-4.02 0-1.787.48-3.14 1.436-4.054.957-.915 2.355-1.374 4.184-1.374Z\"\n  />\n</svg>\n\n<style>\n  svg {\n    display: block;\n    fill: var(--color-icon-button);\n  }\n</style>\n","<svg width=\"14\" height=\"14\" viewBox=\"0 0 15 15\">\n  <path\n    d=\"M13.101 14.261 8.74 9.899a4.797 4.797 0 0 1-1.425.748 5.165 5.165 0 0 1-1.603.248c-1.446 0-2.677-.5-3.693-1.503S.495 7.164.495 5.717c0-1.446.508-2.678 1.524-3.693C3.035 1.008 4.266.5 5.712.5c1.448 0 2.672.508 3.675 1.524 1.002 1.015 1.503 2.247 1.503 3.693 0 .558-.08 1.092-.239 1.603-.159.512-.411.98-.757 1.405l4.382 4.4a.74.74 0 0 1 .229.568.81.81 0 0 1-.249.568.787.787 0 0 1-.577.239.787.787 0 0 1-.578-.239ZM5.712 9.223c.97 0 1.796-.342 2.48-1.026a3.378 3.378 0 0 0 1.026-2.48c0-.982-.34-1.818-1.016-2.509-.677-.69-1.507-1.035-2.49-1.035a3.42 3.42 0 0 0-2.509 1.035 3.42 3.42 0 0 0-1.035 2.51c0 .982.345 1.812 1.035 2.488.691.678 1.527 1.017 2.51 1.017Z\"\n  />\n</svg>\n\n<style>\n  svg {\n    display: block;\n    fill: var(--color-icon-button);\n  }\n</style>\n","import type { BBox } from \"./types\";\n\n// taken from Leaflet\nexport function wrapNum(\n  x: number,\n  range: [number, number],\n  includeMax: boolean,\n) {\n  const max = range[1],\n    min = range[0],\n    d = max - min;\n\n  return x === max && includeMax ? x : ((((x - min) % d) + d) % d) + min;\n}\n\nexport function unwrapBbox(bbox0: BBox): BBox {\n  const bbox = [...bbox0] satisfies BBox;\n\n  if (bbox[2] < bbox[0]) {\n    bbox[2] += 360;\n  }\n\n  return bbox;\n}\n","import type { MapController, ProximityRule } from \"./types\";\n\nlet cachedLocation: { time: number; coords: undefined | string } | undefined;\n\nexport async function getProximity(\n  mapController: MapController | undefined,\n  proximity: ProximityRule[] | null | undefined,\n  ac: AbortController,\n) {\n  const centerAndZoom = mapController?.getCenterAndZoom();\n\n  for (const rule of proximity ?? []) {\n    if (\n      centerAndZoom &&\n      ((rule.minZoom != undefined && rule.minZoom > centerAndZoom[0]) ||\n        (rule.maxZoom != undefined && rule.maxZoom < centerAndZoom[0]))\n    ) {\n      continue;\n    }\n\n    if (rule.type === \"fixed\") {\n      return rule.coordinates.join(\",\");\n    }\n\n    cg: if (rule.type === \"client-geolocation\") {\n      if (\n        cachedLocation &&\n        rule.cachedLocationExpiry &&\n        cachedLocation.time + rule.cachedLocationExpiry > Date.now()\n      ) {\n        if (!cachedLocation.coords) {\n          break cg;\n        }\n\n        return cachedLocation.coords;\n      }\n\n      let coords: string | undefined;\n\n      try {\n        coords = await new Promise<string>((resolve, reject) => {\n          ac.signal.addEventListener(\"abort\", () => {\n            reject(Error(\"aborted\"));\n          });\n\n          navigator.geolocation.getCurrentPosition(\n            (pos) => {\n              resolve(\n                [pos.coords.longitude, pos.coords.latitude]\n                  .map((c) => c.toFixed(6))\n                  .join(\",\"),\n              );\n            },\n            (err) => {\n              reject(err);\n            },\n            rule,\n          );\n        });\n\n        return coords;\n      } catch {\n        // ignore\n      } finally {\n        if (rule.cachedLocationExpiry) {\n          cachedLocation = {\n            time: Date.now(),\n            coords,\n          };\n        }\n      }\n\n      if (ac.signal.aborted) {\n        return;\n      }\n    }\n\n    if (rule.type === \"server-geolocation\") {\n      return \"ip\";\n    }\n\n    if (centerAndZoom && rule.type === \"map-center\") {\n      return centerAndZoom[1].toFixed(6) + \",\" + centerAndZoom[2].toFixed(6);\n    }\n  }\n}\n","<script lang=\"ts\">\n  import { createEventDispatcher, onDestroy } from \"svelte\";\n  import { default as ClearIcon } from \"./ClearIcon.svelte\";\n  import { default as FailIcon } from \"./FailIcon.svelte\";\n  import { default as FeatureItem } from \"./FeatureItem.svelte\";\n  import { default as LoadingIcon } from \"./LoadingIcon.svelte\";\n  import { default as ReverseGeocodingIcon } from \"./ReverseGeocodingIcon.svelte\";\n  import { default as SearchIcon } from \"./SearchIcon.svelte\";\n  import { unwrapBbox, wrapNum } from \"./geoUtils\";\n  import { getProximity } from \"./proximity\";\n  import type {\n    BBox,\n    DispatcherType,\n    Feature,\n    FeatureCollection,\n    MapController,\n    ProximityRule,\n  } from \"./types\";\n\n  let className: string | undefined = undefined;\n\n  export { className as class };\n\n  export let apiKey: string;\n\n  export let bbox: BBox | undefined = undefined;\n\n  export let clearButtonTitle = \"clear\";\n\n  export let clearOnBlur = false;\n\n  export let collapsed = false;\n\n  export let country: string | string[] | undefined = undefined;\n\n  export let debounceSearch = 200;\n\n  export let enableReverse: boolean | \"always\" = false;\n\n  export let errorMessage = \"Something went wrong…\";\n\n  export let filter: (feature: Feature) => boolean = () => true;\n\n  export let flyTo = true;\n\n  export let fuzzyMatch = true;\n\n  export let language: string | string[] | null | undefined = undefined;\n\n  export let limit: number | undefined = undefined;\n\n  export let mapController: MapController | undefined = undefined;\n\n  export let minLength = 2;\n\n  export let noResultsMessage =\n    \"Oops! Looks like you're trying to predict something that's not quite right. We can't seem to find what you're looking for. Maybe try double-checking your spelling or try a different search term. Keep on typing - we'll do our best to get you where you need to go!\";\n\n  export let placeholder = \"Search\";\n\n  export let proximity: ProximityRule[] | null | undefined = [\n    { type: \"server-geolocation\" },\n  ];\n\n  export let reverseActive = enableReverse === \"always\";\n\n  export let reverseButtonTitle = \"toggle reverse geocoding\";\n\n  export let searchValue = \"\";\n\n  export let showFullGeometry = true;\n\n  export let showPlaceType: false | \"always\" | \"ifNeeded\" = \"ifNeeded\";\n\n  export let showResultsWhileTyping = true;\n\n  export let types: string[] | undefined = undefined;\n\n  export let zoom = 16;\n\n  export let maxZoom = 18;\n\n  export let apiUrl: string = import.meta.env.VITE_API_URL;\n\n  export let fetchParameters: RequestInit = {};\n\n  export let iconsBaseUrl =\n    \"https://cdn.maptiler.com/maptiler-geocoding-control/v\" +\n    import.meta.env.VITE_LIB_VERSION +\n    \"/icons/\";\n\n  export let adjustUrlQuery = (sp: URLSearchParams) => {};\n\n  export function focus() {\n    input.focus();\n  }\n\n  export function blur() {\n    input.blur();\n  }\n\n  export function setQuery(value: string, submit = true) {\n    searchValue = value;\n\n    if (submit) {\n      selectedItemIndex = -1;\n\n      handleOnSubmit();\n    } else {\n      handleInput();\n\n      setTimeout(() => {\n        input.focus();\n        input.select();\n      });\n    }\n  }\n\n  export function clearList() {\n    listFeatures = undefined;\n    picked = undefined;\n    selectedItemIndex = -1;\n  }\n\n  export function clearMap() {\n    markedFeatures = [];\n    picked = undefined;\n  }\n\n  let focused = false;\n\n  let listFeatures: Feature[] | undefined;\n\n  let markedFeatures: Feature[] | undefined;\n\n  let picked: Feature | undefined;\n\n  let lastSearchUrl = \"\";\n\n  let input: HTMLInputElement;\n\n  let selectedItemIndex = -1;\n\n  let error: unknown;\n\n  let cachedFeatures: Feature[] = [];\n\n  let abortController: AbortController | undefined;\n\n  let searchTimeoutRef: number | undefined;\n\n  let focusedDelayed: boolean;\n\n  let prevIdToFly: string | undefined;\n\n  const missingIconsCache = new Set<string>();\n\n  const dispatch = createEventDispatcher<DispatcherType>();\n\n  $: if (\n    showFullGeometry &&\n    picked &&\n    !picked.address &&\n    picked.geometry.type === \"Point\"\n  ) {\n    search(picked.id, { byId: true }).catch((err) => (error = err));\n  }\n\n  $: {\n    if (mapController && picked && picked.id !== prevIdToFly && flyTo) {\n      if (\n        !picked.bbox ||\n        (picked.bbox[0] === picked.bbox[2] && picked.bbox[1] === picked.bbox[3])\n      ) {\n        mapController.flyTo(\n          picked.center,\n          picked.id.startsWith(\"poi.\") || picked.id.startsWith(\"address.\")\n            ? maxZoom\n            : zoom,\n        );\n      } else {\n        mapController.fitBounds(unwrapBbox(picked.bbox), 50, maxZoom);\n      }\n\n      listFeatures = undefined;\n      markedFeatures = undefined;\n      selectedItemIndex = -1;\n    }\n\n    prevIdToFly = picked?.id;\n  }\n\n  $: if (markedFeatures !== listFeatures) {\n    markedFeatures = undefined;\n  }\n\n  $: if (mapController) {\n    mapController.setMarkers(markedFeatures, picked);\n  }\n\n  $: if (searchValue.length < minLength) {\n    picked = undefined;\n    listFeatures = undefined;\n    error = undefined;\n    markedFeatures = listFeatures;\n  }\n\n  // highlight selected marker\n  $: mapController?.setSelectedMarker(selectedItemIndex);\n\n  // close dropdown in the next cycle so that the selected item event has the chance to fire\n  $: setTimeout(() => {\n    focusedDelayed = focused;\n\n    if (clearOnBlur && !focused) {\n      searchValue = \"\";\n    }\n  });\n\n  // clear selection on edit\n  $: {\n    searchValue;\n\n    selectedItemIndex = -1;\n  }\n\n  $: selected = listFeatures?.[selectedItemIndex];\n\n  $: {\n    const m = /^(-?\\d+(?:\\.\\d*)?),(-?\\d+(?:\\.\\d*)?)$/.exec(searchValue);\n\n    mapController?.setReverseMarker(\n      m ? [Number(m[1]), Number(m[2])] : undefined,\n    );\n  }\n\n  $: dispatch(\"select\", selected);\n\n  $: dispatch(\"pick\", picked);\n\n  $: dispatch(\"optionsVisibilityChange\", focusedDelayed && !!listFeatures);\n\n  $: dispatch(\"featuresListed\", listFeatures);\n\n  $: dispatch(\"featuresMarked\", markedFeatures);\n\n  $: dispatch(\"reverseToggle\", reverseActive);\n\n  $: dispatch(\"queryChange\", searchValue);\n\n  $: if (mapController) {\n    mapController.indicateReverse(reverseActive);\n  }\n\n  $: if (mapController) {\n    mapController.setEventHandler((e) => {\n      switch (e.type) {\n        case \"mapClick\":\n          if (reverseActive) {\n            handleReverse(e.coordinates);\n          }\n\n          break;\n        case \"markerClick\":\n          {\n            const feature = listFeatures?.find(\n              (feature) => feature.id === e.id,\n            );\n\n            if (feature) {\n              pick(feature);\n            }\n          }\n\n          break;\n        case \"markerMouseEnter\":\n          selectedItemIndex = !focusedDelayed\n            ? -1\n            : listFeatures?.findIndex((feature) => feature.id === e.id) ?? -1;\n\n          break;\n        case \"markerMouseLeave\":\n          selectedItemIndex = -1;\n\n          break;\n      }\n    });\n  }\n\n  onDestroy(() => {\n    if (mapController) {\n      mapController.setEventHandler(undefined);\n      mapController.indicateReverse(false);\n      mapController.setSelectedMarker(-1);\n      mapController.setMarkers(undefined, undefined);\n    }\n  });\n\n  function handleOnSubmit(event?: unknown) {\n    if (searchTimeoutRef) {\n      clearTimeout(searchTimeoutRef);\n\n      searchTimeoutRef = undefined;\n    }\n\n    if (selectedItemIndex > -1 && listFeatures) {\n      picked = listFeatures[selectedItemIndex];\n      searchValue = picked.place_name.replace(/,.*/, \"\");\n      error = undefined;\n      markedFeatures = undefined;\n      selectedItemIndex = -1;\n    } else if (searchValue) {\n      const zoomTo = event || !isQuerReverse();\n\n      search(searchValue, { exact: true })\n        .then(() => {\n          markedFeatures = listFeatures;\n\n          picked = undefined;\n\n          if (zoomTo) {\n            zoomToResults();\n          }\n        })\n        .catch((err) => (error = err));\n    }\n  }\n\n  function isQuerReverse() {\n    return /^-?\\d+(\\.\\d+)?,-?\\d+(\\.\\d+)?$/.test(searchValue);\n  }\n\n  async function search(\n    searchValue: string,\n    {\n      byId = false,\n      exact = false,\n    }: undefined | { byId?: boolean; exact?: boolean } = {},\n  ) {\n    error = undefined;\n\n    abortController?.abort();\n\n    const ac = new AbortController();\n\n    abortController = ac;\n\n    try {\n      const isReverse = isQuerReverse();\n\n      const sp = new URLSearchParams();\n\n      if (language !== undefined) {\n        sp.set(\n          \"language\",\n          Array.isArray(language) ? language.join(\",\") : language ?? \"\",\n        );\n      }\n\n      if (types) {\n        sp.set(\"types\", types.join(\",\"));\n      }\n\n      if (bbox) {\n        sp.set(\"bbox\", bbox.map((c) => c.toFixed(6)).join(\",\"));\n      }\n\n      if (country) {\n        sp.set(\"country\", Array.isArray(country) ? country.join(\",\") : country);\n      }\n\n      if (!byId && !isReverse) {\n        const coords = await getProximity(mapController, proximity, ac);\n\n        if (coords) {\n          sp.set(\"proximity\", coords);\n        }\n\n        if (exact || !showResultsWhileTyping) {\n          sp.set(\"autocomplete\", \"false\");\n        }\n\n        sp.set(\"fuzzyMatch\", String(fuzzyMatch));\n      }\n\n      if (limit !== undefined && (!isReverse || types?.length === 1)) {\n        sp.set(\"limit\", String(limit));\n      }\n\n      sp.set(\"key\", apiKey);\n\n      adjustUrlQuery(sp);\n\n      const url =\n        apiUrl +\n        \"/\" +\n        encodeURIComponent(searchValue) +\n        \".json?\" +\n        sp.toString();\n\n      if (url === lastSearchUrl) {\n        if (byId) {\n          listFeatures = undefined;\n\n          picked = cachedFeatures[0];\n        } else {\n          listFeatures = cachedFeatures;\n        }\n\n        return;\n      }\n\n      lastSearchUrl = url;\n\n      const res = await fetch(url, {\n        signal: ac.signal,\n        ...fetchParameters,\n      });\n\n      if (!res.ok) {\n        throw new Error();\n      }\n\n      const featureCollection: FeatureCollection = await res.json();\n\n      dispatch(\"response\", { url, featureCollection });\n\n      if (byId) {\n        listFeatures = undefined;\n\n        picked = featureCollection.features[0];\n\n        cachedFeatures = [picked];\n      } else {\n        listFeatures = featureCollection.features.filter(filter);\n\n        cachedFeatures = listFeatures;\n\n        if (isReverse) {\n          input.focus();\n        }\n      }\n    } catch (e) {\n      if (\n        e &&\n        typeof e === \"object\" &&\n        \"name\" in e &&\n        e.name === \"AbortError\"\n      ) {\n        return;\n      }\n\n      throw e;\n    } finally {\n      if (ac === abortController) {\n        abortController = undefined;\n      }\n    }\n  }\n\n  function zoomToResults() {\n    if (!markedFeatures?.length || !flyTo) {\n      return;\n    }\n\n    const bbox: BBox = [180, 90, -180, -90];\n\n    const fuzzyOnly = !markedFeatures.some((feature) => !feature.matching_text);\n\n    for (const feature of markedFeatures) {\n      if (fuzzyOnly || !feature.matching_text) {\n        for (const i of [0, 1, 2, 3] as const) {\n          bbox[i] = Math[i < 2 ? \"min\" : \"max\"](\n            bbox[i],\n            feature.bbox?.[i] ?? feature.center[i % 2],\n          );\n        }\n      }\n    }\n\n    if (mapController && markedFeatures.length > 0) {\n      if (picked && bbox[0] === bbox[2] && bbox[1] === bbox[3]) {\n        mapController.flyTo(picked.center, zoom);\n      } else {\n        mapController.fitBounds(unwrapBbox(bbox), 50, maxZoom);\n      }\n    }\n  }\n\n  function handleReverse(coordinates: [lng: number, lat: number]) {\n    reverseActive = enableReverse === \"always\";\n\n    setQuery(\n      wrapNum(coordinates[0], [-180, 180], true).toFixed(6) +\n        \",\" +\n        coordinates[1].toFixed(6),\n    );\n  }\n\n  function handleKeyDown(e: KeyboardEvent) {\n    if (!listFeatures) {\n      return;\n    }\n\n    let dir = e.key === \"ArrowDown\" ? 1 : e.key === \"ArrowUp\" ? -1 : 0;\n\n    if (dir) {\n      if (selectedItemIndex === -1 && dir === -1) {\n        selectedItemIndex = listFeatures.length;\n      }\n\n      selectedItemIndex += dir;\n\n      if (selectedItemIndex >= listFeatures.length) {\n        selectedItemIndex = -1;\n      }\n\n      e.preventDefault();\n    } else if ([\"ArrowLeft\", \"ArrowRight\", \"Home\", \"End\"].includes(e.key)) {\n      selectedItemIndex = -1;\n    }\n  }\n\n  function handleInput(debounce = true) {\n    error = undefined;\n\n    if (showResultsWhileTyping) {\n      if (searchTimeoutRef) {\n        clearTimeout(searchTimeoutRef);\n      }\n\n      if (searchValue.length < minLength) {\n        return;\n      }\n\n      const sv = searchValue;\n\n      searchTimeoutRef = window.setTimeout(\n        () => {\n          search(sv).catch((err) => (error = err));\n        },\n        debounce ? debounceSearch : 0,\n      );\n    } else {\n      listFeatures = undefined;\n      error = undefined;\n    }\n  }\n\n  function pick(feature: Feature) {\n    picked = feature;\n    searchValue = feature.place_name;\n    selectedItemIndex = -1;\n  }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<form\n  tabindex=\"0\"\n  on:submit|preventDefault={handleOnSubmit}\n  class:can-collapse={collapsed && searchValue === \"\"}\n  class={className}\n>\n  <div class=\"input-group\">\n    <button class=\"search-button\" type=\"button\" on:click={() => input.focus()}>\n      <SearchIcon />\n    </button>\n\n    <input\n      bind:this={input}\n      bind:value={searchValue}\n      on:focus={() => (focused = true)}\n      on:blur={() => (focused = false)}\n      on:keydown={handleKeyDown}\n      on:input={() => handleInput()}\n      {placeholder}\n      aria-label={placeholder}\n    />\n\n    <div class=\"clear-button-container\" class:displayable={searchValue !== \"\"}>\n      <button\n        type=\"button\"\n        on:click={() => {\n          searchValue = \"\";\n          input.focus();\n        }}\n        title={clearButtonTitle}\n      >\n        <ClearIcon />\n      </button>\n\n      {#if abortController}\n        <LoadingIcon />\n      {/if}\n    </div>\n\n    {#if enableReverse === true}\n      <button\n        type=\"button\"\n        class:active={reverseActive}\n        title={reverseButtonTitle}\n        on:click={() => (reverseActive = !reverseActive)}\n      >\n        <ReverseGeocodingIcon />\n      </button>\n    {/if}\n\n    <slot />\n  </div>\n\n  {#if error}\n    <div class=\"error\">\n      <FailIcon />\n\n      <div>{errorMessage}</div>\n\n      <button on:click={() => (error = undefined)}>\n        <ClearIcon />\n      </button>\n    </div>\n  {:else if !focusedDelayed}\n    {\"\"}\n  {:else if listFeatures?.length === 0}\n    <div class=\"no-results\">\n      <FailIcon />\n\n      <div>{noResultsMessage}</div>\n    </div>\n  {:else if focusedDelayed && listFeatures?.length}\n    <ul\n      on:mouseleave={() => (selectedItemIndex = -1)}\n      on:blur={() => undefined}\n    >\n      {#each listFeatures as feature, i (feature.id + (feature.address ? \",\" + feature.address : \"\"))}\n        <FeatureItem\n          {feature}\n          {showPlaceType}\n          selected={selectedItemIndex === i}\n          on:mouseenter={() => (selectedItemIndex = i)}\n          on:focus={() => pick(feature)}\n          {missingIconsCache}\n          {iconsBaseUrl}\n        />\n      {/each}\n    </ul>\n  {/if}\n</form>\n\n<style lang=\"scss\">\n  form {\n    font-family: \"Open Sans\", \"Ubuntu\", \"Helvetica Neue\", Arial, Helvetica,\n      sans-serif;\n    position: relative;\n    background-color: #fff;\n    z-index: 10;\n    border-radius: 4px;\n    transition: max-width 0.25s;\n    box-shadow: 0px 2px 5px rgba(51, 51, 89, 0.15);\n    --color-text: #444952;\n    --color-icon-button: #444952;\n\n    &,\n    & *,\n    & *:after,\n    & *:before {\n      box-sizing: border-box;\n    }\n\n    &.can-collapse {\n      max-width: 29px;\n    }\n\n    &,\n    &:focus-within,\n    &:hover {\n      width: 270px;\n      max-width: 270px;\n    }\n  }\n\n  input {\n    font: inherit;\n    font-size: 14px;\n    flex-grow: 1;\n    min-height: 29px;\n    background-color: transparent;\n    color: #444952;\n    white-space: nowrap;\n    overflow: hidden;\n    border: 0;\n    margin: 0;\n    padding: 0;\n\n    &:focus {\n      color: #444952;\n      outline: 0;\n      outline: none;\n      box-shadow: none;\n    }\n  }\n\n  ul,\n  div.error,\n  div.no-results {\n    background-color: #fff;\n    border-radius: 4px;\n    left: 0;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    top: calc(100% + 6px);\n    overflow: hidden;\n  }\n\n  ul {\n    font-size: 14px;\n    line-height: 16px;\n    box-shadow: 0px 5px 10px rgba(51, 51, 89, 0.15);\n  }\n\n  div.error,\n  div.no-results {\n    font: inherit;\n    line-height: 18px;\n    font-size: 12px;\n    display: flex;\n    gap: 16px;\n  }\n\n  div.error {\n    padding: 16px;\n    font-weight: 600;\n    color: #e25041;\n    background-color: #fbeae8;\n\n    div {\n      flex-grow: 1;\n    }\n\n    :global(svg) {\n      flex-shrink: 0;\n      width: 20px;\n      height: 20px;\n    }\n\n    button {\n      flex-shrink: 0;\n      & > :global(svg) {\n        width: 13px;\n        fill: #e25041;\n      }\n\n      &:hover :global(svg),\n      &:active :global(svg) {\n        fill: #444952;\n      }\n    }\n  }\n\n  div.no-results {\n    padding: 14px 24px 14px 16px;\n    font-weight: 400;\n    color: #6b7c93;\n\n    :global(svg) {\n      margin-top: 4px;\n      flex-shrink: 0;\n      width: 20px;\n      height: 20px;\n      width: 30px;\n      height: 30px;\n    }\n\n    box-shadow: 0px 5px 10px rgba(51, 51, 89, 0.15);\n  }\n\n  :global(.maplibregl-ctrl-bottom-left) ul,\n  :global(.maplibregl-ctrl-bottom-right) ul {\n    top: auto;\n    bottom: 100%;\n  }\n\n  button {\n    padding: 0;\n    margin: 0;\n    border: 0;\n    background-color: transparent;\n    height: auto;\n    width: auto;\n\n    &:hover {\n      background-color: transparent;\n    }\n  }\n\n  button:hover :global(svg),\n  button:active :global(svg) {\n    fill: #2b8bfb;\n  }\n\n  .input-group {\n    display: flex;\n    align-items: stretch;\n    gap: 7px;\n    padding-inline: 8px;\n    border-radius: 4px;\n    overflow: hidden;\n\n    &:focus-within {\n      outline: #2b8bfb solid 2px;\n    }\n  }\n\n  .search-button {\n    flex-shrink: 0;\n  }\n\n  .clear-button-container {\n    display: flex;\n    display: none;\n    position: relative;\n    align-items: stretch;\n\n    &.displayable {\n      display: flex;\n      flex-shrink: 0;\n    }\n  }\n\n  :global(.maplibregl-ctrl-geocoder) {\n    position: relative;\n    z-index: 3;\n  }\n\n  :global(.maptiler-ctrl) {\n    &:not(:empty) {\n      box-shadow: none;\n    }\n\n    & .input-group {\n      padding-inline: 8px;\n      border: white solid 2px;\n\n      &:focus-within {\n        border: #2b8bfb solid 2px;\n        outline: 0;\n        outline: none;\n      }\n    }\n\n    & form {\n      &.can-collapse {\n        max-width: 34px;\n      }\n\n      &,\n      &:focus-within,\n      &:hover {\n        width: 270px;\n        max-width: 270px;\n      }\n    }\n  }\n</style>\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n","import bbox from \"@turf/bbox\";\nimport { point, } from \"@turf/helpers\";\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.points([\n *   [-97.522259, 35.4691],\n *   [-97.502754, 35.463455],\n *   [-97.508269, 35.463245]\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var ext = bbox(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return point([x, y], options.properties, options);\n}\nexport default center;\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","export default function(x) {\n  return x;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import center from '@turf/center';\nimport { GeoJSONReader, BufferOp, GeoJSONWriter } from 'turf-jsts';\nimport { featureEach, geomEach } from '@turf/meta';\nimport { geoAzimuthalEquidistant } from 'd3-geo';\nimport { featureCollection, earthRadius, radiansToLength, lengthToRadians, feature } from '@turf/helpers';\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=8] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer(geojson, radius, options) {\n  // Optional params\n  options = options || {};\n\n  // use user supplied options or default values\n  var units = options.units || \"kilometers\";\n  var steps = options.steps || 8;\n\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (typeof options !== \"object\") throw new Error(\"options must be an object\");\n  if (typeof steps !== \"number\") throw new Error(\"steps must be an number\");\n\n  // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n  if (radius === undefined) throw new Error(\"radius is required\");\n  if (steps <= 0) throw new Error(\"steps must be greater than 0\");\n\n  var results = [];\n  switch (geojson.type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        var buffered = bufferFeature(geometry, radius, units, steps);\n        if (buffered) results.push(buffered);\n      });\n      return featureCollection(results);\n    case \"FeatureCollection\":\n      featureEach(geojson, function (feature) {\n        var multiBuffered = bufferFeature(feature, radius, units, steps);\n        if (multiBuffered) {\n          featureEach(multiBuffered, function (buffered) {\n            if (buffered) results.push(buffered);\n          });\n        }\n      });\n      return featureCollection(results);\n  }\n  return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=8] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n  var properties = geojson.properties || {};\n  var geometry = geojson.type === \"Feature\" ? geojson.geometry : geojson;\n\n  // Geometry Types faster than jsts\n  if (geometry.type === \"GeometryCollection\") {\n    var results = [];\n    geomEach(geojson, function (geometry) {\n      var buffered = bufferFeature(geometry, radius, units, steps);\n      if (buffered) results.push(buffered);\n    });\n    return featureCollection(results);\n  }\n\n  // Project GeoJSON to Azimuthal Equidistant projection (convert to Meters)\n  var projection = defineProjection(geometry);\n  var projected = {\n    type: geometry.type,\n    coordinates: projectCoords(geometry.coordinates, projection),\n  };\n\n  // JSTS buffer operation\n  var reader = new GeoJSONReader();\n  var geom = reader.read(projected);\n  var distance = radiansToLength(lengthToRadians(radius, units), \"meters\");\n  var buffered = BufferOp.bufferOp(geom, distance, steps);\n  var writer = new GeoJSONWriter();\n  buffered = writer.write(buffered);\n\n  // Detect if empty geometries\n  if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n  // Unproject coordinates (convert to Degrees)\n  var result = {\n    type: buffered.type,\n    coordinates: unprojectCoords(buffered.coordinates, projection),\n  };\n\n  return feature(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n  if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n  return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj(coords);\n  return coords.map(function (coord) {\n    return projectCoords(coord, proj);\n  });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj.invert(coords);\n  return coords.map(function (coord) {\n    return unprojectCoords(coord, proj);\n  });\n}\n\n/**\n * Define Azimuthal Equidistant projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Azimuthal Equidistant Projection\n */\nfunction defineProjection(geojson) {\n  var coords = center(geojson).geometry.coordinates;\n  var rotation = [-coords[0], -coords[1]];\n  return geoAzimuthalEquidistant().rotate(rotation).scale(earthRadius);\n}\n\nexport default buffer;\n","/**\n * splaytree v3.1.1\n * Fast Splay tree for Node and browser\n *\n * @author Alexander Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar Node = /** @class */ (function () {\r\n    function Node(key, data) {\r\n        this.next = null;\r\n        this.key = key;\r\n        this.data = data;\r\n        this.left = null;\r\n        this.right = null;\r\n    }\r\n    return Node;\r\n}());\n\n/* follows \"An implementation of top-down splaying\"\r\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n */\r\nfunction DEFAULT_COMPARE(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n/**\r\n * Simple top down splay, not requiring i to be in the tree t.\r\n */\r\nfunction splay(i, t, comparator) {\r\n    var N = new Node(null, null);\r\n    var l = N;\r\n    var r = N;\r\n    while (true) {\r\n        var cmp = comparator(i, t.key);\r\n        //if (i < t.key) {\r\n        if (cmp < 0) {\r\n            if (t.left === null)\r\n                break;\r\n            //if (i < t.left.key) {\r\n            if (comparator(i, t.left.key) < 0) {\r\n                var y = t.left; /* rotate right */\r\n                t.left = y.right;\r\n                y.right = t;\r\n                t = y;\r\n                if (t.left === null)\r\n                    break;\r\n            }\r\n            r.left = t; /* link right */\r\n            r = t;\r\n            t = t.left;\r\n            //} else if (i > t.key) {\r\n        }\r\n        else if (cmp > 0) {\r\n            if (t.right === null)\r\n                break;\r\n            //if (i > t.right.key) {\r\n            if (comparator(i, t.right.key) > 0) {\r\n                var y = t.right; /* rotate left */\r\n                t.right = y.left;\r\n                y.left = t;\r\n                t = y;\r\n                if (t.right === null)\r\n                    break;\r\n            }\r\n            l.right = t; /* link left */\r\n            l = t;\r\n            t = t.right;\r\n        }\r\n        else\r\n            break;\r\n    }\r\n    /* assemble */\r\n    l.right = t.left;\r\n    r.left = t.right;\r\n    t.left = N.right;\r\n    t.right = N.left;\r\n    return t;\r\n}\r\nfunction insert(i, data, t, comparator) {\r\n    var node = new Node(i, data);\r\n    if (t === null) {\r\n        node.left = node.right = null;\r\n        return node;\r\n    }\r\n    t = splay(i, t, comparator);\r\n    var cmp = comparator(i, t.key);\r\n    if (cmp < 0) {\r\n        node.left = t.left;\r\n        node.right = t;\r\n        t.left = null;\r\n    }\r\n    else if (cmp >= 0) {\r\n        node.right = t.right;\r\n        node.left = t;\r\n        t.right = null;\r\n    }\r\n    return node;\r\n}\r\nfunction split(key, v, comparator) {\r\n    var left = null;\r\n    var right = null;\r\n    if (v) {\r\n        v = splay(key, v, comparator);\r\n        var cmp = comparator(v.key, key);\r\n        if (cmp === 0) {\r\n            left = v.left;\r\n            right = v.right;\r\n        }\r\n        else if (cmp < 0) {\r\n            right = v.right;\r\n            v.right = null;\r\n            left = v;\r\n        }\r\n        else {\r\n            left = v.left;\r\n            v.left = null;\r\n            right = v;\r\n        }\r\n    }\r\n    return { left: left, right: right };\r\n}\r\nfunction merge(left, right, comparator) {\r\n    if (right === null)\r\n        return left;\r\n    if (left === null)\r\n        return right;\r\n    right = splay(left.key, right, comparator);\r\n    right.left = left;\r\n    return right;\r\n}\r\n/**\r\n * Prints level of the tree\r\n */\r\nfunction printRow(root, prefix, isTail, out, printNode) {\r\n    if (root) {\r\n        out(\"\" + prefix + (isTail ? '└── ' : '├── ') + printNode(root) + \"\\n\");\r\n        var indent = prefix + (isTail ? '    ' : '│   ');\r\n        if (root.left)\r\n            printRow(root.left, indent, false, out, printNode);\r\n        if (root.right)\r\n            printRow(root.right, indent, true, out, printNode);\r\n    }\r\n}\r\nvar Tree = /** @class */ (function () {\r\n    function Tree(comparator) {\r\n        if (comparator === void 0) { comparator = DEFAULT_COMPARE; }\r\n        this._root = null;\r\n        this._size = 0;\r\n        this._comparator = comparator;\r\n    }\r\n    /**\r\n     * Inserts a key, allows duplicates\r\n     */\r\n    Tree.prototype.insert = function (key, data) {\r\n        this._size++;\r\n        return this._root = insert(key, data, this._root, this._comparator);\r\n    };\r\n    /**\r\n     * Adds a key, if it is not present in the tree\r\n     */\r\n    Tree.prototype.add = function (key, data) {\r\n        var node = new Node(key, data);\r\n        if (this._root === null) {\r\n            node.left = node.right = null;\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        var comparator = this._comparator;\r\n        var t = splay(key, this._root, comparator);\r\n        var cmp = comparator(key, t.key);\r\n        if (cmp === 0)\r\n            this._root = t;\r\n        else {\r\n            if (cmp < 0) {\r\n                node.left = t.left;\r\n                node.right = t;\r\n                t.left = null;\r\n            }\r\n            else if (cmp > 0) {\r\n                node.right = t.right;\r\n                node.left = t;\r\n                t.right = null;\r\n            }\r\n            this._size++;\r\n            this._root = node;\r\n        }\r\n        return this._root;\r\n    };\r\n    /**\r\n     * @param  {Key} key\r\n     * @return {Node|null}\r\n     */\r\n    Tree.prototype.remove = function (key) {\r\n        this._root = this._remove(key, this._root, this._comparator);\r\n    };\r\n    /**\r\n     * Deletes i from the tree if it's there\r\n     */\r\n    Tree.prototype._remove = function (i, t, comparator) {\r\n        var x;\r\n        if (t === null)\r\n            return null;\r\n        t = splay(i, t, comparator);\r\n        var cmp = comparator(i, t.key);\r\n        if (cmp === 0) { /* found it */\r\n            if (t.left === null) {\r\n                x = t.right;\r\n            }\r\n            else {\r\n                x = splay(i, t.left, comparator);\r\n                x.right = t.right;\r\n            }\r\n            this._size--;\r\n            return x;\r\n        }\r\n        return t; /* It wasn't there */\r\n    };\r\n    /**\r\n     * Removes and returns the node with smallest key\r\n     */\r\n    Tree.prototype.pop = function () {\r\n        var node = this._root;\r\n        if (node) {\r\n            while (node.left)\r\n                node = node.left;\r\n            this._root = splay(node.key, this._root, this._comparator);\r\n            this._root = this._remove(node.key, this._root, this._comparator);\r\n            return { key: node.key, data: node.data };\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Find without splaying\r\n     */\r\n    Tree.prototype.findStatic = function (key) {\r\n        var current = this._root;\r\n        var compare = this._comparator;\r\n        while (current) {\r\n            var cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return current;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return null;\r\n    };\r\n    Tree.prototype.find = function (key) {\r\n        if (this._root) {\r\n            this._root = splay(key, this._root, this._comparator);\r\n            if (this._comparator(key, this._root.key) !== 0)\r\n                return null;\r\n        }\r\n        return this._root;\r\n    };\r\n    Tree.prototype.contains = function (key) {\r\n        var current = this._root;\r\n        var compare = this._comparator;\r\n        while (current) {\r\n            var cmp = compare(key, current.key);\r\n            if (cmp === 0)\r\n                return true;\r\n            else if (cmp < 0)\r\n                current = current.left;\r\n            else\r\n                current = current.right;\r\n        }\r\n        return false;\r\n    };\r\n    Tree.prototype.forEach = function (visitor, ctx) {\r\n        var current = this._root;\r\n        var Q = []; /* Initialize stack s */\r\n        var done = false;\r\n        while (!done) {\r\n            if (current !== null) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length !== 0) {\r\n                    current = Q.pop();\r\n                    visitor.call(ctx, current);\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n     */\r\n    Tree.prototype.range = function (low, high, fn, ctx) {\r\n        var Q = [];\r\n        var compare = this._comparator;\r\n        var node = this._root;\r\n        var cmp;\r\n        while (Q.length !== 0 || node) {\r\n            if (node) {\r\n                Q.push(node);\r\n                node = node.left;\r\n            }\r\n            else {\r\n                node = Q.pop();\r\n                cmp = compare(node.key, high);\r\n                if (cmp > 0) {\r\n                    break;\r\n                }\r\n                else if (compare(node.key, low) >= 0) {\r\n                    if (fn.call(ctx, node))\r\n                        return this; // stop if smth is returned\r\n                }\r\n                node = node.right;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns array of keys\r\n     */\r\n    Tree.prototype.keys = function () {\r\n        var keys = [];\r\n        this.forEach(function (_a) {\r\n            var key = _a.key;\r\n            return keys.push(key);\r\n        });\r\n        return keys;\r\n    };\r\n    /**\r\n     * Returns array of all the data in the nodes\r\n     */\r\n    Tree.prototype.values = function () {\r\n        var values = [];\r\n        this.forEach(function (_a) {\r\n            var data = _a.data;\r\n            return values.push(data);\r\n        });\r\n        return values;\r\n    };\r\n    Tree.prototype.min = function () {\r\n        if (this._root)\r\n            return this.minNode(this._root).key;\r\n        return null;\r\n    };\r\n    Tree.prototype.max = function () {\r\n        if (this._root)\r\n            return this.maxNode(this._root).key;\r\n        return null;\r\n    };\r\n    Tree.prototype.minNode = function (t) {\r\n        if (t === void 0) { t = this._root; }\r\n        if (t)\r\n            while (t.left)\r\n                t = t.left;\r\n        return t;\r\n    };\r\n    Tree.prototype.maxNode = function (t) {\r\n        if (t === void 0) { t = this._root; }\r\n        if (t)\r\n            while (t.right)\r\n                t = t.right;\r\n        return t;\r\n    };\r\n    /**\r\n     * Returns node at given index\r\n     */\r\n    Tree.prototype.at = function (index) {\r\n        var current = this._root;\r\n        var done = false;\r\n        var i = 0;\r\n        var Q = [];\r\n        while (!done) {\r\n            if (current) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length > 0) {\r\n                    current = Q.pop();\r\n                    if (i === index)\r\n                        return current;\r\n                    i++;\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    Tree.prototype.next = function (d) {\r\n        var root = this._root;\r\n        var successor = null;\r\n        if (d.right) {\r\n            successor = d.right;\r\n            while (successor.left)\r\n                successor = successor.left;\r\n            return successor;\r\n        }\r\n        var comparator = this._comparator;\r\n        while (root) {\r\n            var cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0) {\r\n                successor = root;\r\n                root = root.left;\r\n            }\r\n            else\r\n                root = root.right;\r\n        }\r\n        return successor;\r\n    };\r\n    Tree.prototype.prev = function (d) {\r\n        var root = this._root;\r\n        var predecessor = null;\r\n        if (d.left !== null) {\r\n            predecessor = d.left;\r\n            while (predecessor.right)\r\n                predecessor = predecessor.right;\r\n            return predecessor;\r\n        }\r\n        var comparator = this._comparator;\r\n        while (root) {\r\n            var cmp = comparator(d.key, root.key);\r\n            if (cmp === 0)\r\n                break;\r\n            else if (cmp < 0)\r\n                root = root.left;\r\n            else {\r\n                predecessor = root;\r\n                root = root.right;\r\n            }\r\n        }\r\n        return predecessor;\r\n    };\r\n    Tree.prototype.clear = function () {\r\n        this._root = null;\r\n        this._size = 0;\r\n        return this;\r\n    };\r\n    Tree.prototype.toList = function () {\r\n        return toList(this._root);\r\n    };\r\n    /**\r\n     * Bulk-load items. Both array have to be same size\r\n     */\r\n    Tree.prototype.load = function (keys, values, presort) {\r\n        if (values === void 0) { values = []; }\r\n        if (presort === void 0) { presort = false; }\r\n        var size = keys.length;\r\n        var comparator = this._comparator;\r\n        // sort if needed\r\n        if (presort)\r\n            sort(keys, values, 0, size - 1, comparator);\r\n        if (this._root === null) { // empty tree\r\n            this._root = loadRecursive(keys, values, 0, size);\r\n            this._size = size;\r\n        }\r\n        else { // that re-builds the whole tree from two in-order traversals\r\n            var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\r\n            size = this._size + size;\r\n            this._root = sortedListToBST({ head: mergedList }, 0, size);\r\n        }\r\n        return this;\r\n    };\r\n    Tree.prototype.isEmpty = function () { return this._root === null; };\r\n    Object.defineProperty(Tree.prototype, \"size\", {\r\n        get: function () { return this._size; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tree.prototype, \"root\", {\r\n        get: function () { return this._root; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Tree.prototype.toString = function (printNode) {\r\n        if (printNode === void 0) { printNode = function (n) { return String(n.key); }; }\r\n        var out = [];\r\n        printRow(this._root, '', true, function (v) { return out.push(v); }, printNode);\r\n        return out.join('');\r\n    };\r\n    Tree.prototype.update = function (key, newKey, newData) {\r\n        var comparator = this._comparator;\r\n        var _a = split(key, this._root, comparator), left = _a.left, right = _a.right;\r\n        if (comparator(key, newKey) < 0) {\r\n            right = insert(newKey, newData, right, comparator);\r\n        }\r\n        else {\r\n            left = insert(newKey, newData, left, comparator);\r\n        }\r\n        this._root = merge(left, right, comparator);\r\n    };\r\n    Tree.prototype.split = function (key) {\r\n        return split(key, this._root, this._comparator);\r\n    };\r\n    Tree.prototype[Symbol.iterator] = function () {\r\n        var n;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    n = this.minNode();\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!n) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, n];\r\n                case 2:\r\n                    _a.sent();\r\n                    n = this.next(n);\r\n                    return [3 /*break*/, 1];\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    return Tree;\r\n}());\r\nfunction loadRecursive(keys, values, start, end) {\r\n    var size = end - start;\r\n    if (size > 0) {\r\n        var middle = start + Math.floor(size / 2);\r\n        var key = keys[middle];\r\n        var data = values[middle];\r\n        var node = new Node(key, data);\r\n        node.left = loadRecursive(keys, values, start, middle);\r\n        node.right = loadRecursive(keys, values, middle + 1, end);\r\n        return node;\r\n    }\r\n    return null;\r\n}\r\nfunction createList(keys, values) {\r\n    var head = new Node(null, null);\r\n    var p = head;\r\n    for (var i = 0; i < keys.length; i++) {\r\n        p = p.next = new Node(keys[i], values[i]);\r\n    }\r\n    p.next = null;\r\n    return head.next;\r\n}\r\nfunction toList(root) {\r\n    var current = root;\r\n    var Q = [];\r\n    var done = false;\r\n    var head = new Node(null, null);\r\n    var p = head;\r\n    while (!done) {\r\n        if (current) {\r\n            Q.push(current);\r\n            current = current.left;\r\n        }\r\n        else {\r\n            if (Q.length > 0) {\r\n                current = p = p.next = Q.pop();\r\n                current = current.right;\r\n            }\r\n            else\r\n                done = true;\r\n        }\r\n    }\r\n    p.next = null; // that'll work even if the tree was empty\r\n    return head.next;\r\n}\r\nfunction sortedListToBST(list, start, end) {\r\n    var size = end - start;\r\n    if (size > 0) {\r\n        var middle = start + Math.floor(size / 2);\r\n        var left = sortedListToBST(list, start, middle);\r\n        var root = list.head;\r\n        root.left = left;\r\n        list.head = list.head.next;\r\n        root.right = sortedListToBST(list, middle + 1, end);\r\n        return root;\r\n    }\r\n    return null;\r\n}\r\nfunction mergeLists(l1, l2, compare) {\r\n    var head = new Node(null, null); // dummy\r\n    var p = head;\r\n    var p1 = l1;\r\n    var p2 = l2;\r\n    while (p1 !== null && p2 !== null) {\r\n        if (compare(p1.key, p2.key) < 0) {\r\n            p.next = p1;\r\n            p1 = p1.next;\r\n        }\r\n        else {\r\n            p.next = p2;\r\n            p2 = p2.next;\r\n        }\r\n        p = p.next;\r\n    }\r\n    if (p1 !== null) {\r\n        p.next = p1;\r\n    }\r\n    else if (p2 !== null) {\r\n        p.next = p2;\r\n    }\r\n    return head.next;\r\n}\r\nfunction sort(keys, values, left, right, compare) {\r\n    if (left >= right)\r\n        return;\r\n    var pivot = keys[(left + right) >> 1];\r\n    var i = left - 1;\r\n    var j = right + 1;\r\n    while (true) {\r\n        do\r\n            i++;\r\n        while (compare(keys[i], pivot) < 0);\r\n        do\r\n            j--;\r\n        while (compare(keys[j], pivot) > 0);\r\n        if (i >= j)\r\n            break;\r\n        var tmp = keys[i];\r\n        keys[i] = keys[j];\r\n        keys[j] = tmp;\r\n        tmp = values[i];\r\n        values[i] = values[j];\r\n        values[j] = tmp;\r\n    }\r\n    sort(keys, values, left, j, compare);\r\n    sort(keys, values, j + 1, right, compare);\r\n}\n\nexport default Tree;\n//# sourceMappingURL=splay.esm.js.map\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  var ab = a - b;\n\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder = /*#__PURE__*/function () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder = /*#__PURE__*/function () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\nvar SweepEvent = /*#__PURE__*/function () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment = /*#__PURE__*/function () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n      }\n\n      if (arx !== brx) {\n        // are these two [almost] vertical segments with opposite orientation?\n        // if so, the one with the lower right endpoint comes first\n        var ay = ary - aly;\n        var ax = arx - alx;\n        var by = bry - bly;\n        var bx = brx - blx;\n        if (ay > ax && by < bx) return 1;\n        if (ay < ax && by > bx) return -1;\n      } // we have colinear segments with matching orientation\n      // consider the one with more left-more right endpoint to be first\n\n\n      if (arx > brx) return 1;\n      if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, rings, windings) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point.\n     *\n     * A point P is considered to be colinear to a segment if there\n     * exists a distance D such that if we travel along the segment\n     * from one * endpoint towards the other a distance D, we find\n     * ourselves at point P.\n     *\n     * Return value indicates:\n     *\n     *   1: point lies above the segment (to the left of vertical)\n     *   0: point is colinear to segment\n     *  -1: point lies below the segment (to the right of vertical)\n     */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var lPt = this.leftSE.point;\n      var rPt = this.rightSE.point;\n      var v = this.vector(); // Exactly vertical segments.\n\n      if (lPt.x === rPt.x) {\n        if (point.x === lPt.x) return 0;\n        return point.x < lPt.x ? 1 : -1;\n      } // Nearly vertical segments with an intersection.\n      // Check to see where a point on the line with matching Y coordinate is.\n\n\n      var yDist = (point.y - lPt.y) / v.y;\n      var xFromYDist = lPt.x + yDist * v.x;\n      if (point.x === xFromYDist) return 0; // General case.\n      // Check to see where a point on the line with matching X coordinate is.\n\n      var xDist = (point.x - lPt.x) / v.x;\n      var yFromXDist = lPt.y + xDist * v.y;\n      if (point.y === yFromXDist) return 0;\n      return point.y < yFromXDist ? -1 : 1;\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var tBbox = this.bbox();\n      var oBbox = other.bbox();\n      var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      var tlp = this.leftSE.point;\n      var trp = this.rightSE.point;\n      var olp = other.leftSE.point;\n      var orp = other.rightSE.point; // does each endpoint touch the other segment?\n      // note that we restrict the 'touching' definition to only allow segments\n      // to touch endpoints that lie forward from where we are in the sweep line pass\n\n      var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n      var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n      var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n      var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return trp;\n        if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE) {\n          if (tlp.x === orp.x && tlp.y === orp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return tlp;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE) {\n          if (trp.x === olp.x && trp.y === olp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return olp;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return trp;\n      if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n      // sometimes one of the resulting new segments is vertical, in which\n      // case its left and right events may need to be swapped\n\n      if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n        newSeg.swapEvents();\n      }\n\n      if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n        this.swapEvents();\n      } // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Swap which event is left and right */\n\n  }, {\n    key: \"swapEvents\",\n    value: function swapEvents() {\n      var tmpEvt = this.rightSE;\n      this.rightSE = this.leftSE;\n      this.leftSE = tmpEvt;\n      this.leftSE.isLeft = true;\n      this.rightSE.isLeft = false;\n\n      for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n        this.windings[i] *= -1;\n      }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp = Segment.compare(consumer, consumee);\n      if (cmp === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n        var ring = consumee.rings[i];\n        var winding = consumee.windings[i];\n        var index = consumer.rings.indexOf(ring);\n\n        if (index === -1) {\n          consumer.rings.push(ring);\n          consumer.windings.push(winding);\n        } else consumer.windings[index] += winding;\n      }\n\n      consumee.rings = null;\n      consumee.windings = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      if (this._prevInResult !== undefined) return this._prevInResult;\n      if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n      return this._prevInResult;\n    }\n  }, {\n    key: \"beforeState\",\n    value: function beforeState() {\n      if (this._beforeState !== undefined) return this._beforeState;\n      if (!this.prev) this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };else {\n        var seg = this.prev.consumedBy || this.prev;\n        this._beforeState = seg.afterState();\n      }\n      return this._beforeState;\n    }\n  }, {\n    key: \"afterState\",\n    value: function afterState() {\n      if (this._afterState !== undefined) return this._afterState;\n      var beforeState = this.beforeState();\n      this._afterState = {\n        rings: beforeState.rings.slice(0),\n        windings: beforeState.windings.slice(0),\n        multiPolys: []\n      };\n      var ringsAfter = this._afterState.rings;\n      var windingsAfter = this._afterState.windings;\n      var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n      for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n        var ring = this.rings[i];\n        var winding = this.windings[i];\n        var index = ringsAfter.indexOf(ring);\n\n        if (index === -1) {\n          ringsAfter.push(ring);\n          windingsAfter.push(winding);\n        } else windingsAfter[index] += winding;\n      } // calcualte polysAfter\n\n\n      var polysAfter = [];\n      var polysExclude = [];\n\n      for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n        if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n        var _ring = ringsAfter[_i];\n        var poly = _ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (_ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n          var _index = polysAfter.indexOf(_ring.poly);\n\n          if (_index !== -1) polysAfter.splice(_index, 1);\n        }\n      } // calculate multiPolysAfter\n\n\n      for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n        var mp = polysAfter[_i2].multiPoly;\n        if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n      }\n\n      return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      if (this._isInResult !== undefined) return this._isInResult;\n      var mpsBefore = this.beforeState().multiPolys;\n      var mpsAfter = this.afterState().multiPolys;\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            this._isInResult = noBefores !== noAfters;\n            break;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            this._isInResult = most === operation.numMultiPolys && least < most;\n            break;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            this._isInResult = diff % 2 === 1;\n            break;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n            break;\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n\n      return this._isInResult;\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n        winding = 1;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n        winding = -1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn = /*#__PURE__*/function () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n\n    if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n    this.bbox = {\n      ll: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      },\n      ur: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      }\n    };\n    var prevPoint = firstPoint;\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n      if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    } // add segment from last to first if last is not the same as first\n\n\n    if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn = /*#__PURE__*/function () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    if (!Array.isArray(geomPoly)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      var ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn = /*#__PURE__*/function () {\n  function MultiPolyIn(geom, isSubject) {\n    _classCallCheck(this, MultiPolyIn);\n\n    if (!Array.isArray(geom)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    try {\n      // if the input looks like a polygon, convert it to a multipolygon\n      if (typeof geom[0][0][0] === 'number') geom = [geom];\n    } catch (ex) {// The input is either malformed or has empty arrays.\n      // In either case, it will be handled later on.\n    }\n\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n\n    for (var i = 0, iMax = geom.length; i < iMax; i++) {\n      var poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n\n    this.isSubject = isSubject;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut = /*#__PURE__*/function () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut = /*#__PURE__*/function () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut = /*#__PURE__*/function () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine = /*#__PURE__*/function () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\nvar POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\nvar Operation = /*#__PURE__*/function () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Convert inputs to MultiPoly objects */\n\n      var multipolys = [new MultiPolyIn(geom, true)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n      }\n\n      operation.numMultiPolys = multipolys.length;\n      /* BBox optimization for difference operation\n       * If the bbox of a multipolygon that's part of the clipping doesn't\n       * intersect the bbox of the subject at all, we can just drop that\n       * multiploygon. */\n\n      if (operation.type === 'difference') {\n        // in place removal\n        var subject = multipolys[0];\n        var _i = 1;\n\n        while (_i < multipolys.length) {\n          if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n        }\n      }\n      /* BBox optimization for intersection operation\n       * If we can find any pair of multipolygons whose bbox does not overlap,\n       * then the result will be empty. */\n\n\n      if (operation.type === 'intersection') {\n        // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n        //       it could be optimized to O(n * ln(n))\n        for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n          var mpA = multipolys[_i2];\n\n          for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n          }\n        }\n      }\n      /* Put segment endpoints in a priority queue */\n\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n          queue.insert(sweepEvents[_j]);\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n          }\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          var seg = evt.segment;\n          throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n        }\n\n        if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n        }\n\n        if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import polygonClipping from 'polygon-clipping';\nimport { polygon, multiPolygon } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n  var geom1 = getGeom(polygon1);\n  var geom2 = getGeom(polygon2);\n  var properties = polygon1.properties || {};\n\n  var differenced = polygonClipping.difference(\n    geom1.coordinates,\n    geom2.coordinates\n  );\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return polygon(differenced[0], properties);\n  return multiPolygon(differenced, properties);\n}\n\nexport default difference;\n","import buffer from \"@turf/buffer\";\nimport difference from \"@turf/difference\";\nimport type {\n  MultiPolygon,\n  Polygon,\n  Position,\n  Feature as TurfFeature,\n} from \"@turf/helpers\";\nimport type { FeatureCollection } from \"geojson\";\n\n// see https://maplibre.org/maplibre-gl-js-docs/example/line-across-180th-meridian/\nfunction fixRing(ring: Position[]) {\n  let prev: Position | undefined = undefined;\n\n  for (const c of ring) {\n    if (prev && c[0] - prev[0] >= 180) {\n      c[0] -= 360;\n    } else if (prev && c[0] - prev[0] < -180) {\n      c[0] += 360;\n    }\n\n    prev = c;\n  }\n}\n\nexport function setMask(\n  picked: TurfFeature<Polygon | MultiPolygon>,\n  setData: (data: FeatureCollection<Polygon | MultiPolygon>) => void,\n) {\n  const diff = difference(\n    {\n      type: \"Polygon\",\n      coordinates: [\n        [\n          [180, 90],\n          [-180, 90],\n          [-180, -90],\n          [180, -90],\n          [180, 90],\n        ],\n      ],\n    },\n    picked,\n  );\n\n  if (!diff) {\n    return;\n  }\n\n  diff.properties = { isMask: \"y\" };\n\n  const fixed = buffer(picked, 0);\n\n  if (fixed.geometry.type === \"Polygon\") {\n    for (const ring of fixed.geometry.coordinates) {\n      fixRing(ring);\n    }\n  } else {\n    for (const poly of fixed.geometry.coordinates) {\n      for (const ring of poly) {\n        fixRing(ring);\n      }\n    }\n  }\n\n  setData({\n    type: \"FeatureCollection\",\n    features: [fixed, diff],\n  });\n}\n","import type { MultiPolygon, Polygon } from \"@turf/helpers\";\nimport type { FeatureCollection } from \"geojson\";\nimport { Feature, MapBrowserEvent } from \"ol\";\nimport type { FeatureLike } from \"ol/Feature\";\nimport type Map from \"ol/Map\";\nimport type { AnimationOptions, FitOptions } from \"ol/View\";\nimport {\n  Geometry as OlGeometry,\n  GeometryCollection as OlGeometryCollection,\n  LineString as OlLineString,\n  MultiLineString as OlMultiLineString,\n  MultiPolygon as OlMultiPolygon,\n  Polygon as OlPolygon,\n  Point,\n} from \"ol/geom\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport { fromLonLat, toLonLat, transformExtent } from \"ol/proj\";\nimport VectorSource from \"ol/source/Vector\";\nimport Fill from \"ol/style/Fill\";\nimport Icon from \"ol/style/Icon\";\nimport Stroke from \"ol/style/Stroke\";\nimport Style, { type StyleLike } from \"ol/style/Style\";\nimport Text from \"ol/style/Text\";\nimport type { FlatStyleLike } from \"ol/style/flat\";\nimport { setMask } from \"./mask\";\nimport type {\n  BBox,\n  Feature as FeatureType,\n  MapController,\n  MapEvent,\n  Position,\n} from \"./types\";\n\nconst EPSG_4326 = \"EPSG:4326\";\n\nfunction defaultStyle(feature: FeatureLike) {\n  const properties = feature.getProperties();\n\n  const { isMask } = properties;\n\n  const type = feature.getGeometry()?.getType();\n\n  const weight = isMask\n    ? 0\n    : type === \"LineString\" || type === \"MultiLineString\"\n    ? 3\n    : 2;\n\n  return new Style({\n    stroke: isMask\n      ? undefined\n      : new Stroke({\n          color: \"#3170fe\",\n          lineDash: [weight, weight],\n          width: weight,\n          lineCap: \"butt\",\n        }),\n    fill: isMask\n      ? new Fill({\n          color: \"#00000020\",\n        })\n      : undefined,\n    image: new Icon({\n      src: `/icons/marker_${\n        properties.isReverse\n          ? \"reverse\"\n          : properties.isSelected\n          ? \"selected\"\n          : \"unselected\"\n      }.svg`,\n      anchor: [0.5, 1],\n    }),\n    zIndex: properties.isSelected ? 2 : properties.isReverse ? 0 : 1,\n    text:\n      properties.isSelected && properties.tooltip\n        ? new Text({\n            backgroundFill: new Fill({ color: \"white\" }),\n            text: properties.tooltip,\n            offsetY: -40,\n            backgroundStroke: new Stroke({\n              color: \"white\",\n              lineJoin: \"round\",\n              width: 3,\n            }),\n            padding: [2, 0, 0, 2],\n          })\n        : undefined,\n  });\n}\n\nexport function createOpenLayersMapController(\n  map: Map,\n  flyToOptions: AnimationOptions = {},\n  flyToBounds: FitOptions = {},\n  fullGeometryStyle: StyleLike | FlatStyleLike = defaultStyle,\n) {\n  let prevSelected = -1;\n\n  let prevHovered: string | undefined;\n\n  let eventHandler: ((e: MapEvent) => void) | undefined;\n\n  let reverseMarker: Feature | undefined;\n\n  let indicatingReverse = false;\n\n  const vectorLayer = new VectorLayer({\n    updateWhileAnimating: true,\n  });\n\n  map.addLayer(vectorLayer);\n\n  const source = new VectorSource({});\n\n  vectorLayer.setSource(source);\n\n  vectorLayer.setStyle(fullGeometryStyle);\n\n  map.on(\"click\", (e) => {\n    map.forEachFeatureAtPixel(e.pixel, (feature) => {\n      const id = feature.getId() as string;\n\n      if (!id) {\n        return;\n      }\n\n      e.stopPropagation();\n\n      eventHandler?.({ type: \"markerClick\", id });\n\n      return feature;\n    });\n  });\n\n  map.on(\"pointermove\", (e) => {\n    const featureId = map.forEachFeatureAtPixel(e.pixel, (feature) => {\n      return feature.getId() as string | undefined;\n    });\n\n    if (prevHovered === featureId) {\n      return;\n    }\n\n    if (prevHovered) {\n      eventHandler?.({\n        type: \"markerMouseLeave\",\n        id: prevHovered,\n      });\n    }\n\n    if (featureId) {\n      eventHandler?.({\n        type: \"markerMouseEnter\",\n        id: featureId,\n      });\n    }\n\n    map.getTargetElement().style.cursor = featureId\n      ? \"pointer\"\n      : indicatingReverse\n      ? \"crosshair\"\n      : \"\";\n\n    prevHovered = featureId;\n  });\n\n  function fromWgs84(geometry: OlGeometry) {\n    return geometry.transform(EPSG_4326, map.getView().getProjection());\n  }\n\n  const handleMapClick = (e: MapBrowserEvent<PointerEvent>) => {\n    eventHandler?.({\n      type: \"mapClick\",\n      coordinates: toLonLat(e.coordinate, map.getView().getProjection()) as [\n        number,\n        number,\n      ],\n    });\n  };\n\n  return {\n    setEventHandler(handler: undefined | ((e: MapEvent) => void)): void {\n      if (handler) {\n        eventHandler = handler;\n        map.on(\"click\", handleMapClick);\n      } else {\n        eventHandler = undefined;\n        map.un(\"click\", handleMapClick);\n      }\n    },\n\n    flyTo(center: Position, zoom: number) {\n      map.getView().animate({\n        center: fromLonLat(center, map.getView().getProjection()),\n        zoom,\n        duration: 2000,\n        ...flyToOptions,\n      });\n    },\n\n    fitBounds(bbox: BBox, padding: number, maxZoom: number): void {\n      map\n        .getView()\n        .fit(transformExtent(bbox, EPSG_4326, map.getView().getProjection()), {\n          padding: [padding, padding, padding, padding],\n          maxZoom,\n          duration: 2000,\n          ...flyToBounds,\n        });\n    },\n\n    indicateReverse(reverse: boolean): void {\n      indicatingReverse = reverse;\n\n      map.getTargetElement().style.cursor = reverse ? \"crosshair\" : \"\";\n    },\n\n    setReverseMarker(coordinates?: Position) {\n      if (reverseMarker) {\n        if (!coordinates) {\n          source.removeFeature(reverseMarker);\n\n          reverseMarker.dispose();\n\n          reverseMarker = undefined;\n        } else {\n          (reverseMarker.getGeometry() as Point).setCoordinates(\n            fromLonLat(coordinates, map.getView().getProjection()),\n          );\n        }\n      } else if (coordinates) {\n        reverseMarker = new Feature(\n          new Point(fromLonLat(coordinates, map.getView().getProjection())),\n        );\n\n        reverseMarker.setProperties({ isReverse: true });\n\n        source.addFeature(reverseMarker);\n      }\n    },\n\n    setMarkers(\n      markedFeatures: FeatureType[] | undefined,\n      picked: FeatureType | undefined,\n    ): void {\n      function setData(data?: FeatureCollection<Polygon | MultiPolygon>) {\n        if (!data) {\n          return;\n        }\n\n        for (const f of data.features) {\n          const geom =\n            f.geometry.type === \"Polygon\"\n              ? new OlPolygon(f.geometry.coordinates)\n              : f.geometry.type === \"MultiPolygon\"\n              ? new OlMultiPolygon(f.geometry.coordinates)\n              : null;\n\n          if (!geom) {\n            continue;\n          }\n\n          source.addFeature(\n            new Feature({\n              isMask: !!f.properties?.isMask,\n              geometry: fromWgs84(geom),\n            }),\n          );\n        }\n      }\n\n      source.clear();\n\n      if (reverseMarker) {\n        source.addFeature(reverseMarker);\n      }\n\n      setData();\n\n      if (picked) {\n        let handled = false;\n\n        if (picked.geometry.type === \"GeometryCollection\") {\n          const geoms = picked.geometry.geometries\n            .map((geometry) =>\n              geometry.type === \"Polygon\"\n                ? new OlPolygon(geometry.coordinates)\n                : geometry.type === \"MultiPolygon\"\n                ? new OlMultiPolygon(geometry.coordinates)\n                : null,\n            )\n            .filter(<T>(a: T | null): a is T => !!a);\n\n          if (geoms.length > 0) {\n            source.addFeature(\n              new Feature(fromWgs84(new OlGeometryCollection(geoms))),\n            );\n\n            handled = true;\n          } else {\n            for (const geometry of picked.geometry.geometries) {\n              if (geometry.type === \"LineString\") {\n                source.addFeature(\n                  new Feature(\n                    fromWgs84(new OlLineString(geometry.coordinates)),\n                  ),\n                );\n\n                handled = true;\n              } else if (geometry.type === \"MultiLineString\") {\n                source.addFeature(\n                  new Feature(\n                    fromWgs84(new OlMultiLineString(geometry.coordinates)),\n                  ),\n                );\n              }\n\n              handled = true;\n            }\n          }\n        }\n\n        if (handled) {\n          // nothing\n        } else if (picked.geometry.type === \"Polygon\") {\n          setMask(picked as any, setData);\n        } else if (picked.geometry.type === \"MultiPolygon\") {\n          setMask(picked as any, setData);\n        } else if (picked.geometry.type === \"LineString\") {\n          source.addFeature(\n            new Feature(\n              fromWgs84(new OlLineString(picked.geometry.coordinates)),\n            ),\n          );\n\n          return; // no pin for (multi)linestrings\n        } else if (picked.geometry.type === \"MultiLineString\") {\n          source.addFeature(\n            new Feature(\n              fromWgs84(new OlMultiLineString(picked.geometry.coordinates)),\n            ),\n          );\n\n          return; // no pin for (multi)linestrings\n        }\n\n        source.addFeature(new Feature(fromWgs84(new Point(picked.center))));\n      }\n\n      for (const feature of markedFeatures ?? []) {\n        if (feature === picked) {\n          continue;\n        }\n\n        const marker = new Feature(\n          new Point(fromLonLat(feature.center, map.getView().getProjection())),\n        );\n\n        marker.setId(feature.id);\n\n        marker.setProperties({\n          fuzzy: !!feature.matching_text,\n          tooltip: feature.place_name.replace(/,.*/, \"\"),\n        });\n\n        source.addFeature(marker);\n      }\n    },\n\n    setSelectedMarker(index: number): void {\n      const features = source.getFeatures();\n\n      const offset = features[0]?.getProperties().isReverse ? 1 : 0;\n\n      if (prevSelected > -1) {\n        features[prevSelected + offset]?.setProperties({\n          isSelected: false,\n        });\n      }\n\n      if (index > -1) {\n        features[index + offset]?.setProperties({\n          isSelected: true,\n        });\n      }\n\n      prevSelected = index;\n    },\n\n    getCenterAndZoom() {\n      const view = map.getView();\n\n      const center = view.getCenter();\n\n      const zoom = view.getZoom();\n\n      if (!center || zoom === undefined) {\n        return undefined;\n      }\n\n      return [zoom, ...(toLonLat(center, view.getProjection()) as Position)];\n    },\n  } satisfies MapController;\n}\n","import type { Map } from \"ol\";\nimport type { AnimationOptions, FitOptions } from \"ol/View\";\nimport { Control } from \"ol/control\";\nimport type { Options } from \"ol/control/Control\";\nimport BaseEvent from \"ol/events/Event\";\nimport type { StyleLike } from \"ol/style/Style\";\nimport type { FlatStyleLike } from \"ol/style/flat\";\nimport GeocodingControlComponent from \"./GeocodingControl.svelte\";\nimport { createOpenLayersMapController } from \"./openlayers-controller\";\nimport type { ControlOptions, Feature, FeatureCollection } from \"./types\";\nexport { createOpenLayersMapController } from \"./openlayers-controller\";\n\ntype OpenLayersControlOptions = ControlOptions &\n  Options & {\n    //   /**\n    //    * If `true`, a [Marker](https://leafletjs.com/reference.html#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.\n    //    * If the value is an object, the marker will be constructed using these options.\n    //    * If `false`, no marker will be added to the map.\n    //    *\n    //    * @default true\n    //    */\n    //   marker?: boolean | L.MarkerOptions;\n    //   /**\n    //    * If `true`, [Markers](https://leafletjs.com/reference.html#marker) will be added to the map at the location the top results for the query.\n    //    * If the value is an object, the marker will be constructed using these options.\n    //    * If `false`, no marker will be added to the map.\n    //    *\n    //    * @default true\n    //    */\n    //   showResultMarkers?: boolean | L.MarkerOptions;\n    //   /**\n    //    * If `false`, animating the map to a selected result is disabled.\n    //    * If `true`, animating the map will use the default animation parameters.\n    //    * If an object, it will be passed as options to the map `flyTo` or `fitBounds` method providing control over the animation of the transition.\n    //    *\n    //    * @default true\n    //    */\n    flyTo?: boolean | (AnimationOptions & FitOptions);\n    //   /**\n    //    * Style for full feature geometry GeoJSON.\n    //    */\n    fullGeometryStyle?: StyleLike | FlatStyleLike;\n  };\n\nexport class GeocodingControl extends Control {\n  #gc?: GeocodingControlComponent;\n\n  #options: OpenLayersControlOptions;\n\n  constructor(options: OpenLayersControlOptions) {\n    const div = document.createElement(\"div\");\n\n    div.className = \"ol-search\";\n\n    super({\n      element: div,\n      target: options.target,\n    });\n\n    const {\n      // marker,\n      // showResultMarkers,\n      flyTo,\n      fullGeometryStyle,\n      ...restOptions\n    } = options;\n\n    this.#gc = new GeocodingControlComponent({\n      target: div,\n      props: {\n        flyTo: flyTo === undefined ? true : !!flyTo,\n        ...restOptions,\n      },\n    });\n\n    for (const eventName of [\n      \"select\",\n      \"pick\",\n      \"featuresListed\",\n      \"featuresMarked\",\n      \"response\",\n      \"optionsVisibilityChange\",\n      \"reverseToggle\",\n      \"queryChange\",\n    ] as const) {\n      this.#gc.$on(eventName, (event) => {\n        switch (eventName) {\n          case \"select\":\n            this.dispatchEvent(\n              new SelectEvent(event.detail as Feature | undefined),\n            );\n            break;\n          case \"featuresListed\":\n            this.dispatchEvent(\n              new FeaturesListedEvent(event.detail as Feature[] | undefined),\n            );\n            break;\n          case \"featuresMarked\":\n            this.dispatchEvent(\n              new FeaturesMarkedEvent(event.detail as Feature[] | undefined),\n            );\n            break;\n          case \"optionsVisibilityChange\":\n            this.dispatchEvent(\n              new OptionsVisibilityChangeEvent(event.detail as boolean),\n            );\n            break;\n          case \"pick\":\n            this.dispatchEvent(\n              new PickEvent(event.detail as Feature | undefined),\n            );\n            break;\n          case \"queryChange\":\n            this.dispatchEvent(new QueryChangeEvent(event.detail as string));\n            break;\n          case \"response\":\n            this.dispatchEvent(\n              new ResponseEvent(\n                (event.detail as { url: string }).url,\n                (\n                  event.detail as { featureCollection: FeatureCollection }\n                ).featureCollection,\n              ),\n            );\n            break;\n          case \"reverseToggle\":\n            this.dispatchEvent(new ReverseToggleEvent(event.detail as boolean));\n            break;\n        }\n      });\n    }\n\n    this.#options = options;\n  }\n\n  setMap(map: Map | null): void {\n    super.setMap(map);\n\n    if (map) {\n      const {\n        // marker,\n        // showResultMarkers,\n        flyTo,\n        fullGeometryStyle,\n      } = this.#options;\n\n      const mapController = createOpenLayersMapController(\n        map,\n        typeof flyTo === \"boolean\" ? undefined : flyTo,\n        typeof flyTo === \"boolean\" ? undefined : flyTo,\n        // marker,\n        // showResultMarkers,\n        fullGeometryStyle,\n      );\n\n      this.#gc?.$set({ mapController });\n    }\n  }\n\n  setOptions(options: OpenLayersControlOptions) {\n    this.#options = options;\n\n    const {\n      // marker,\n      // showResultMarkers,\n      flyTo,\n      fullGeometryStyle,\n      ...restOptions\n    } = this.#options;\n\n    this.#gc?.$set({\n      ...restOptions,\n      flyTo: flyTo === undefined ? true : !!flyTo,\n    });\n  }\n\n  setQuery(value: string, submit = true) {\n    this.#gc?.setQuery(value, submit);\n  }\n\n  clearMap() {\n    this.#gc?.clearMap();\n  }\n\n  clearList() {\n    this.#gc?.clearList();\n  }\n\n  focus() {\n    this.#gc?.focus();\n  }\n\n  blur() {\n    this.#gc?.blur();\n  }\n\n  // onRemove() {\n  //   this.#gc?.$destroy();\n  // }\n}\n\nexport class SelectEvent extends BaseEvent {\n  feature: Feature | undefined;\n\n  constructor(feature: Feature | undefined) {\n    super(\"select\");\n\n    this.feature = feature;\n  }\n}\n\nexport class FeaturesListedEvent extends BaseEvent {\n  features: Feature[] | undefined;\n\n  constructor(features: Feature[] | undefined) {\n    super(\"featuresListed\");\n\n    this.features = features;\n  }\n}\n\nexport class FeaturesMarkedEvent extends BaseEvent {\n  features: Feature[] | undefined;\n\n  constructor(features: Feature[] | undefined) {\n    super(\"featuresMarked\");\n\n    this.features = features;\n  }\n}\n\nexport class OptionsVisibilityChangeEvent extends BaseEvent {\n  optionsVisible: boolean;\n\n  constructor(optionsVisible: boolean) {\n    super(\"optionsVisibilityChange\");\n\n    this.optionsVisible = optionsVisible;\n  }\n}\n\nexport class PickEvent extends BaseEvent {\n  feature: Feature | undefined;\n\n  constructor(feature: Feature | undefined) {\n    super(\"pick\");\n\n    this.feature = feature;\n  }\n}\n\nexport class QueryChangeEvent extends BaseEvent {\n  query: string;\n\n  constructor(query: string) {\n    super(\"queryChange\");\n\n    this.query = query;\n  }\n}\n\nexport class ResponseEvent extends BaseEvent {\n  url: string;\n\n  featureCollection: FeatureCollection;\n\n  constructor(url: string, featureCollection: FeatureCollection) {\n    super(\"response\");\n\n    this.url = url;\n\n    this.featureCollection = featureCollection;\n  }\n}\n\nexport class ReverseToggleEvent extends BaseEvent {\n  reverse: boolean;\n\n  constructor(reverse: boolean) {\n    super(\"reverseToggle\");\n\n    this.reverse = reverse;\n  }\n}\n"],"names":["BaseEvent","type","BaseEvent$1","ObjectEventType","Disposable","Disposable$1","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","linearFindNearest","arr","target","direction","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","i","TRUE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","index","EventTarget","EventType$1","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventType","len","keys","unByKey","Observable$1","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","BaseObject$1","MapEventType","ua","SAFARI","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","passive","options","createCanvasContext2D","width","height","canvasPool","settings","canvas","releaseCanvas","context","removeNode","node","Control","element","map","mapEvent","Control$1","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","style","METERS_PER_UNIT","Projection","global","tileGrid","extent","worldExtent","func","Projection$1","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","resolution","point","PROJECTIONS","fromEPSG4326","input","output","dimension","y","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","add","projection","transforms","destination","transformFn","sourceCode","destinationCode","transform","Relationship","messages","AssertionError","message","AssertionError$1","assert","assertion","errorCode","_boundingExtentXYs","xs","ys","dest","minX","minY","maxX","maxY","createOrUpdate","buffer","clone","closestSquaredDistanceXY","x","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendCoordinate","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getCenter","getForViewAndSize","center","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getHeight","getWidth","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","stops","coordinates","l","wrapX","projectionExtent","worldWidth","wrapAndSliceX","clamp","min","max","squaredSegmentDistance","t","squaredDistance","toRadians","angleInDegrees","modulo","r","lerp","toFixed","n","decimals","factor","delta","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","getWorldsAway","sourceExtentWidth","levels","level","warn","args","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","fromLonLat","toLonLat","lonLat","lon","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","CollectionEventType","Property","CollectionEvent","array","f","elem","prev","except","Collection$2","Collection","create","set","c","d","e","setFromArray","transform1","transform2","apply","makeScale","compose","dx1","dy1","sx","sy","dx2","dy2","sin","cos","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","rgb","fromString","cacheSize","s","fromStringInternal_","asArray","g","hasAlpha","normalize","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","LayerProperty","BaseLayer","properties","managed","state","zIndex","states","background","maxResolution","minResolution","maxZoom","minZoom","opacity","visible","zindex","BaseLayer$1","ViewHint","ViewProperty","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","scale","translate","tmpTransform","createTransform","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","Geometry$2","Geometry","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","SimpleGeometry$1","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","area","linearRingss","LinearRing","linearRingArea","LinearRing$2","Point","Point$2","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","polygon","linearRingsArea","flatCenter","OlPolygon","fromExtent","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","padding","oldPadding","newPadding","offsetX","offsetY","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","fraction","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","hints","zoom","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","geometry","polygonFromExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","duration","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","multiWorld","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","View$1","Layer","baseOptions","pixel","view","frameState","layerState","layerExtent","inView","getAttributions","attributions","layerRenderer","RenderEventType","layerStatesArray","arrayLayerState","viewState","Layer$1","RenderEvent","inversePixelTransform","RenderEvent$1","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","executeLabelInstructions","label","contextInstructions","toSize","noop","assign","tar","run","blank_object","run_all","fns","is_function","thing","safe_not_equal","src_url_equal_anchor","src_url_equal","element_src","url","is_empty","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","null_to_empty","append","insert","detach","name","svg_element","space","empty","handler","prevent_default","attr","attribute","children","set_data","set_input_value","toggle_class","toggle","custom_event","detail","bubbles","cancelable","current_component","set_current_component","component","get_current_component","onDestroy","createEventDispatcher","callbacks","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","ensure_array_like","array_like_or_iterator","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","o","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","will_move","did_move","new_block","old_block","new_key","old_key","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","detaching","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","rest","nodes","SvelteComponent","__publicField","PUBLIC_VERSION","svg","path","img","img_src_value","span","_a","_b","t1_value","t4_value","create_if_block_1","create_if_block_2","create_if_block_3","show_if_1","show_if_2","show_if_3","li","span3","span1","span0","span2","t1","t4","feature","$$props","selected","showPlaceType","missingIconsCache","iconsBaseUrl","categories","category","imageUrl","loadIconAttempt","handleImgError","error_handler","_c","_d","$$invalidate","placeType","div","wrapNum","range","includeMax","unwrapBbox","bbox0","bbox","cachedLocation","getProximity","mapController","proximity","ac","centerAndZoom","rule","cg","resolve","reject","pos","err","button","ul","div1","div0","featureitem_changes","create_if_block_5","if_block1","create_if_block_4","form","button0","input_1","button1","className","apiKey","clearButtonTitle","clearOnBlur","collapsed","country","debounceSearch","enableReverse","errorMessage","filter","flyTo","fuzzyMatch","language","limit","minLength","noResultsMessage","placeholder","reverseActive","reverseButtonTitle","searchValue","showFullGeometry","showResultsWhileTyping","types","apiUrl","fetchParameters","adjustUrlQuery","sp","focus","blur","setQuery","submit","selectedItemIndex","handleOnSubmit","handleInput","clearList","listFeatures","picked","clearMap","markedFeatures","focused","lastSearchUrl","error","cachedFeatures","abortController","searchTimeoutRef","focusedDelayed","prevIdToFly","dispatch","zoomTo","isQuerReverse","search","zoomToResults","byId","exact","isReverse","res","featureCollection","fuzzyOnly","handleReverse","handleKeyDown","dir","debounce","sv","pick","click_handler","$$value","focus_handler","blur_handler","click_handler_2","click_handler_3","mouseenter_handler","focus_handler_1","mouseleave_handler","m","Feature","geometryOrProperties","createStyleFunction","id","styles","Feature$1","Fill","Fill$1","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","LineString","lineString","OlLineString","Stroke","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","Stroke$1","ImageState","ImageStyle","pixelRatio","displacement","rotateWithView","ImageStyle$1","asColorLike","RegularShape","fill","image","renderOptions","stroke","strokeWidth","r1","r2","points","alpha","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","strokeStyle","maxRadius","radius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","Circle","Style","defaultGeometryFunction","renderer","toFunction","styleFunction","defaultStyles","createDefaultStyle","Style$1","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","placement","repeat","textAlign","justify","textBaseline","Text$1","quickselect","left","compare","quickselectStep","defaultCompare","sd","newLeft","newRight","swap","RBush$2","maxEntries","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","indexes","parent","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","listenImage","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","taintedTestContext","IconImage","imageState","iconImageCache","calculateScale","wantedWidth","wantedHeight","Icon","getIconImage","onload","imageSize","iconImageSize","Icon$1","toStyle","flatStyle","getFill","getStroke","getText","getImage","prefix","iconSrc","iconImg","shapePoints","circleRadius","BaseVectorLayer","RBush","renderOrder","styleLike","toStyleFunction","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","dashArray","dash","tmpCoord","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","Builder","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","PolygonBuilder$1","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","chunkStart","chunkEnd","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","oo","cc","chunk","chunkBegin","geometryWidths","beg","keep","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","LayerRenderer","layer","tiles","tile","tileRange","hitTolerance","matches","LayerRenderer$1","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","container","topLeft","topRight","bottomRight","bottomLeft","inverted","CanvasLayerRenderer$1","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","declutterMode","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","ExecutorGroup$1","CanvasImmediateRenderer","userTransform","localTransform","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","features","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","executorGroup","vectorSource","viewHints","endWorld","world","compositionContext","canvasTransform","transformToString","declutterExecutorGroup","clipped","render","intersectsExtent","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","userExtent","replayGroupInstructions","CanvasVectorLayerRenderer$1","VectorLayer","VectorLayer$1","RBush_","extents","uid","rbush","RBush$1","Source","adaptAttributions","self","attributionLike","Source$1","VectorEventType","all","withCredentials","loadFeaturesXhr","format","success","failure","xhr","dataProjection","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","collection","featureKey","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","GeometryCollection","geometryCollection","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","clonedGeometries","OlGeometryCollection","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","OlMultiLineString","MultiPoint","multiPoint","MultiPoint$2","MultiPolygon","thisLayout","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","OlMultiPolygon","earthRadius","factors","geom","feat","isNumber","_i","coordinates_1","ring","fc","radiansToLength","radians","units","lengthToRadians","num","coordEach","geojson","excludeWrapCoord","stopG","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","featureEach","geomEach","featureProperties","featureBBox","ext","arrayLike","relativeStart","relativeEnd","NumberUtil","IllegalArgumentException","Error","Double","staticAccessors$1","Comparable","Clonable","Comparator","Serializable","Coordinate","staticAccessors","ordinateIndex","other","dz","DimensionalComparator","dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","compZ","CoordinateSequenceFactory","Location","staticAccessors$4","locationValue","hasInterface","MathUtil","staticAccessors$5","ln","v1","v2","v3","v4","x$1","min$1","max$1","v1$1","v2$1","v3$1","StringBuffer","str","Integer","Character","DD","staticAccessors$7","insertDecimalPoint","magnitude","mag","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","continueExtractingDigits","remMag","y$1","yhi","ylo","hc","tc","hy","ty","C","U","u","zhi","zlo","exp","fhi","flo","plus5","value$1","ax","axdd","diffSq","d2","H","S","H$1","h$1","T","S$1","s$1","e$1","f$1","hx","tx","specialStr","sigDigits","numZeroes","zeroes","digits","expStr","trailingDigits","digitsWithDecimal","strlen","isNegative","signCh","numBeforeDec","ch","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","xApprox","CGAlgorithmsDD","staticAccessors$6","q","q1","q2","denom1","denom2","denom","numx1","numx2","numx","fracP","numy1","numy2","numy","fracQ","pa","pb","pc","detsum","detleft","detright","errbound","CoordinateSequence","staticAccessors$8","env","Exception","NotRepresentableException","Exception$$1","System","srcPos","destPos","HCoordinate","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","staticAccessors$9","otherEnvelope","intMinX","intMinY","intMaxX","intMaxY","transX","transY","minq","maxq","minp","maxp","regExes","WKTParser","geometryFactory","GeometryFactory","wkt","parse$1","extract$1","wktType","coordinate$1","point$1","multipoint$1","this$1","linestring$1","linearring$1","multilinestring$1","polygon$1","multipolygon$1","components","lines","linestring","linearring","rings","shell","holes","wktArray","WKTWriter","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","expectedValue","actualValue","LineIntersector","staticAccessors$10","segmentIndex","intIndex","catBuf","dist0","dist1","precisionModel","inputLineIndex","dist","ptIndex","pt","pdx","pdy","RobustLineIntersector","LineIntersector$$1","intPt","env0","env1","CGAlgorithms","n1","n2","n3","n4","normPt","x4","xabs","intPtDD","isIn","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","collinear","nearestPt","minDist","RobustDeterminant","sign","RayCrossingCounter","minx","maxx","xIntSign","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","sum","x0$1","sum$1","A","B","D","noIntersection","rNumb","sNum","pts","nPts","hiPt","hiIndex","iPrev","iNext","disc","isCCW","len2","lineIntersector","GeometryComponentFilter","factory","staticAccessors$11","g$1","other$1","comp","copy","SRID","userData","aElement","bElement","comparison","geometryChangedFilter","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","boundaryCount","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","IndexOutOfBoundsException","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","oldElement","Iterator_","Iterator$$1","arrayList","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coll","isChanged","coord$2","allowRepeated$1","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","allowRepeated$4","coord$5","allowRepeated$5","inc","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","testPts","testPt","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","nonNull","newCoord","srcStart","destStart","pts1","pts2","minCoord","npts","extractPts","iPts","forwardComp","isEqualRev","dir1","dir2","i1","i2","comparePt","Map$1","SortedMap","Map","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","BLACK","RED","colorOf","parentOf","setColor","leftOf","rightOf","TreeMap","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","Arrays","Dimension","staticAccessors$14","dimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","Geometry$$1","envelope","childCoordinates","otherCollection","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","GeometryCollection$$1","nLines","revLines","BoundaryOp","bnRule","geom$1","bnRule$1","mLine","bdyPts","closedEndpointOnBoundary","it","entry","valence","Counter","bop","bop$1","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","os","ps","t$1","depth","stackTrace","lineNumberReader","separator","separatorlen","tokenList","tmpString","token","CoordinateSequences","minDim","dim","cs1","cs2","cs1Size","cs2Size","fact","newseq","cs","isClosed","otherLineString","revLine","line$1","ls","Puntal","Polygonal","shellCoordinates","xChanged","yChanged","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","minCoordinate","poly","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","otherHole","LineString$$1","rev","allRings","allRingsArray","GeometryEditor","staticAccessors$16","isUserDataCopied","operation","collectionForType","newPolygon","hole","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","HashMap","MapInterface","PrecisionModel","Type","modelType","pm","staticAccessors$19","otherPrecisionModel","otherSigDigits","description","floatSingleVal","maxSigDigits","pm1","pm2","staticAccessors$1$1","staticAccessors$2","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","geom0","isCollection","coordinates$1","shell$1","editor","ptSeq","multiPolygons","multiPolygonArray","geometryArray","multiLineStrings","multiLineStringArray","lineStringArray","multiPoints","multiPointArray","linearRingArray","pointArray","polygonArray","exemplar","geometryTypes","GeoJSONParser","json","parse","extract","sub","multipoint","geoJson","multilinestring","shellGeoJson","holeGeoJson","multipolygon","GeoJSONReader","GeoJSONWriter","Position","staticAccessors$20","EmptyStackException","Stack","RightmostEdgeFinder","de","side","pPrev","pNext","orientation","usePrev","star","dirEdgeList","rightmostSide","TopologyException","msg","LinkedList","BufferSubgraph","startEdge","de$1","outsideDepth","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","dirEdge","nodeStack","symNode","TopologyLocation","location","on","gl","on$1","locValue","newLoc","temp","posIndex","locIndex","locValue$1","le","loc","Label","onLoc","lbl","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","count","location$1","lineLabel","EdgeRing","isFirstEdge","degree","isForward","edgePts","startIndex","startIndex$1","deLabel","deLabel$1","holeLR","MinimalEdgeRing","EdgeRing$$1","er","MaximalEdgeRing","minEdgeRings","minEr","GraphComponent","isVisited","isInResult","isCovered","im","Node","GraphComponent$$1","edges","out","label2","eltIndex","nLoc","argIndex","onLocation","thisLoc","NodeMap","nodeFact","node$1","bdyNodes","Quadrant","staticAccessors$21","quad","quad1","quad2","diff","halfPlane","EdgeEnd","edge$1","edge$2","p0$1","label$1","lastDotPos","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","depthVal","isInteriorAreaEdge","nextMin","minEdgeRing","isLine","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","directionFactor","oppositePos","oppositeDepth","currLocation","nextLocation","NodeFactory","PlanarGraph","nodeit","ep0","ep1","eCoord","ee","edgesToAdd","de1","de2","edgeRings","shellList","freeHoleList","resultPolyList","maxEdgeRings","dirEdges","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","ItemBoundable","bounds","PriorityQueue","minItem","ItemVisitor","SpatialIndex","itemEnv","AbstractNode","staticAccessors$22","childBoundable","Collections","alen","BoundablePair","boundable1","boundable2","itemDistance","priQ","isComp1","isComp2","nd","bndComposite","bndOther","bp","AbstractSTRtree","nodeCapacity","nodeCapacity$1","staticAccessors$23","childToRemove","valuesTree","valuesTreeForNode","valuesTreeForChild","boundables","level$1","top","boundables$1","boundable","searchBounds","searchBounds$1","visitor","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","item$1","childToPrune","boundablesOfALevel","parentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","IntersectsOp","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","verticalSlices","STRtreeNode","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","itemDist","initBndPair","tree","itemDist$1","bp$1","initBndPair$1","maxDistance","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","octant","xSign","ySign","compareSign0","compareSign1","SegmentNode","segString","segmentOctant","maxSegmentIndex","SegmentNodeList","eiPrev","ei","collapsedVertexIndexes","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","edgeList","newEdge","collapsedVertexIndex","numVerticesBetween","isCollapsed","maxSegIndex","ipt","NodedSegmentString","eiNew","splitEdges","split0","pt0","splitn","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","NodableSegmentString","intPt$1","segmentIndex$1","normalizedSegmentIndex","nextSegIndex","nextPt","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","ss","LineSegment","staticAccessors$24","seg","orient0","orient1","geomFactory","pf0","pf1","newp0","newp1","closestPt","close00","close01","close10","close11","comp0","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","offsetx","offsety","inputPt","segFrac","bits0","hash0","bits1","hash1","MonotoneChainOverlapAction","mc1","start1","mc2","start2","MonotoneChain","start0","end0","mcs","mc","mco","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","startIndexList","safeStart","chainQuad","pts$1","mcList","Noder","SinglePassNoder","segInt","MCIndexNoder","SinglePassNoder$$1","si","segStr","segChains","inputSegStrings","overlapAction","SegmentOverlapAction","queryChain","overlapChains","testChain","MonotoneChainOverlapAction$$1","ss1","ss2","BufferParameters","quadrantSegments","quadrantSegments$1","endCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","staticAccessors$25","quadSegs","simplifyFactor","isSingleSided","BufferInputLineSimplifier","inputLine","staticAccessors$26","i0","distanceTol","midIndex","lastIndex","isMiddleVertexDeleted","isAngleToSimplify","isConcave","simp","OffsetSegmentString","staticAccessors$28","bufPt","lastPt","ptDist","startPt","minimimVertexDistance","Angle","staticAccessors$29","dx0","dy0","dotprod","anglePrev","angleNext","tip1","tail","tip2","a1","a2","ang1","ang2","delAngle","angleDegrees","crossproduct","angDel","OffsetSegmentGenerator","bufParams","staticAccessors$27","addStartPoint","outsideTurn","offsetL","offsetR","squareCapSideOffset","squareCapLOffset","squareCapROffset","offset0","isMitreWithinLimit","mitreRatio","endAngle","s1","s2","basePt","ang0","angDiff","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelDelta","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","sideSign","totalAngle","nSegs","initAngle","currAngleInc","currAngle","numInt","OffsetCurveBuilder","inputPts","isRightSide","posDistance","segGen","curvePts","distTol","simp2","simp1","lineCoord","bufDistance","SubgraphDepthLocater","subgraphs","staticAccessors$30","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","stabbedSegments$1","ds","DepthSegment","stabbingRayLeftPt$2","stabbedSegments$2","orientIndex","seg0","seg1","compare0","Triangle","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","ccx","ccy","l1","l2","len0","frac","splitPt","uz","vx","vy","vz","crossx","crossy","crossz","absSq","area3D","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","inputGeom","curveBuilder","curve","offsetSide","shellCoord","holeCoord","triangleCoord","bufferDistance","tri","inCentre","distToCentre","cwLeftLoc","cwRightLoc","ringCoord","envMinDimension","PointOnGeometryLocator","GeometryCollectionIterator","SimplePointInAreaLocator","geomi","g2","EdgeEndStar","iNextCW","startLoc","currLoc","it$1","geomGraph","lastEdgeIndex","startLabel","eSearch","hasDimensionalCollapseEdge","geomi$1","DirectedEdgeStar","EdgeEndStar$$1","firstOut","incoming","nextOut","nextIn","de0","deLast","quad0","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","lastDepth","endIndex","startDepth$1","currDepth","nextDe","degree$1","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","oca","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","edgeColl","matchEdge","SegmentIntersector","e0","segIndex0","e1","segIndex1","IntersectionAdder","EdgeIntersection","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","mcb","chainIndex","chainIndex0","mce","chainIndex1","mce$1","Depth","staticAccessors$31","depthValue","minDepth","newValue","newPts","newe","isIsolated","isEqualForward","isEqualReverse","iRev","BufferBuilder","existingEdge","existingLabel","labelToMerge","mergeDelta","existingDelta","newDelta","subgraphList","polyBuilder","processedGraphs","subgraph","locater","emptyGeom","noder","curveSetBuilder","bufferSegStrList","resultGeom","nodedSegStrings","oldLabel","lLoc","rLoc","ScaledNoder","scaleFactor","noder$1","scaleFactor$1","nodedSegmentStrings","roundPts","roundPtsNoDup","splitSS","intSegStrings","NodingValidator","staticAccessors$33","ss$1","ss0","ss0$1","ss1$1","pts0","HotPixel","staticAccessors$34","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","pScaled","safeTolerance","intersectsLeft","intersectsBottom","segIndex","MonotoneChainSelectAction","MCIndexPointSnapper","staticAccessors$35","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","HotPixelSnapAction","MonotoneChainSelectAction$$1","InteriorIntersectionFinderAdder","MCIndexSnapRounder","inputSegmentStrings","resultSegStrings","nv","intFinderAdder","edge0","isNodeAdded","snapPts","snapPt","BufferOp","staticAccessors$32","fixedPM","bufBuilder","precDigits","precisionDigits","sizeBasedScaleFactor","argPM","gBuf","geomBuf","distance$1","bufOp","geomBuf$1","g$2","distance$2","params","bufOp$1","geomBuf$2","g$3","distance$3","bufOp$2","geomBuf$3","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","PointPairDistance","DistanceToPointFinder","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","segment","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","staticAccessors$36","distFilter","MaxMidpointDistanceFilter","MaxPointDistanceFilter","bufferCurve","midPt","PolygonExtracter","comps","LinearComponentExtracter","lines$1","isForcedToLineString","forceToLineString","geoms","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","boundaryRule","shellLoc","holeLoc","p$2","ptCoord","ml","mpoly","GeometryLocation","component$1","staticAccessors$38","PointExtracter","ConnectedElementLocationFilter","locations","DistanceOp","g0","g1","g0$1","g1$1","terminateDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","polys","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","locGeom","lines0","lines1","flip","nearestPts","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","pt1","distOp","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","staticAccessors$39","densifyFrac","discreteGeom","MaxPointDistanceFilter$1","fracFilter","MaxDensifiedByFractionDistanceFilter","delx","dely","BufferDistanceValidator","staticAccessors$37","bufCurve","maxDist","haus","distDelta","inputCurve","lineExtracter","BufferResultValidator","staticAccessors$40","expectedEnv","bufEnv","distValid","inputArea","resultArea","checkName","validator","BasicSegmentString","InteriorIntersectionFinder","isCheckEndSegmentsOnly","findAllIntersections","keepIntersections","isEndSegPresent","finder","FastNodingValidator","intSegs","EdgeNodingValidator","GeometryCollectionMapper","mapOp","mapped","op","mapper","LineBuilder","ptLocator","opCode","targetIndex","OverlayOp","edgesList","PointBuilder","GeometryTransformer","isAllValidLinearRings","transGeomList","transformGeom","seqSize","LineStringSnapper","srcLine","snapTolerance","srcPts","snapTolerance$1","srcCoords","srcPt","snapVert","distinctPtCount","snapIndex","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","staticAccessors$41","snapGeom","snapTrans","SnapTransformer","cleanResult","snappedGeom","ringPts","minSegLen","snapTol","ptSet","segLen","snapper0","snapper1","fixedSnapTol","minDimension","GeometryTransformer$$1","isSelfSnap","snapper","CommonBits","numBits","numSignExp","bits","numStr","padStr","bitStr","mask","nBits","invMask","zeroed","num1","num2","CommonBitsRemover","CommonCoordinateFilter","staticAccessors$42","trans","Translater","invCoord","xp","yp","SnapOverlayOp","remGeom","prepGeom","SnapIfNeededOverlayOp","isSuccess","savedException","isValid","MonotoneChain$2","SweepLineEvent","insertEvent","staticAccessors$43","deleteEventIndex","pe","ev","EdgeSetIntersector","SegmentIntersector$2","includeProper","recordIsolated","isDoneWhenProperInt","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","edges0","edges1","si$1","si$2","testAllSegments","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","staticAccessors$45","queryMin","queryMax","NodeComparator","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","SortedPackedIntervalRTree","ArrayListVisitor","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","rcc","SegmentVisitor","GeometryGraph","PlanarGraph$$1","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","isRings","computeAllSegments","edgelist","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","g0$2","GeometryMapper","op$1","mapped$1","gr","resultPointList","resultLineList","opcode","newEdges","overlayOpCode","baseSplitEdges","lineBuilder","pointBuilder","graphNode","ni","geom1","gov","geomOv","dim0","dim1","resultDimension","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","boundaryDistanceTolerance","extracter","PolygonalLineworkExtracter","linework","OffsetPointGenerator","offsetPts","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","staticAccessors$46","overlayOp","expectedInterior","overlayOp$1","ptGen","resultInInterior","GeometryCombiner","elems","elemGeom","combiner","combiner$1","combiner$2","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","staticAccessors$47","geomTree","disjointGeoms","intersectingGeoms","g0Env","g1Env","combo","commonEnv","itemTree","unionAll","union","common","disjointPolys","g0Int","g1Int","overallUnion","gColl","factory$1","gColl$1","unionAll$1","UnionOp","adder","Adder","bv","av","epsilon","pi","halfPi","quarterPi","tau","degrees","abs","atan","atan2","sqrt","asin","streamGeometry","stream","streamGeometryType","streamObjectType","streamLine","streamPolygon","geoStream","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","t0","cosRadius","sinRadius","clipBuffer","clipLine","pointEqual","Intersection","clipPolygon","segments","compareIntersection","startInside","subject","clip","link","current","isSubject","bisector","ascendingComparator","merge$1","arrays","clipMax","clipMin","clipExtent","from","to","corner","comparePoint","ca","cb","activeStream","bufferStream","x__","y__","v__","x_","y_","v_","clean","clipStream","lineStart","lineEnd","polygonStart","polygonEnd","polygonInside","winding","a0","b0","b1","cleanInside","merge","linePoint","v","polygonContains","normal","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","phi1","absDelta","antimeridian","arc","intersection","phiArc","identity","boundsStream","boundsPoint","pointVisible","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","ringSegments","validSegment","clipAntimeridian","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","clipCircle","cr","smallRadius","notHemisphere","c0","v00","intersect","two","n2n2","n1n2","n1xn2","uu","t2","polar","meridian","transformer","methods","TransformStream","fitExtent","fitSize","maxDepth","cosMinDistance","resample","project","delta2","resampleNone","resampleLineTo","phi2","lambda2","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","transformRadians","projectionMutator","projectAt","projectRotate","preclip","postclip","projectResample","projectTransform","cacheStream","invert","_","reset","recenter","azimuthalRaw","azimuthalInvert","sc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","geoAzimuthalEquidistant","equirectangularRaw","steps","results","buffered","bufferFeature","multiBuffered","defineProjection","projected","projectCoords","reader","writer","coordsIsNaN","unprojectCoords","proj","__generator","body","verb","DEFAULT_COMPARE","splay","split","printRow","root","isTail","printNode","indent","Tree","Q","successor","predecessor","toList","presort","sort","loadRecursive","mergedList","mergeLists","createList","sortedListToBST","newKey","newData","middle","head","pivot","_classCallCheck","_defineProperties","descriptor","_createClass","protoProps","staticProps","isInBbox","getBboxOverlap","b2","lowerX","upperX","lowerY","upperY","EPSILON_SQ","ab","PtRounder","CoordRounder","SplayTree","prevNode","nextNode","rounder","crossProduct","dotProduct","compareVectorAngles","endPt1","endPt2","kross","sineOfAngle","pShared","pBase","pAngle","vBase","vAngle","cosineOfAngle","horizontalIntersection","verticalIntersection","pt2","ve","d1","SweepEvent","ptCmp","Segment","aPt","bPt","isLeft","otherEvents","iMax","numEvents","evt1","evt2","events","baseEvent","_this","fillCache","linkedEvent","nextEvent","_cache$get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","leftSE","rightSE","windings","newRightSE","lPt","rPt","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","newEvents","alreadyLinked","newLeftSE","oldRightSE","newSeg","tmpEvt","consumer","consumee","_tmp","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_iMax","_ring","_index","_i2","_iMax2","mp","mpsBefore","noBefores","noAfters","least","most","isJustSubject","mps","leftPt","rightPt","cmpPts","RingIn","geomRing","isExterior","firstPoint","prevPoint","sweepEvents","PolyIn","geomPoly","multiPoly","ringSweepEvents","jMax","MultiPolyIn","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","startingPoint","intersectionLEs","availableLEs","firstPt","indexLE","intersectionLE","ringEvents","prevPt","_pt","_nextPt","iEnd","orderedPoints","enclosing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","exteriorRing","ringGeom","MultiPolyOut","polyGeom","enclosingRing","SweepLine","queue","nextSeg","prevMySplitter","prevInter","newEventsFromSplit","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","cmpSplitters","_newEventsFromSplit2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","POLYGON_CLIPPING_MAX_QUEUE_SIZE","POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS","Operation","moreGeoms","multipolys","mpA","_j","_jMax","sweepLine","prevQueueSize","_evt","_len","_key","intersection$1","_len2","_key2","xor","_len3","_key3","difference","subjectGeom","_len4","clippingGeoms","_key4","getGeom","polygon1","polygon2","geom2","differenced","polygonClipping","fixRing","setMask","setData","fixed","EPSG_4326","defaultStyle","isMask","weight","createOpenLayersMapController","flyToOptions","flyToBounds","fullGeometryStyle","prevSelected","prevHovered","eventHandler","reverseMarker","indicatingReverse","fromWgs84","handleMapClick","handled","marker","_gc","_options","GeocodingControl","__privateAdd","restOptions","__privateSet","GeocodingControlComponent","eventName","__privateGet","SelectEvent","FeaturesListedEvent","FeaturesMarkedEvent","OptionsVisibilityChangeEvent","PickEvent","QueryChangeEvent","ResponseEvent","ReverseToggleEvent","optionsVisible","query"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182]}