{"version":3,"file":"maplibregl-controller.js","sources":["../node_modules/@turf/helpers/dist/esm/index.js","../node_modules/bignumber.js/bignumber.mjs","../node_modules/splaytree-ts/dist/esm/index.js","../node_modules/polyclip-ts/dist/esm/index.js","../node_modules/@turf/meta/dist/esm/index.js","../node_modules/@turf/union/dist/esm/index.js","../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../src/MarkerIcon.svelte","../node_modules/@turf/bbox/dist/esm/index.js","../node_modules/@turf/difference/dist/esm/index.js","../node_modules/@turf/flatten/dist/esm/index.js","../src/geoUtils.ts","../src/mask.ts","../src/maplibregl-controller.ts"],"sourcesContent":["// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","// src/index.ts\nvar SplayTreeNode = class {\n  key;\n  left = null;\n  right = null;\n  constructor(key) {\n    this.key = key;\n  }\n};\nvar SplayTreeSetNode = class extends SplayTreeNode {\n  constructor(key) {\n    super(key);\n  }\n};\nvar SplayTreeMapNode = class _SplayTreeMapNode extends SplayTreeNode {\n  value;\n  constructor(key, value) {\n    super(key);\n    this.value = value;\n  }\n  replaceValue(value) {\n    const node = new _SplayTreeMapNode(this.key, value);\n    node.left = this.left;\n    node.right = this.right;\n    return node;\n  }\n};\nvar SplayTree = class {\n  size = 0;\n  modificationCount = 0;\n  splayCount = 0;\n  splay(key) {\n    const root = this.root;\n    if (root == null) {\n      this.compare(key, key);\n      return -1;\n    }\n    let right = null;\n    let newTreeRight = null;\n    let left = null;\n    let newTreeLeft = null;\n    let current = root;\n    const compare = this.compare;\n    let comp;\n    while (true) {\n      comp = compare(current.key, key);\n      if (comp > 0) {\n        let currentLeft = current.left;\n        if (currentLeft == null) break;\n        comp = compare(currentLeft.key, key);\n        if (comp > 0) {\n          current.left = currentLeft.right;\n          currentLeft.right = current;\n          current = currentLeft;\n          currentLeft = current.left;\n          if (currentLeft == null) break;\n        }\n        if (right == null) {\n          newTreeRight = current;\n        } else {\n          right.left = current;\n        }\n        right = current;\n        current = currentLeft;\n      } else if (comp < 0) {\n        let currentRight = current.right;\n        if (currentRight == null) break;\n        comp = compare(currentRight.key, key);\n        if (comp < 0) {\n          current.right = currentRight.left;\n          currentRight.left = current;\n          current = currentRight;\n          currentRight = current.right;\n          if (currentRight == null) break;\n        }\n        if (left == null) {\n          newTreeLeft = current;\n        } else {\n          left.right = current;\n        }\n        left = current;\n        current = currentRight;\n      } else {\n        break;\n      }\n    }\n    if (left != null) {\n      left.right = current.left;\n      current.left = newTreeLeft;\n    }\n    if (right != null) {\n      right.left = current.right;\n      current.right = newTreeRight;\n    }\n    if (this.root !== current) {\n      this.root = current;\n      this.splayCount++;\n    }\n    return comp;\n  }\n  splayMin(node) {\n    let current = node;\n    let nextLeft = current.left;\n    while (nextLeft != null) {\n      const left = nextLeft;\n      current.left = left.right;\n      left.right = current;\n      current = left;\n      nextLeft = current.left;\n    }\n    return current;\n  }\n  splayMax(node) {\n    let current = node;\n    let nextRight = current.right;\n    while (nextRight != null) {\n      const right = nextRight;\n      current.right = right.left;\n      right.left = current;\n      current = right;\n      nextRight = current.right;\n    }\n    return current;\n  }\n  _delete(key) {\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp != 0) return null;\n    let root = this.root;\n    const result = root;\n    const left = root.left;\n    this.size--;\n    if (left == null) {\n      this.root = root.right;\n    } else {\n      const right = root.right;\n      root = this.splayMax(left);\n      root.right = right;\n      this.root = root;\n    }\n    this.modificationCount++;\n    return result;\n  }\n  addNewRoot(node, comp) {\n    this.size++;\n    this.modificationCount++;\n    const root = this.root;\n    if (root == null) {\n      this.root = node;\n      return;\n    }\n    if (comp < 0) {\n      node.left = root;\n      node.right = root.right;\n      root.right = null;\n    } else {\n      node.right = root;\n      node.left = root.left;\n      root.left = null;\n    }\n    this.root = node;\n  }\n  _first() {\n    const root = this.root;\n    if (root == null) return null;\n    this.root = this.splayMin(root);\n    return this.root;\n  }\n  _last() {\n    const root = this.root;\n    if (root == null) return null;\n    this.root = this.splayMax(root);\n    return this.root;\n  }\n  clear() {\n    this.root = null;\n    this.size = 0;\n    this.modificationCount++;\n  }\n  has(key) {\n    return this.validKey(key) && this.splay(key) == 0;\n  }\n  defaultCompare() {\n    return (a, b) => a < b ? -1 : a > b ? 1 : 0;\n  }\n  wrap() {\n    return {\n      getRoot: () => {\n        return this.root;\n      },\n      setRoot: (root) => {\n        this.root = root;\n      },\n      getSize: () => {\n        return this.size;\n      },\n      getModificationCount: () => {\n        return this.modificationCount;\n      },\n      getSplayCount: () => {\n        return this.splayCount;\n      },\n      setSplayCount: (count) => {\n        this.splayCount = count;\n      },\n      splay: (key) => {\n        return this.splay(key);\n      },\n      has: (key) => {\n        return this.has(key);\n      }\n    };\n  }\n};\nvar SplayTreeMap = class extends SplayTree {\n  root = null;\n  compare;\n  validKey;\n  constructor(compare, isValidKey) {\n    super();\n    this.compare = compare ?? this.defaultCompare();\n    this.validKey = isValidKey ?? ((a) => a != null && a != void 0);\n  }\n  delete(key) {\n    if (!this.validKey(key)) return false;\n    return this._delete(key) != null;\n  }\n  forEach(f) {\n    const nodes = new SplayTreeMapEntryIterableIterator(this.wrap());\n    let result;\n    while (result = nodes.next(), !result.done) {\n      f(result.value[1], result.value[0], this);\n    }\n  }\n  get(key) {\n    if (!this.validKey(key)) return void 0;\n    if (this.root != null) {\n      const comp = this.splay(key);\n      if (comp == 0) {\n        return this.root.value;\n      }\n    }\n    return void 0;\n  }\n  hasValue(value) {\n    const initialSplayCount = this.splayCount;\n    const visit = (node) => {\n      while (node != null) {\n        if (node.value == value) return true;\n        if (initialSplayCount != this.splayCount) {\n          throw \"Concurrent modification during iteration.\";\n        }\n        if (node.right != null && visit(node.right)) {\n          return true;\n        }\n        node = node.left;\n      }\n      return false;\n    };\n    return visit(this.root);\n  }\n  set(key, value) {\n    const comp = this.splay(key);\n    if (comp == 0) {\n      this.root = this.root.replaceValue(value);\n      this.splayCount += 1;\n      return this;\n    }\n    this.addNewRoot(new SplayTreeMapNode(key, value), comp);\n    return this;\n  }\n  setAll(other) {\n    other.forEach((value, key) => {\n      this.set(key, value);\n    });\n  }\n  setIfAbsent(key, ifAbsent) {\n    let comp = this.splay(key);\n    if (comp == 0) {\n      return this.root.value;\n    }\n    const modificationCount = this.modificationCount;\n    const splayCount = this.splayCount;\n    const value = ifAbsent();\n    if (modificationCount != this.modificationCount) {\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (splayCount != this.splayCount) {\n      comp = this.splay(key);\n    }\n    this.addNewRoot(new SplayTreeMapNode(key, value), comp);\n    return value;\n  }\n  isEmpty() {\n    return this.root == null;\n  }\n  isNotEmpty() {\n    return !this.isEmpty();\n  }\n  firstKey() {\n    if (this.root == null) return null;\n    return this._first().key;\n  }\n  lastKey() {\n    if (this.root == null) return null;\n    return this._last().key;\n  }\n  lastKeyBefore(key) {\n    if (key == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp < 0) return this.root.key;\n    let node = this.root.left;\n    if (node == null) return null;\n    let nodeRight = node.right;\n    while (nodeRight != null) {\n      node = nodeRight;\n      nodeRight = node.right;\n    }\n    return node.key;\n  }\n  firstKeyAfter(key) {\n    if (key == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(key);\n    if (comp > 0) return this.root.key;\n    let node = this.root.right;\n    if (node == null) return null;\n    let nodeLeft = node.left;\n    while (nodeLeft != null) {\n      node = nodeLeft;\n      nodeLeft = node.left;\n    }\n    return node.key;\n  }\n  update(key, update, ifAbsent) {\n    let comp = this.splay(key);\n    if (comp == 0) {\n      const modificationCount = this.modificationCount;\n      const splayCount = this.splayCount;\n      const newValue = update(this.root.value);\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (splayCount != this.splayCount) {\n        this.splay(key);\n      }\n      this.root = this.root.replaceValue(newValue);\n      this.splayCount += 1;\n      return newValue;\n    }\n    if (ifAbsent != null) {\n      const modificationCount = this.modificationCount;\n      const splayCount = this.splayCount;\n      const newValue = ifAbsent();\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (splayCount != this.splayCount) {\n        comp = this.splay(key);\n      }\n      this.addNewRoot(new SplayTreeMapNode(key, newValue), comp);\n      return newValue;\n    }\n    throw \"Invalid argument (key): Key not in map.\";\n  }\n  updateAll(update) {\n    const root = this.root;\n    if (root == null) return;\n    const iterator = new SplayTreeMapEntryIterableIterator(this.wrap());\n    let node;\n    while (node = iterator.next(), !node.done) {\n      const newValue = update(...node.value);\n      iterator.replaceValue(newValue);\n    }\n  }\n  keys() {\n    return new SplayTreeKeyIterableIterator(this.wrap());\n  }\n  values() {\n    return new SplayTreeValueIterableIterator(this.wrap());\n  }\n  entries() {\n    return this[Symbol.iterator]();\n  }\n  [Symbol.iterator]() {\n    return new SplayTreeMapEntryIterableIterator(this.wrap());\n  }\n  [Symbol.toStringTag] = \"[object Map]\";\n};\nvar SplayTreeSet = class _SplayTreeSet extends SplayTree {\n  root = null;\n  compare;\n  validKey;\n  constructor(compare, isValidKey) {\n    super();\n    this.compare = compare ?? this.defaultCompare();\n    this.validKey = isValidKey ?? ((v) => v != null && v != void 0);\n  }\n  delete(element) {\n    if (!this.validKey(element)) return false;\n    return this._delete(element) != null;\n  }\n  deleteAll(elements) {\n    for (const element of elements) {\n      this.delete(element);\n    }\n  }\n  forEach(f) {\n    const nodes = this[Symbol.iterator]();\n    let result;\n    while (result = nodes.next(), !result.done) {\n      f(result.value, result.value, this);\n    }\n  }\n  add(element) {\n    const compare = this.splay(element);\n    if (compare != 0) this.addNewRoot(new SplayTreeSetNode(element), compare);\n    return this;\n  }\n  addAndReturn(element) {\n    const compare = this.splay(element);\n    if (compare != 0) this.addNewRoot(new SplayTreeSetNode(element), compare);\n    return this.root.key;\n  }\n  addAll(elements) {\n    for (const element of elements) {\n      this.add(element);\n    }\n  }\n  isEmpty() {\n    return this.root == null;\n  }\n  isNotEmpty() {\n    return this.root != null;\n  }\n  single() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    if (this.size > 1) throw \"Bad state: Too many element\";\n    return this.root.key;\n  }\n  first() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    return this._first().key;\n  }\n  last() {\n    if (this.size == 0) throw \"Bad state: No element\";\n    return this._last().key;\n  }\n  lastBefore(element) {\n    if (element == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(element);\n    if (comp < 0) return this.root.key;\n    let node = this.root.left;\n    if (node == null) return null;\n    let nodeRight = node.right;\n    while (nodeRight != null) {\n      node = nodeRight;\n      nodeRight = node.right;\n    }\n    return node.key;\n  }\n  firstAfter(element) {\n    if (element == null) throw \"Invalid arguments(s)\";\n    if (this.root == null) return null;\n    const comp = this.splay(element);\n    if (comp > 0) return this.root.key;\n    let node = this.root.right;\n    if (node == null) return null;\n    let nodeLeft = node.left;\n    while (nodeLeft != null) {\n      node = nodeLeft;\n      nodeLeft = node.left;\n    }\n    return node.key;\n  }\n  retainAll(elements) {\n    const retainSet = new _SplayTreeSet(this.compare, this.validKey);\n    const modificationCount = this.modificationCount;\n    for (const object of elements) {\n      if (modificationCount != this.modificationCount) {\n        throw \"Concurrent modification during iteration.\";\n      }\n      if (this.validKey(object) && this.splay(object) == 0) {\n        retainSet.add(this.root.key);\n      }\n    }\n    if (retainSet.size != this.size) {\n      this.root = retainSet.root;\n      this.size = retainSet.size;\n      this.modificationCount++;\n    }\n  }\n  lookup(object) {\n    if (!this.validKey(object)) return null;\n    const comp = this.splay(object);\n    if (comp != 0) return null;\n    return this.root.key;\n  }\n  intersection(other) {\n    const result = new _SplayTreeSet(this.compare, this.validKey);\n    for (const element of this) {\n      if (other.has(element)) result.add(element);\n    }\n    return result;\n  }\n  difference(other) {\n    const result = new _SplayTreeSet(this.compare, this.validKey);\n    for (const element of this) {\n      if (!other.has(element)) result.add(element);\n    }\n    return result;\n  }\n  union(other) {\n    const u = this.clone();\n    u.addAll(other);\n    return u;\n  }\n  clone() {\n    const set = new _SplayTreeSet(this.compare, this.validKey);\n    set.size = this.size;\n    set.root = this.copyNode(this.root);\n    return set;\n  }\n  copyNode(node) {\n    if (node == null) return null;\n    function copyChildren(node2, dest) {\n      let left;\n      let right;\n      do {\n        left = node2.left;\n        right = node2.right;\n        if (left != null) {\n          const newLeft = new SplayTreeSetNode(left.key);\n          dest.left = newLeft;\n          copyChildren(left, newLeft);\n        }\n        if (right != null) {\n          const newRight = new SplayTreeSetNode(right.key);\n          dest.right = newRight;\n          node2 = right;\n          dest = newRight;\n        }\n      } while (right != null);\n    }\n    const result = new SplayTreeSetNode(node.key);\n    copyChildren(node, result);\n    return result;\n  }\n  toSet() {\n    return this.clone();\n  }\n  entries() {\n    return new SplayTreeSetEntryIterableIterator(this.wrap());\n  }\n  keys() {\n    return this[Symbol.iterator]();\n  }\n  values() {\n    return this[Symbol.iterator]();\n  }\n  [Symbol.iterator]() {\n    return new SplayTreeKeyIterableIterator(this.wrap());\n  }\n  [Symbol.toStringTag] = \"[object Set]\";\n};\nvar SplayTreeIterableIterator = class {\n  tree;\n  path = new Array();\n  modificationCount = null;\n  splayCount;\n  constructor(tree) {\n    this.tree = tree;\n    this.splayCount = tree.getSplayCount();\n  }\n  [Symbol.iterator]() {\n    return this;\n  }\n  next() {\n    if (this.moveNext()) return { done: false, value: this.current() };\n    return { done: true, value: null };\n  }\n  current() {\n    if (!this.path.length) return null;\n    const node = this.path[this.path.length - 1];\n    return this.getValue(node);\n  }\n  rebuildPath(key) {\n    this.path.splice(0, this.path.length);\n    this.tree.splay(key);\n    this.path.push(this.tree.getRoot());\n    this.splayCount = this.tree.getSplayCount();\n  }\n  findLeftMostDescendent(node) {\n    while (node != null) {\n      this.path.push(node);\n      node = node.left;\n    }\n  }\n  moveNext() {\n    if (this.modificationCount != this.tree.getModificationCount()) {\n      if (this.modificationCount == null) {\n        this.modificationCount = this.tree.getModificationCount();\n        let node2 = this.tree.getRoot();\n        while (node2 != null) {\n          this.path.push(node2);\n          node2 = node2.left;\n        }\n        return this.path.length > 0;\n      }\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (!this.path.length) return false;\n    if (this.splayCount != this.tree.getSplayCount()) {\n      this.rebuildPath(this.path[this.path.length - 1].key);\n    }\n    let node = this.path[this.path.length - 1];\n    let next = node.right;\n    if (next != null) {\n      while (next != null) {\n        this.path.push(next);\n        next = next.left;\n      }\n      return true;\n    }\n    this.path.pop();\n    while (this.path.length && this.path[this.path.length - 1].right === node) {\n      node = this.path.pop();\n    }\n    return this.path.length > 0;\n  }\n};\nvar SplayTreeKeyIterableIterator = class extends SplayTreeIterableIterator {\n  getValue(node) {\n    return node.key;\n  }\n};\nvar SplayTreeSetEntryIterableIterator = class extends SplayTreeIterableIterator {\n  getValue(node) {\n    return [node.key, node.key];\n  }\n};\nvar SplayTreeValueIterableIterator = class extends SplayTreeIterableIterator {\n  constructor(map) {\n    super(map);\n  }\n  getValue(node) {\n    return node.value;\n  }\n};\nvar SplayTreeMapEntryIterableIterator = class extends SplayTreeIterableIterator {\n  constructor(map) {\n    super(map);\n  }\n  getValue(node) {\n    return [node.key, node.value];\n  }\n  replaceValue(value) {\n    if (this.modificationCount != this.tree.getModificationCount()) {\n      throw \"Concurrent modification during iteration.\";\n    }\n    if (this.splayCount != this.tree.getSplayCount()) {\n      this.rebuildPath(this.path[this.path.length - 1].key);\n    }\n    const last = this.path.pop();\n    const newLast = last.replaceValue(value);\n    if (!this.path.length) {\n      this.tree.setRoot(newLast);\n    } else {\n      const parent = this.path[this.path.length - 1];\n      if (last === parent.left) {\n        parent.left = newLast;\n      } else {\n        parent.right = newLast;\n      }\n    }\n    this.path.push(newLast);\n    const count = this.tree.getSplayCount() + 1;\n    this.tree.setSplayCount(count);\n    this.splayCount = count;\n  }\n};\nexport {\n  SplayTreeMap,\n  SplayTreeSet\n};\n//# sourceMappingURL=index.js.map","// src/geom-in.ts\nimport BigNumber2 from \"bignumber.js\";\n\n// src/constant.ts\nvar constant_default = (x) => {\n  return () => {\n    return x;\n  };\n};\n\n// src/compare.ts\nvar compare_default = (eps) => {\n  const almostEqual = eps ? (a, b) => b.minus(a).abs().isLessThanOrEqualTo(eps) : constant_default(false);\n  return (a, b) => {\n    if (almostEqual(a, b)) return 0;\n    return a.comparedTo(b);\n  };\n};\n\n// src/orient.ts\nfunction orient_default(eps) {\n  const almostCollinear = eps ? (area2, ax, ay, cx, cy) => area2.exponentiatedBy(2).isLessThanOrEqualTo(\n    cx.minus(ax).exponentiatedBy(2).plus(cy.minus(ay).exponentiatedBy(2)).times(eps)\n  ) : constant_default(false);\n  return (a, b, c) => {\n    const ax = a.x, ay = a.y, cx = c.x, cy = c.y;\n    const area2 = ay.minus(cy).times(b.x.minus(cx)).minus(ax.minus(cx).times(b.y.minus(cy)));\n    if (almostCollinear(area2, ax, ay, cx, cy)) return 0;\n    return area2.comparedTo(0);\n  };\n}\n\n// src/snap.ts\nimport BigNumber from \"bignumber.js\";\nimport { SplayTreeSet } from \"splaytree-ts\";\n\n// src/identity.ts\nvar identity_default = (x) => {\n  return x;\n};\n\n// src/snap.ts\nvar snap_default = (eps) => {\n  if (eps) {\n    const xTree = new SplayTreeSet(compare_default(eps));\n    const yTree = new SplayTreeSet(compare_default(eps));\n    const snapCoord = (coord, tree) => {\n      return tree.addAndReturn(coord);\n    };\n    const snap = (v) => {\n      return {\n        x: snapCoord(v.x, xTree),\n        y: snapCoord(v.y, yTree)\n      };\n    };\n    snap({ x: new BigNumber(0), y: new BigNumber(0) });\n    return snap;\n  }\n  return identity_default;\n};\n\n// src/precision.ts\nvar set = (eps) => {\n  return {\n    set: (eps2) => {\n      precision = set(eps2);\n    },\n    reset: () => set(eps),\n    compare: compare_default(eps),\n    snap: snap_default(eps),\n    orient: orient_default(eps)\n  };\n};\nvar precision = set();\n\n// src/bbox.ts\nvar isInBbox = (bbox, point) => {\n  return bbox.ll.x.isLessThanOrEqualTo(point.x) && point.x.isLessThanOrEqualTo(bbox.ur.x) && bbox.ll.y.isLessThanOrEqualTo(point.y) && point.y.isLessThanOrEqualTo(bbox.ur.y);\n};\nvar getBboxOverlap = (b1, b2) => {\n  if (b2.ur.x.isLessThan(b1.ll.x) || b1.ur.x.isLessThan(b2.ll.x) || b2.ur.y.isLessThan(b1.ll.y) || b1.ur.y.isLessThan(b2.ll.y))\n    return null;\n  const lowerX = b1.ll.x.isLessThan(b2.ll.x) ? b2.ll.x : b1.ll.x;\n  const upperX = b1.ur.x.isLessThan(b2.ur.x) ? b1.ur.x : b2.ur.x;\n  const lowerY = b1.ll.y.isLessThan(b2.ll.y) ? b2.ll.y : b1.ll.y;\n  const upperY = b1.ur.y.isLessThan(b2.ur.y) ? b1.ur.y : b2.ur.y;\n  return { ll: { x: lowerX, y: lowerY }, ur: { x: upperX, y: upperY } };\n};\n\n// src/operation.ts\nimport { SplayTreeSet as SplayTreeSet3 } from \"splaytree-ts\";\n\n// src/vector.ts\nvar crossProduct = (a, b) => a.x.times(b.y).minus(a.y.times(b.x));\nvar dotProduct = (a, b) => a.x.times(b.x).plus(a.y.times(b.y));\nvar length = (v) => dotProduct(v, v).sqrt();\nvar sineOfAngle = (pShared, pBase, pAngle) => {\n  const vBase = { x: pBase.x.minus(pShared.x), y: pBase.y.minus(pShared.y) };\n  const vAngle = { x: pAngle.x.minus(pShared.x), y: pAngle.y.minus(pShared.y) };\n  return crossProduct(vAngle, vBase).div(length(vAngle)).div(length(vBase));\n};\nvar cosineOfAngle = (pShared, pBase, pAngle) => {\n  const vBase = { x: pBase.x.minus(pShared.x), y: pBase.y.minus(pShared.y) };\n  const vAngle = { x: pAngle.x.minus(pShared.x), y: pAngle.y.minus(pShared.y) };\n  return dotProduct(vAngle, vBase).div(length(vAngle)).div(length(vBase));\n};\nvar horizontalIntersection = (pt, v, y) => {\n  if (v.y.isZero()) return null;\n  return { x: pt.x.plus(v.x.div(v.y).times(y.minus(pt.y))), y };\n};\nvar verticalIntersection = (pt, v, x) => {\n  if (v.x.isZero()) return null;\n  return { x, y: pt.y.plus(v.y.div(v.x).times(x.minus(pt.x))) };\n};\nvar intersection = (pt1, v1, pt2, v2) => {\n  if (v1.x.isZero()) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x.isZero()) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y.isZero()) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y.isZero()) return horizontalIntersection(pt1, v1, pt2.y);\n  const kross = crossProduct(v1, v2);\n  if (kross.isZero()) return null;\n  const ve = { x: pt2.x.minus(pt1.x), y: pt2.y.minus(pt1.y) };\n  const d1 = crossProduct(ve, v1).div(kross);\n  const d2 = crossProduct(ve, v2).div(kross);\n  const x1 = pt1.x.plus(d2.times(v1.x)), x2 = pt2.x.plus(d1.times(v2.x));\n  const y1 = pt1.y.plus(d2.times(v1.y)), y2 = pt2.y.plus(d1.times(v2.y));\n  const x = x1.plus(x2).div(2);\n  const y = y1.plus(y2).div(2);\n  return { x, y };\n};\n\n// src/sweep-event.ts\nvar SweepEvent = class _SweepEvent {\n  point;\n  isLeft;\n  segment;\n  otherSE;\n  consumedBy;\n  // for ordering sweep events in the sweep event queue\n  static compare(a, b) {\n    const ptCmp = _SweepEvent.comparePoints(a.point, b.point);\n    if (ptCmp !== 0) return ptCmp;\n    if (a.point !== b.point) a.link(b);\n    if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1;\n    return Segment.compare(a.segment, b.segment);\n  }\n  // for ordering points in sweep line order\n  static comparePoints(aPt, bPt) {\n    if (aPt.x.isLessThan(bPt.x)) return -1;\n    if (aPt.x.isGreaterThan(bPt.x)) return 1;\n    if (aPt.y.isLessThan(bPt.y)) return -1;\n    if (aPt.y.isGreaterThan(bPt.y)) return 1;\n    return 0;\n  }\n  // Warning: 'point' input will be modified and re-used (for performance)\n  constructor(point, isLeft) {\n    if (point.events === void 0) point.events = [this];\n    else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft;\n  }\n  link(other) {\n    if (other.point === this.point) {\n      throw new Error(\"Tried to link already linked events\");\n    }\n    const otherEvents = other.point.events;\n    for (let i = 0, iMax = otherEvents.length; i < iMax; i++) {\n      const evt = otherEvents[i];\n      this.point.events.push(evt);\n      evt.point = this.point;\n    }\n    this.checkForConsuming();\n  }\n  /* Do a pass over our linked events and check to see if any pair\n   * of segments match, and should be consumed. */\n  checkForConsuming() {\n    const numEvents = this.point.events.length;\n    for (let i = 0; i < numEvents; i++) {\n      const evt1 = this.point.events[i];\n      if (evt1.segment.consumedBy !== void 0) continue;\n      for (let j = i + 1; j < numEvents; j++) {\n        const evt2 = this.point.events[j];\n        if (evt2.consumedBy !== void 0) continue;\n        if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n        evt1.segment.consume(evt2.segment);\n      }\n    }\n  }\n  getAvailableLinkedEvents() {\n    const events = [];\n    for (let i = 0, iMax = this.point.events.length; i < iMax; i++) {\n      const evt = this.point.events[i];\n      if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n        events.push(evt);\n      }\n    }\n    return events;\n  }\n  /**\n   * Returns a comparator function for sorting linked events that will\n   * favor the event that will give us the smallest left-side angle.\n   * All ring construction starts as low as possible heading to the right,\n   * so by always turning left as sharp as possible we'll get polygons\n   * without uncessary loops & holes.\n   *\n   * The comparator function has a compute cache such that it avoids\n   * re-computing already-computed values.\n   */\n  getLeftmostComparator(baseEvent) {\n    const cache = /* @__PURE__ */ new Map();\n    const fillCache = (linkedEvent) => {\n      const nextEvent = linkedEvent.otherSE;\n      cache.set(linkedEvent, {\n        sine: sineOfAngle(this.point, baseEvent.point, nextEvent.point),\n        cosine: cosineOfAngle(this.point, baseEvent.point, nextEvent.point)\n      });\n    };\n    return (a, b) => {\n      if (!cache.has(a)) fillCache(a);\n      if (!cache.has(b)) fillCache(b);\n      const { sine: asine, cosine: acosine } = cache.get(a);\n      const { sine: bsine, cosine: bcosine } = cache.get(b);\n      if (asine.isGreaterThanOrEqualTo(0) && bsine.isGreaterThanOrEqualTo(0)) {\n        if (acosine.isLessThan(bcosine)) return 1;\n        if (acosine.isGreaterThan(bcosine)) return -1;\n        return 0;\n      }\n      if (asine.isLessThan(0) && bsine.isLessThan(0)) {\n        if (acosine.isLessThan(bcosine)) return -1;\n        if (acosine.isGreaterThan(bcosine)) return 1;\n        return 0;\n      }\n      if (bsine.isLessThan(asine)) return -1;\n      if (bsine.isGreaterThan(asine)) return 1;\n      return 0;\n    };\n  }\n};\n\n// src/geom-out.ts\nvar RingOut = class _RingOut {\n  events;\n  poly;\n  _isExteriorRing;\n  _enclosingRing;\n  /* Given the segments from the sweep line pass, compute & return a series\n   * of closed rings from all the segments marked to be part of the result */\n  static factory(allSegments) {\n    const ringsOut = [];\n    for (let i = 0, iMax = allSegments.length; i < iMax; i++) {\n      const segment = allSegments[i];\n      if (!segment.isInResult() || segment.ringOut) continue;\n      let prevEvent = null;\n      let event = segment.leftSE;\n      let nextEvent = segment.rightSE;\n      const events = [event];\n      const startingPoint = event.point;\n      const intersectionLEs = [];\n      while (true) {\n        prevEvent = event;\n        event = nextEvent;\n        events.push(event);\n        if (event.point === startingPoint) break;\n        while (true) {\n          const availableLEs = event.getAvailableLinkedEvents();\n          if (availableLEs.length === 0) {\n            const firstPt = events[0].point;\n            const lastPt = events[events.length - 1].point;\n            throw new Error(\n              `Unable to complete output ring starting at [${firstPt.x}, ${firstPt.y}]. Last matching segment found ends at [${lastPt.x}, ${lastPt.y}].`\n            );\n          }\n          if (availableLEs.length === 1) {\n            nextEvent = availableLEs[0].otherSE;\n            break;\n          }\n          let indexLE = null;\n          for (let j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n            if (intersectionLEs[j].point === event.point) {\n              indexLE = j;\n              break;\n            }\n          }\n          if (indexLE !== null) {\n            const intersectionLE = intersectionLEs.splice(indexLE)[0];\n            const ringEvents = events.splice(intersectionLE.index);\n            ringEvents.unshift(ringEvents[0].otherSE);\n            ringsOut.push(new _RingOut(ringEvents.reverse()));\n            continue;\n          }\n          intersectionLEs.push({\n            index: events.length,\n            point: event.point\n          });\n          const comparator = event.getLeftmostComparator(prevEvent);\n          nextEvent = availableLEs.sort(comparator)[0].otherSE;\n          break;\n        }\n      }\n      ringsOut.push(new _RingOut(events));\n    }\n    return ringsOut;\n  }\n  constructor(events) {\n    this.events = events;\n    for (let i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n    this.poly = null;\n  }\n  getGeom() {\n    let prevPt = this.events[0].point;\n    const points = [prevPt];\n    for (let i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n      const pt2 = this.events[i].point;\n      const nextPt2 = this.events[i + 1].point;\n      if (precision.orient(pt2, prevPt, nextPt2) === 0) continue;\n      points.push(pt2);\n      prevPt = pt2;\n    }\n    if (points.length === 1) return null;\n    const pt = points[0];\n    const nextPt = points[1];\n    if (precision.orient(pt, prevPt, nextPt) === 0) points.shift();\n    points.push(points[0]);\n    const step = this.isExteriorRing() ? 1 : -1;\n    const iStart = this.isExteriorRing() ? 0 : points.length - 1;\n    const iEnd = this.isExteriorRing() ? points.length : -1;\n    const orderedPoints = [];\n    for (let i = iStart; i != iEnd; i += step)\n      orderedPoints.push([points[i].x.toNumber(), points[i].y.toNumber()]);\n    return orderedPoints;\n  }\n  isExteriorRing() {\n    if (this._isExteriorRing === void 0) {\n      const enclosing = this.enclosingRing();\n      this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n    }\n    return this._isExteriorRing;\n  }\n  enclosingRing() {\n    if (this._enclosingRing === void 0) {\n      this._enclosingRing = this._calcEnclosingRing();\n    }\n    return this._enclosingRing;\n  }\n  /* Returns the ring that encloses this one, if any */\n  _calcEnclosingRing() {\n    let leftMostEvt = this.events[0];\n    for (let i = 1, iMax = this.events.length; i < iMax; i++) {\n      const evt = this.events[i];\n      if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n    }\n    let prevSeg = leftMostEvt.segment.prevInResult();\n    let prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n    while (true) {\n      if (!prevSeg) return null;\n      if (!prevPrevSeg) return prevSeg.ringOut;\n      if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n        if (prevPrevSeg.ringOut?.enclosingRing() !== prevSeg.ringOut) {\n          return prevSeg.ringOut;\n        } else return prevSeg.ringOut?.enclosingRing();\n      }\n      prevSeg = prevPrevSeg.prevInResult();\n      prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n    }\n  }\n};\nvar PolyOut = class {\n  exteriorRing;\n  interiorRings;\n  constructor(exteriorRing) {\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n  addInterior(ring) {\n    this.interiorRings.push(ring);\n    ring.poly = this;\n  }\n  getGeom() {\n    const geom0 = this.exteriorRing.getGeom();\n    if (geom0 === null) return null;\n    const geom = [geom0];\n    for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n      const ringGeom = this.interiorRings[i].getGeom();\n      if (ringGeom === null) continue;\n      geom.push(ringGeom);\n    }\n    return geom;\n  }\n};\nvar MultiPolyOut = class {\n  rings;\n  polys;\n  constructor(rings) {\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n  getGeom() {\n    const geom = [];\n    for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n      const polyGeom = this.polys[i].getGeom();\n      if (polyGeom === null) continue;\n      geom.push(polyGeom);\n    }\n    return geom;\n  }\n  _composePolys(rings) {\n    const polys = [];\n    for (let i = 0, iMax = rings.length; i < iMax; i++) {\n      const ring = rings[i];\n      if (ring.poly) continue;\n      if (ring.isExteriorRing()) polys.push(new PolyOut(ring));\n      else {\n        const enclosingRing = ring.enclosingRing();\n        if (!enclosingRing?.poly) polys.push(new PolyOut(enclosingRing));\n        enclosingRing?.poly?.addInterior(ring);\n      }\n    }\n    return polys;\n  }\n};\n\n// src/sweep-line.ts\nimport { SplayTreeSet as SplayTreeSet2 } from \"splaytree-ts\";\nvar SweepLine = class {\n  queue;\n  tree;\n  segments;\n  constructor(queue, comparator = Segment.compare) {\n    this.queue = queue;\n    this.tree = new SplayTreeSet2(comparator);\n    this.segments = [];\n  }\n  process(event) {\n    const segment = event.segment;\n    const newEvents = [];\n    if (event.consumedBy) {\n      if (event.isLeft) this.queue.delete(event.otherSE);\n      else this.tree.delete(segment);\n      return newEvents;\n    }\n    if (event.isLeft) this.tree.add(segment);\n    let prevSeg = segment;\n    let nextSeg = segment;\n    do {\n      prevSeg = this.tree.lastBefore(prevSeg);\n    } while (prevSeg != null && prevSeg.consumedBy != void 0);\n    do {\n      nextSeg = this.tree.firstAfter(nextSeg);\n    } while (nextSeg != null && nextSeg.consumedBy != void 0);\n    if (event.isLeft) {\n      let prevMySplitter = null;\n      if (prevSeg) {\n        const prevInter = prevSeg.getIntersection(segment);\n        if (prevInter !== null) {\n          if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n          if (!prevSeg.isAnEndpoint(prevInter)) {\n            const newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      let nextMySplitter = null;\n      if (nextSeg) {\n        const nextInter = nextSeg.getIntersection(segment);\n        if (nextInter !== null) {\n          if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n          if (!nextSeg.isAnEndpoint(nextInter)) {\n            const newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      if (prevMySplitter !== null || nextMySplitter !== null) {\n        let mySplitter = null;\n        if (prevMySplitter === null) mySplitter = nextMySplitter;\n        else if (nextMySplitter === null) mySplitter = prevMySplitter;\n        else {\n          const cmpSplitters = SweepEvent.comparePoints(\n            prevMySplitter,\n            nextMySplitter\n          );\n          mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n        }\n        this.queue.delete(segment.rightSE);\n        newEvents.push(segment.rightSE);\n        const newEventsFromSplit = segment.split(mySplitter);\n        for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n          newEvents.push(newEventsFromSplit[i]);\n        }\n      }\n      if (newEvents.length > 0) {\n        this.tree.delete(segment);\n        newEvents.push(event);\n      } else {\n        this.segments.push(segment);\n        segment.prev = prevSeg;\n      }\n    } else {\n      if (prevSeg && nextSeg) {\n        const inter = prevSeg.getIntersection(nextSeg);\n        if (inter !== null) {\n          if (!prevSeg.isAnEndpoint(inter)) {\n            const newEventsFromSplit = this._splitSafely(prevSeg, inter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n          if (!nextSeg.isAnEndpoint(inter)) {\n            const newEventsFromSplit = this._splitSafely(nextSeg, inter);\n            for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n              newEvents.push(newEventsFromSplit[i]);\n            }\n          }\n        }\n      }\n      this.tree.delete(segment);\n    }\n    return newEvents;\n  }\n  /* Safely split a segment that is currently in the datastructures\n   * IE - a segment other than the one that is currently being processed. */\n  _splitSafely(seg, pt) {\n    this.tree.delete(seg);\n    const rightSE = seg.rightSE;\n    this.queue.delete(rightSE);\n    const newEvents = seg.split(pt);\n    newEvents.push(rightSE);\n    if (seg.consumedBy === void 0) this.tree.add(seg);\n    return newEvents;\n  }\n};\n\n// src/operation.ts\nvar Operation = class {\n  type;\n  numMultiPolys;\n  run(type, geom, moreGeoms) {\n    operation.type = type;\n    const multipolys = [new MultiPolyIn(geom, true)];\n    for (let i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n      multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n    }\n    operation.numMultiPolys = multipolys.length;\n    if (operation.type === \"difference\") {\n      const subject = multipolys[0];\n      let i = 1;\n      while (i < multipolys.length) {\n        if (getBboxOverlap(multipolys[i].bbox, subject.bbox) !== null) i++;\n        else multipolys.splice(i, 1);\n      }\n    }\n    if (operation.type === \"intersection\") {\n      for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n        const mpA = multipolys[i];\n        for (let j = i + 1, jMax = multipolys.length; j < jMax; j++) {\n          if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n        }\n      }\n    }\n    const queue = new SplayTreeSet3(SweepEvent.compare);\n    for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n      const sweepEvents = multipolys[i].getSweepEvents();\n      for (let j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n        queue.add(sweepEvents[j]);\n      }\n    }\n    const sweepLine = new SweepLine(queue);\n    let evt = null;\n    if (queue.size != 0) {\n      evt = queue.first();\n      queue.delete(evt);\n    }\n    while (evt) {\n      const newEvents = sweepLine.process(evt);\n      for (let i = 0, iMax = newEvents.length; i < iMax; i++) {\n        const evt2 = newEvents[i];\n        if (evt2.consumedBy === void 0) queue.add(evt2);\n      }\n      if (queue.size != 0) {\n        evt = queue.first();\n        queue.delete(evt);\n      } else {\n        evt = null;\n      }\n    }\n    precision.reset();\n    const ringsOut = RingOut.factory(sweepLine.segments);\n    const result = new MultiPolyOut(ringsOut);\n    return result.getGeom();\n  }\n};\nvar operation = new Operation();\nvar operation_default = operation;\n\n// src/segment.ts\nvar segmentId = 0;\nvar Segment = class _Segment {\n  id;\n  leftSE;\n  rightSE;\n  rings;\n  windings;\n  ringOut;\n  consumedBy;\n  prev;\n  _prevInResult;\n  _beforeState;\n  _afterState;\n  _isInResult;\n  /* This compare() function is for ordering segments in the sweep\n   * line tree, and does so according to the following criteria:\n   *\n   * Consider the vertical line that lies an infinestimal step to the\n   * right of the right-more of the two left endpoints of the input\n   * segments. Imagine slowly moving a point up from negative infinity\n   * in the increasing y direction. Which of the two segments will that\n   * point intersect first? That segment comes 'before' the other one.\n   *\n   * If neither segment would be intersected by such a line, (if one\n   * or more of the segments are vertical) then the line to be considered\n   * is directly on the right-more of the two left inputs.\n   */\n  static compare(a, b) {\n    const alx = a.leftSE.point.x;\n    const blx = b.leftSE.point.x;\n    const arx = a.rightSE.point.x;\n    const brx = b.rightSE.point.x;\n    if (brx.isLessThan(alx)) return 1;\n    if (arx.isLessThan(blx)) return -1;\n    const aly = a.leftSE.point.y;\n    const bly = b.leftSE.point.y;\n    const ary = a.rightSE.point.y;\n    const bry = b.rightSE.point.y;\n    if (alx.isLessThan(blx)) {\n      if (bly.isLessThan(aly) && bly.isLessThan(ary)) return 1;\n      if (bly.isGreaterThan(aly) && bly.isGreaterThan(ary)) return -1;\n      const aCmpBLeft = a.comparePoint(b.leftSE.point);\n      if (aCmpBLeft < 0) return 1;\n      if (aCmpBLeft > 0) return -1;\n      const bCmpARight = b.comparePoint(a.rightSE.point);\n      if (bCmpARight !== 0) return bCmpARight;\n      return -1;\n    }\n    if (alx.isGreaterThan(blx)) {\n      if (aly.isLessThan(bly) && aly.isLessThan(bry)) return -1;\n      if (aly.isGreaterThan(bly) && aly.isGreaterThan(bry)) return 1;\n      const bCmpALeft = b.comparePoint(a.leftSE.point);\n      if (bCmpALeft !== 0) return bCmpALeft;\n      const aCmpBRight = a.comparePoint(b.rightSE.point);\n      if (aCmpBRight < 0) return 1;\n      if (aCmpBRight > 0) return -1;\n      return 1;\n    }\n    if (aly.isLessThan(bly)) return -1;\n    if (aly.isGreaterThan(bly)) return 1;\n    if (arx.isLessThan(brx)) {\n      const bCmpARight = b.comparePoint(a.rightSE.point);\n      if (bCmpARight !== 0) return bCmpARight;\n    }\n    if (arx.isGreaterThan(brx)) {\n      const aCmpBRight = a.comparePoint(b.rightSE.point);\n      if (aCmpBRight < 0) return 1;\n      if (aCmpBRight > 0) return -1;\n    }\n    if (!arx.eq(brx)) {\n      const ay = ary.minus(aly);\n      const ax = arx.minus(alx);\n      const by = bry.minus(bly);\n      const bx = brx.minus(blx);\n      if (ay.isGreaterThan(ax) && by.isLessThan(bx)) return 1;\n      if (ay.isLessThan(ax) && by.isGreaterThan(bx)) return -1;\n    }\n    if (arx.isGreaterThan(brx)) return 1;\n    if (arx.isLessThan(brx)) return -1;\n    if (ary.isLessThan(bry)) return -1;\n    if (ary.isGreaterThan(bry)) return 1;\n    if (a.id < b.id) return -1;\n    if (a.id > b.id) return 1;\n    return 0;\n  }\n  /* Warning: a reference to ringWindings input will be stored,\n   *  and possibly will be later modified */\n  constructor(leftSE, rightSE, rings, windings) {\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings;\n  }\n  static fromRing(pt1, pt2, ring) {\n    let leftPt, rightPt, winding;\n    const cmpPts = SweepEvent.comparePoints(pt1, pt2);\n    if (cmpPts < 0) {\n      leftPt = pt1;\n      rightPt = pt2;\n      winding = 1;\n    } else if (cmpPts > 0) {\n      leftPt = pt2;\n      rightPt = pt1;\n      winding = -1;\n    } else\n      throw new Error(\n        `Tried to create degenerate segment at [${pt1.x}, ${pt1.y}]`\n      );\n    const leftSE = new SweepEvent(leftPt, true);\n    const rightSE = new SweepEvent(rightPt, false);\n    return new _Segment(leftSE, rightSE, [ring], [winding]);\n  }\n  /* When a segment is split, the rightSE is replaced with a new sweep event */\n  replaceRightSE(newRightSE) {\n    this.rightSE = newRightSE;\n    this.rightSE.segment = this;\n    this.rightSE.otherSE = this.leftSE;\n    this.leftSE.otherSE = this.rightSE;\n  }\n  bbox() {\n    const y1 = this.leftSE.point.y;\n    const y2 = this.rightSE.point.y;\n    return {\n      ll: { x: this.leftSE.point.x, y: y1.isLessThan(y2) ? y1 : y2 },\n      ur: { x: this.rightSE.point.x, y: y1.isGreaterThan(y2) ? y1 : y2 }\n    };\n  }\n  /* A vector from the left point to the right */\n  vector() {\n    return {\n      x: this.rightSE.point.x.minus(this.leftSE.point.x),\n      y: this.rightSE.point.y.minus(this.leftSE.point.y)\n    };\n  }\n  isAnEndpoint(pt) {\n    return pt.x.eq(this.leftSE.point.x) && pt.y.eq(this.leftSE.point.y) || pt.x.eq(this.rightSE.point.x) && pt.y.eq(this.rightSE.point.y);\n  }\n  /* Compare this segment with a point.\n   *\n   * A point P is considered to be colinear to a segment if there\n   * exists a distance D such that if we travel along the segment\n   * from one * endpoint towards the other a distance D, we find\n   * ourselves at point P.\n   *\n   * Return value indicates:\n   *\n   *   1: point lies above the segment (to the left of vertical)\n   *   0: point is colinear to segment\n   *  -1: point lies below the segment (to the right of vertical)\n   */\n  comparePoint(point) {\n    return precision.orient(this.leftSE.point, point, this.rightSE.point);\n  }\n  /**\n   * Given another segment, returns the first non-trivial intersection\n   * between the two segments (in terms of sweep line ordering), if it exists.\n   *\n   * A 'non-trivial' intersection is one that will cause one or both of the\n   * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n   *\n   *   * endpoint of segA with endpoint of segB --> trivial\n   *   * endpoint of segA with point along segB --> non-trivial\n   *   * endpoint of segB with point along segA --> non-trivial\n   *   * point along segA with point along segB --> non-trivial\n   *\n   * If no non-trivial intersection exists, return null\n   * Else, return null.\n   */\n  getIntersection(other) {\n    const tBbox = this.bbox();\n    const oBbox = other.bbox();\n    const bboxOverlap = getBboxOverlap(tBbox, oBbox);\n    if (bboxOverlap === null) return null;\n    const tlp = this.leftSE.point;\n    const trp = this.rightSE.point;\n    const olp = other.leftSE.point;\n    const orp = other.rightSE.point;\n    const touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n    const touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n    const touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n    const touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0;\n    if (touchesThisLSE && touchesOtherLSE) {\n      if (touchesThisRSE && !touchesOtherRSE) return trp;\n      if (!touchesThisRSE && touchesOtherRSE) return orp;\n      return null;\n    }\n    if (touchesThisLSE) {\n      if (touchesOtherRSE) {\n        if (tlp.x.eq(orp.x) && tlp.y.eq(orp.y)) return null;\n      }\n      return tlp;\n    }\n    if (touchesOtherLSE) {\n      if (touchesThisRSE) {\n        if (trp.x.eq(olp.x) && trp.y.eq(olp.y)) return null;\n      }\n      return olp;\n    }\n    if (touchesThisRSE && touchesOtherRSE) return null;\n    if (touchesThisRSE) return trp;\n    if (touchesOtherRSE) return orp;\n    const pt = intersection(tlp, this.vector(), olp, other.vector());\n    if (pt === null) return null;\n    if (!isInBbox(bboxOverlap, pt)) return null;\n    return precision.snap(pt);\n  }\n  /**\n   * Split the given segment into multiple segments on the given points.\n   *  * Each existing segment will retain its leftSE and a new rightSE will be\n   *    generated for it.\n   *  * A new segment will be generated which will adopt the original segment's\n   *    rightSE, and a new leftSE will be generated for it.\n   *  * If there are more than two points given to split on, new segments\n   *    in the middle will be generated with new leftSE and rightSE's.\n   *  * An array of the newly generated SweepEvents will be returned.\n   *\n   * Warning: input array of points is modified\n   */\n  split(point) {\n    const newEvents = [];\n    const alreadyLinked = point.events !== void 0;\n    const newLeftSE = new SweepEvent(point, true);\n    const newRightSE = new SweepEvent(point, false);\n    const oldRightSE = this.rightSE;\n    this.replaceRightSE(newRightSE);\n    newEvents.push(newRightSE);\n    newEvents.push(newLeftSE);\n    const newSeg = new _Segment(\n      newLeftSE,\n      oldRightSE,\n      this.rings.slice(),\n      this.windings.slice()\n    );\n    if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n      newSeg.swapEvents();\n    }\n    if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n      this.swapEvents();\n    }\n    if (alreadyLinked) {\n      newLeftSE.checkForConsuming();\n      newRightSE.checkForConsuming();\n    }\n    return newEvents;\n  }\n  /* Swap which event is left and right */\n  swapEvents() {\n    const tmpEvt = this.rightSE;\n    this.rightSE = this.leftSE;\n    this.leftSE = tmpEvt;\n    this.leftSE.isLeft = true;\n    this.rightSE.isLeft = false;\n    for (let i = 0, iMax = this.windings.length; i < iMax; i++) {\n      this.windings[i] *= -1;\n    }\n  }\n  /* Consume another segment. We take their rings under our wing\n   * and mark them as consumed. Use for perfectly overlapping segments */\n  consume(other) {\n    let consumer = this;\n    let consumee = other;\n    while (consumer.consumedBy) consumer = consumer.consumedBy;\n    while (consumee.consumedBy) consumee = consumee.consumedBy;\n    const cmp = _Segment.compare(consumer, consumee);\n    if (cmp === 0) return;\n    if (cmp > 0) {\n      const tmp = consumer;\n      consumer = consumee;\n      consumee = tmp;\n    }\n    if (consumer.prev === consumee) {\n      const tmp = consumer;\n      consumer = consumee;\n      consumee = tmp;\n    }\n    for (let i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n      const ring = consumee.rings[i];\n      const winding = consumee.windings[i];\n      const index = consumer.rings.indexOf(ring);\n      if (index === -1) {\n        consumer.rings.push(ring);\n        consumer.windings.push(winding);\n      } else consumer.windings[index] += winding;\n    }\n    consumee.rings = null;\n    consumee.windings = null;\n    consumee.consumedBy = consumer;\n    consumee.leftSE.consumedBy = consumer.leftSE;\n    consumee.rightSE.consumedBy = consumer.rightSE;\n  }\n  /* The first segment previous segment chain that is in the result */\n  prevInResult() {\n    if (this._prevInResult !== void 0) return this._prevInResult;\n    if (!this.prev) this._prevInResult = null;\n    else if (this.prev.isInResult()) this._prevInResult = this.prev;\n    else this._prevInResult = this.prev.prevInResult();\n    return this._prevInResult;\n  }\n  beforeState() {\n    if (this._beforeState !== void 0) return this._beforeState;\n    if (!this.prev)\n      this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };\n    else {\n      const seg = this.prev.consumedBy || this.prev;\n      this._beforeState = seg.afterState();\n    }\n    return this._beforeState;\n  }\n  afterState() {\n    if (this._afterState !== void 0) return this._afterState;\n    const beforeState = this.beforeState();\n    this._afterState = {\n      rings: beforeState.rings.slice(0),\n      windings: beforeState.windings.slice(0),\n      multiPolys: []\n    };\n    const ringsAfter = this._afterState.rings;\n    const windingsAfter = this._afterState.windings;\n    const mpsAfter = this._afterState.multiPolys;\n    for (let i = 0, iMax = this.rings.length; i < iMax; i++) {\n      const ring = this.rings[i];\n      const winding = this.windings[i];\n      const index = ringsAfter.indexOf(ring);\n      if (index === -1) {\n        ringsAfter.push(ring);\n        windingsAfter.push(winding);\n      } else windingsAfter[index] += winding;\n    }\n    const polysAfter = [];\n    const polysExclude = [];\n    for (let i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n      if (windingsAfter[i] === 0) continue;\n      const ring = ringsAfter[i];\n      const poly = ring.poly;\n      if (polysExclude.indexOf(poly) !== -1) continue;\n      if (ring.isExterior) polysAfter.push(poly);\n      else {\n        if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n        const index = polysAfter.indexOf(ring.poly);\n        if (index !== -1) polysAfter.splice(index, 1);\n      }\n    }\n    for (let i = 0, iMax = polysAfter.length; i < iMax; i++) {\n      const mp = polysAfter[i].multiPoly;\n      if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n    }\n    return this._afterState;\n  }\n  /* Is this segment part of the final result? */\n  isInResult() {\n    if (this.consumedBy) return false;\n    if (this._isInResult !== void 0) return this._isInResult;\n    const mpsBefore = this.beforeState().multiPolys;\n    const mpsAfter = this.afterState().multiPolys;\n    switch (operation_default.type) {\n      case \"union\": {\n        const noBefores = mpsBefore.length === 0;\n        const noAfters = mpsAfter.length === 0;\n        this._isInResult = noBefores !== noAfters;\n        break;\n      }\n      case \"intersection\": {\n        let least;\n        let most;\n        if (mpsBefore.length < mpsAfter.length) {\n          least = mpsBefore.length;\n          most = mpsAfter.length;\n        } else {\n          least = mpsAfter.length;\n          most = mpsBefore.length;\n        }\n        this._isInResult = most === operation_default.numMultiPolys && least < most;\n        break;\n      }\n      case \"xor\": {\n        const diff = Math.abs(mpsBefore.length - mpsAfter.length);\n        this._isInResult = diff % 2 === 1;\n        break;\n      }\n      case \"difference\": {\n        const isJustSubject = (mps) => mps.length === 1 && mps[0].isSubject;\n        this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n        break;\n      }\n    }\n    return this._isInResult;\n  }\n};\n\n// src/geom-in.ts\nvar RingIn = class {\n  poly;\n  isExterior;\n  segments;\n  bbox;\n  constructor(geomRing, poly, isExterior) {\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    if (typeof geomRing[0][0] !== \"number\" || typeof geomRing[0][1] !== \"number\") {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    const firstPoint = precision.snap({ x: new BigNumber2(geomRing[0][0]), y: new BigNumber2(geomRing[0][1]) });\n    this.bbox = {\n      ll: { x: firstPoint.x, y: firstPoint.y },\n      ur: { x: firstPoint.x, y: firstPoint.y }\n    };\n    let prevPoint = firstPoint;\n    for (let i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== \"number\" || typeof geomRing[i][1] !== \"number\") {\n        throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n      }\n      const point = precision.snap({ x: new BigNumber2(geomRing[i][0]), y: new BigNumber2(geomRing[i][1]) });\n      if (point.x.eq(prevPoint.x) && point.y.eq(prevPoint.y)) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = point.x;\n      if (point.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = point.y;\n      if (point.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = point.x;\n      if (point.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    }\n    if (!firstPoint.x.eq(prevPoint.x) || !firstPoint.y.eq(prevPoint.y)) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n  getSweepEvents() {\n    const sweepEvents = [];\n    for (let i = 0, iMax = this.segments.length; i < iMax; i++) {\n      const segment = this.segments[i];\n      sweepEvents.push(segment.leftSE);\n      sweepEvents.push(segment.rightSE);\n    }\n    return sweepEvents;\n  }\n};\nvar PolyIn = class {\n  multiPoly;\n  exteriorRing;\n  interiorRings;\n  bbox;\n  constructor(geomPoly, multiPoly) {\n    if (!Array.isArray(geomPoly)) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    this.exteriorRing = new RingIn(geomPoly[0], this, true);\n    this.bbox = {\n      ll: { x: this.exteriorRing.bbox.ll.x, y: this.exteriorRing.bbox.ll.y },\n      ur: { x: this.exteriorRing.bbox.ur.x, y: this.exteriorRing.bbox.ur.y }\n    };\n    this.interiorRings = [];\n    for (let i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      const ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n    this.multiPoly = multiPoly;\n  }\n  getSweepEvents() {\n    const sweepEvents = this.exteriorRing.getSweepEvents();\n    for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n      const ringSweepEvents = this.interiorRings[i].getSweepEvents();\n      for (let j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n        sweepEvents.push(ringSweepEvents[j]);\n      }\n    }\n    return sweepEvents;\n  }\n};\nvar MultiPolyIn = class {\n  isSubject;\n  polys;\n  bbox;\n  constructor(geom, isSubject) {\n    if (!Array.isArray(geom)) {\n      throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n    }\n    try {\n      if (typeof geom[0][0][0] === \"number\") geom = [geom];\n    } catch (ex) {\n    }\n    this.polys = [];\n    this.bbox = {\n      ll: { x: new BigNumber2(Number.POSITIVE_INFINITY), y: new BigNumber2(Number.POSITIVE_INFINITY) },\n      ur: { x: new BigNumber2(Number.NEGATIVE_INFINITY), y: new BigNumber2(Number.NEGATIVE_INFINITY) }\n    };\n    for (let i = 0, iMax = geom.length; i < iMax; i++) {\n      const poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x.isLessThan(this.bbox.ll.x)) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y.isLessThan(this.bbox.ll.y)) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x.isGreaterThan(this.bbox.ur.x)) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y.isGreaterThan(this.bbox.ur.y)) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n    this.isSubject = isSubject;\n  }\n  getSweepEvents() {\n    const sweepEvents = [];\n    for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n      const polySweepEvents = this.polys[i].getSweepEvents();\n      for (let j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n        sweepEvents.push(polySweepEvents[j]);\n      }\n    }\n    return sweepEvents;\n  }\n};\n\n// src/index.ts\nvar union = (geom, ...moreGeoms) => operation_default.run(\"union\", geom, moreGeoms);\nvar intersection2 = (geom, ...moreGeoms) => operation_default.run(\"intersection\", geom, moreGeoms);\nvar xor = (geom, ...moreGeoms) => operation_default.run(\"xor\", geom, moreGeoms);\nvar difference = (geom, ...moreGeoms) => operation_default.run(\"difference\", geom, moreGeoms);\nvar setPrecision = precision.set;\nexport {\n  difference,\n  intersection2 as intersection,\n  setPrecision,\n  union,\n  xor\n};\n//# sourceMappingURL=index.js.map","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport * as polyclip from \"polyclip-ts\";\nimport { multiPolygon, polygon } from \"@turf/helpers\";\nimport { geomEach } from \"@turf/meta\";\nfunction union2(features, options = {}) {\n  const geoms = [];\n  geomEach(features, (geom) => {\n    geoms.push(geom.coordinates);\n  });\n  if (geoms.length < 2) {\n    throw new Error(\"Must have at least 2 geometries\");\n  }\n  const unioned = polyclip.union(geoms[0], ...geoms.slice(1));\n  if (unioned.length === 0) return null;\n  if (unioned.length === 1) return polygon(unioned[0], options.properties);\n  else return multiPolygon(unioned, options.properties);\n}\nvar turf_union_default = union2;\nexport {\n  turf_union_default as default,\n  union2 as union\n};\n//# sourceMappingURL=index.js.map","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","<script lang=\"ts\">\n  export let displayIn: \"list\" | \"leaflet\" | \"maplibre\";\n</script>\n\n<svg\n  width={displayIn === \"list\" ? 20 : undefined}\n  viewBox=\"0 0 70 85\"\n  fill=\"none\"\n  class:in-map={displayIn !== \"list\"}\n  class:list-icon={displayIn === \"list\"}\n>\n  <path\n    stroke-width=\"4\"\n    d=\"M 5,33.103579 C 5,17.607779 18.457,5 35,5 C 51.543,5 65,17.607779 65,33.103579 C 65,56.388679 40.4668,76.048179 36.6112,79.137779 C 36.3714,79.329879 36.2116,79.457979 36.1427,79.518879 C 35.8203,79.800879 35.4102,79.942779 35,79.942779 C 34.5899,79.942779 34.1797,79.800879 33.8575,79.518879 C 33.7886,79.457979 33.6289,79.330079 33.3893,79.138079 C 29.5346,76.049279 5,56.389379 5,33.103579 Z M 35.0001,49.386379 C 43.1917,49.386379 49.8323,42.646079 49.8323,34.331379 C 49.8323,26.016779 43.1917,19.276479 35.0001,19.276479 C 26.8085,19.276479 20.1679,26.016779 20.1679,34.331379 C 20.1679,42.646079 26.8085,49.386379 35.0001,49.386379 Z\"\n  />\n</svg>\n\n<style>\n  svg {\n    display: block;\n    fill: #6b7c93;\n    stroke: #6b7c93;\n  }\n\n  .list-icon {\n    grid-row: 1/3;\n    align-self: center;\n    margin: 8px;\n  }\n\n  .in-map {\n    height: 30px;\n  }\n\n  :global(.maplibregl-canvas-container .marker-selected) {\n    z-index: 1;\n  }\n\n  :global(.maplibregl-canvas-container) svg path,\n  :global(.leaflet-map-pane) svg path {\n    fill: #3170fe;\n    stroke: #3170fe;\n  }\n\n  :global(.marker-selected) svg path {\n    fill: #98b7ff;\n    stroke: #3170fe;\n  }\n\n  :global(.marker-reverse) svg path {\n    fill: silver;\n    stroke: gray;\n  }\n\n  :global(.marker-interactive) {\n    cursor: pointer !important;\n  }\n\n  /* :global(.marker-fuzzy) svg path {\n    fill: silver;\n    stroke: gray;\n  }\n\n  :global(.marker-fuzzy.marker-selected) svg path {\n    fill: #ddd;\n    stroke: silver;\n  } */\n\n  :global(.maptiler-gc-popup > .maplibregl-popup-content) {\n    padding: 2px 8px;\n  }\n</style>\n","// index.ts\nimport { coordEach } from \"@turf/meta\";\nfunction bbox(geojson, options = {}) {\n  if (geojson.bbox != null && true !== options.recompute) {\n    return geojson.bbox;\n  }\n  const result = [Infinity, Infinity, -Infinity, -Infinity];\n  coordEach(geojson, (coord) => {\n    if (result[0] > coord[0]) {\n      result[0] = coord[0];\n    }\n    if (result[1] > coord[1]) {\n      result[1] = coord[1];\n    }\n    if (result[2] < coord[0]) {\n      result[2] = coord[0];\n    }\n    if (result[3] < coord[1]) {\n      result[3] = coord[1];\n    }\n  });\n  return result;\n}\nvar turf_bbox_default = bbox;\nexport {\n  bbox,\n  turf_bbox_default as default\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport * as polyclip from \"polyclip-ts\";\nimport { polygon, multiPolygon } from \"@turf/helpers\";\nimport { geomEach } from \"@turf/meta\";\nfunction difference2(features) {\n  const geoms = [];\n  geomEach(features, (geom) => {\n    geoms.push(geom.coordinates);\n  });\n  if (geoms.length < 2) {\n    throw new Error(\"Must have at least two features\");\n  }\n  const properties = features.features[0].properties || {};\n  const differenced = polyclip.difference(geoms[0], ...geoms.slice(1));\n  if (differenced.length === 0) return null;\n  if (differenced.length === 1) return polygon(differenced[0], properties);\n  return multiPolygon(differenced, properties);\n}\nvar turf_difference_default = difference2;\nexport {\n  turf_difference_default as default,\n  difference2 as difference\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { flattenEach } from \"@turf/meta\";\nimport { featureCollection } from \"@turf/helpers\";\nfunction flatten(geojson) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  var results = [];\n  flattenEach(geojson, function(feature) {\n    results.push(feature);\n  });\n  return featureCollection(results);\n}\nvar turf_flatten_default = flatten;\nexport {\n  turf_flatten_default as default,\n  flatten\n};\n//# sourceMappingURL=index.js.map","import type { BBox } from \"./types\";\n\n// taken from Leaflet\nexport function wrapNum(\n  x: number,\n  range: [number, number],\n  includeMax: boolean,\n) {\n  const max = range[1],\n    min = range[0],\n    d = max - min;\n\n  return x === max && includeMax ? x : ((((x - min) % d) + d) % d) + min;\n}\n\nexport function unwrapBbox(bbox0: BBox): BBox {\n  const bbox = [...bbox0] satisfies BBox;\n\n  if (bbox[2] < bbox[0]) {\n    if (\n      Math.abs((bbox[0] + bbox[2] + 360) / 2) >\n      Math.abs((bbox[0] - 360 + bbox[2]) / 2)\n    ) {\n      bbox[0] -= 360;\n    } else {\n      bbox[2] += 360;\n    }\n  }\n\n  return bbox;\n}\n","import bbox from \"@turf/bbox\";\nimport difference from \"@turf/difference\";\nimport flatten from \"@turf/flatten\";\nimport { featureCollection, polygon } from \"@turf/helpers\";\nimport union from \"@turf/union\";\nimport type {\n  Feature,\n  FeatureCollection,\n  MultiPolygon,\n  Polygon,\n} from \"geojson\";\nimport { unwrapBbox } from \"./geoUtils\";\nimport type { BBox } from \"./types\";\n\nexport function setMask(\n  picked: Feature<Polygon | MultiPolygon>,\n  setData: (data?: FeatureCollection<Polygon | MultiPolygon>) => void,\n): void {\n  const diff = difference(\n    featureCollection([\n      polygon([\n        [\n          [180, 90],\n          [-180, 90],\n          [-180, -90],\n          [180, -90],\n          [180, 90],\n        ],\n      ]),\n      picked,\n    ]),\n  );\n\n  if (!diff) {\n    return;\n  }\n\n  diff.properties = { isMask: true };\n\n  const bb = unwrapBbox(bbox(picked) as BBox);\n\n  // bigger features (continents, oceans) have bigger tolerance\n  // because of the used source data simplification\n  const tolerance = (bb[2] - bb[0]) / 360 / 1_000;\n\n  const leaksLeft = bb[0] < -180;\n  const leaksRight = bb[2] > 180;\n\n  const flattened = flatten(picked);\n\n  if (flattened.features.length > 1 && (leaksLeft || leaksRight)) {\n    for (const poly of flattened.features) {\n      const bb = unwrapBbox(bbox(poly) as BBox);\n\n      if (leaksRight && bb[0] < -180 + tolerance) {\n        for (const ring of poly.geometry.coordinates) {\n          for (const position of ring) {\n            position[0] += 360 - tolerance;\n          }\n        }\n      }\n\n      if (leaksLeft && bb[2] > 180 - tolerance) {\n        for (const ring of poly.geometry.coordinates) {\n          for (const position of ring) {\n            position[0] -= 360 - tolerance;\n          }\n        }\n      }\n    }\n  }\n\n  setData(\n    featureCollection([\n      flattened.features.length < 2 ? picked : (union(flattened) ?? picked),\n      diff,\n    ]),\n  );\n}\n","import { feature, featureCollection } from \"@turf/helpers\";\nimport union from \"@turf/union\";\nimport type {\n  GeoJSON,\n  LineString,\n  MultiLineString,\n  MultiPolygon,\n  Polygon,\n} from \"geojson\";\nimport type * as maplibregl from \"maplibre-gl\";\nimport type {\n  FillLayerSpecification,\n  FitBoundsOptions,\n  FlyToOptions,\n  GeoJSONSource,\n  LineLayerSpecification,\n  Map,\n  MapMouseEvent,\n  Marker,\n  MarkerOptions,\n} from \"maplibre-gl\";\nimport MarkerIcon from \"./MarkerIcon.svelte\";\nimport { setMask } from \"./mask\";\nimport type { BBox, Position } from \"./types\";\nimport type { Feature, MapController, MapEvent } from \"./types.js\";\n\nexport type MapLibreGL = Pick<typeof maplibregl, \"Marker\" | \"Popup\">;\n\nexport type FullGeometryStyle = {\n  fill: Pick<FillLayerSpecification, \"layout\" | \"paint\" | \"filter\">;\n  line: Pick<LineLayerSpecification, \"layout\" | \"paint\" | \"filter\">;\n};\n\nconst defaultGeometryStyle: FullGeometryStyle = {\n  fill: {\n    paint: {\n      \"fill-color\": \"#000\",\n      \"fill-opacity\": 0.1,\n    },\n    filter: [\"all\", [\"==\", [\"geometry-type\"], \"Polygon\"], [\"has\", \"isMask\"]],\n  },\n  line: {\n    layout: {\n      \"line-cap\": \"square\",\n    },\n    paint: {\n      \"line-width\": [\"case\", [\"==\", [\"geometry-type\"], \"Polygon\"], 2, 3],\n      \"line-dasharray\": [1, 1],\n      \"line-color\": \"#3170fe\",\n    },\n    filter: [\"!\", [\"has\", \"isMask\"]],\n  },\n};\n\nconst RESULT_SOURCE = \"mtlr-gc-full-geom\";\n\nconst RESULT_LAYER_FILL = \"mtlr-gc-full-geom-fill\";\n\nconst RESULT_LAYER_LINE = \"mtlr-gc-full-geom-line\";\n\nexport function createMapLibreGlMapController(\n  map: Map,\n  maplibregl?: MapLibreGL | undefined,\n  marker:\n    | boolean\n    | null\n    | MarkerOptions\n    | ((map: Map, feature?: Feature) => Marker | undefined | null) = true,\n  showResultMarkers:\n    | boolean\n    | null\n    | MarkerOptions\n    | ((map: Map, feature: Feature) => Marker | undefined | null) = true,\n  flyToOptions: FlyToOptions | null = {},\n  fitBoundsOptions: FitBoundsOptions | null = {},\n  fullGeometryStyle: boolean | null | FullGeometryStyle = defaultGeometryStyle,\n) {\n  let eventHandler: ((e: MapEvent) => void) | undefined;\n\n  const markers: Marker[] = [];\n\n  let selectedMarker: maplibregl.Marker | undefined;\n\n  let reverseMarker: maplibregl.Marker | undefined;\n\n  let savedData: GeoJSON | undefined; // used to restore features on style switch\n\n  function syncFullGeometryLayer() {\n    if (!map.loaded) {\n      map.once(\"load\", syncFullGeometryLayer);\n\n      return;\n    }\n\n    const effFullGeometryStyle = !fullGeometryStyle\n      ? undefined\n      : fullGeometryStyle === true\n        ? defaultGeometryStyle\n        : fullGeometryStyle;\n\n    if (!effFullGeometryStyle?.fill && !effFullGeometryStyle?.line) {\n      return;\n    }\n\n    const source = map.getSource<GeoJSONSource>(RESULT_SOURCE);\n\n    if (source) {\n      source.setData(savedData ?? featureCollection([]));\n    } else if (savedData) {\n      map.addSource(RESULT_SOURCE, {\n        type: \"geojson\",\n        data: savedData,\n      });\n    } else {\n      return;\n    }\n\n    if (!map.getLayer(RESULT_LAYER_FILL) && effFullGeometryStyle?.fill) {\n      map.addLayer({\n        ...effFullGeometryStyle?.fill,\n        id: RESULT_LAYER_FILL,\n        type: \"fill\",\n        source: RESULT_SOURCE,\n      });\n    }\n\n    if (!map.getLayer(RESULT_LAYER_LINE) && effFullGeometryStyle?.line) {\n      map.addLayer({\n        ...effFullGeometryStyle?.line,\n        id: RESULT_LAYER_LINE,\n        type: \"line\",\n        source: RESULT_SOURCE,\n      });\n    }\n  }\n\n  function setAndSaveData(data?: GeoJSON) {\n    savedData = data;\n\n    syncFullGeometryLayer();\n  }\n\n  map.on(\"styledata\", () => {\n    // timeout prevents collision with svelte-maplibre library\n    setTimeout(() => {\n      if (savedData) {\n        syncFullGeometryLayer();\n      }\n    });\n  });\n\n  const handleMapClick = (e: MapMouseEvent) => {\n    eventHandler?.({\n      type: \"mapClick\",\n      coordinates: [e.lngLat.lng, e.lngLat.lat],\n    });\n  };\n\n  function createMarker(interactive = false) {\n    if (!maplibregl) {\n      throw new Error();\n    }\n\n    const element = document.createElement(\"div\");\n\n    if (interactive) {\n      element.classList.add(\"marker-interactive\");\n    }\n\n    new MarkerIcon({\n      props: { displayIn: \"maplibre\" },\n      target: element,\n    });\n\n    return new maplibregl.Marker({ element, offset: [1, -13] });\n  }\n\n  return {\n    setEventHandler(handler: undefined | ((e: MapEvent) => void)): void {\n      if (handler) {\n        eventHandler = handler;\n\n        map.on(\"click\", handleMapClick);\n      } else {\n        eventHandler = undefined;\n\n        map.off(\"click\", handleMapClick);\n      }\n    },\n\n    flyTo(center: Position, zoom?: number): void {\n      map.flyTo({ center, ...(zoom ? { zoom } : {}), ...flyToOptions });\n    },\n\n    fitBounds(bbox: BBox, padding: number, maxZoom?: number): void {\n      map.fitBounds(\n        [\n          [bbox[0], bbox[1]],\n          [bbox[2], bbox[3]],\n        ],\n        { padding, ...(maxZoom ? { maxZoom } : {}), ...fitBoundsOptions },\n      );\n    },\n\n    indicateReverse(reverse: boolean): void {\n      map.getCanvasContainer().style.cursor = reverse ? \"crosshair\" : \"\";\n    },\n\n    setReverseMarker(coordinates?: Position) {\n      if (!maplibregl || !marker) {\n        return;\n      }\n\n      if (reverseMarker) {\n        if (!coordinates) {\n          reverseMarker.remove();\n\n          reverseMarker = undefined;\n        } else {\n          reverseMarker.setLngLat(coordinates);\n        }\n      } else if (coordinates) {\n        if (marker instanceof Function) {\n          reverseMarker = marker(map) ?? undefined;\n        } else {\n          reverseMarker = (\n            typeof marker === \"object\"\n              ? new maplibregl.Marker(marker)\n              : createMarker()\n          )\n            .setLngLat(coordinates)\n            .addTo(map);\n\n          reverseMarker.getElement().classList.add(\"marker-reverse\");\n        }\n      }\n    },\n\n    setFeatures(\n      markedFeatures: Feature[] | undefined,\n      picked: Feature | undefined,\n      showPolygonMarker: boolean,\n    ): void {\n      for (const marker of markers) {\n        marker.remove();\n      }\n\n      markers.length = 0;\n\n      setAndSaveData(undefined);\n\n      if (!maplibregl) {\n        return;\n      }\n\n      block: if (picked) {\n        let handled = false;\n\n        if (picked.geometry.type === \"GeometryCollection\") {\n          const geoms = picked.geometry.geometries.filter(\n            (geometry): geometry is Polygon | MultiPolygon =>\n              geometry.type === \"Polygon\" || geometry.type === \"MultiPolygon\",\n          );\n\n          ok: if (geoms.length > 0) {\n            const unioned = union(\n              featureCollection(geoms.map((geom) => feature(geom))),\n            );\n\n            if (!unioned) {\n              break ok;\n            }\n\n            setMask(\n              {\n                ...picked,\n                geometry: unioned.geometry,\n              },\n              setAndSaveData,\n            );\n\n            handled = true;\n          } else {\n            const geometries = picked.geometry.geometries.filter(\n              (geometry): geometry is LineString | MultiLineString =>\n                geometry.type === \"LineString\" ||\n                geometry.type === \"MultiLineString\",\n            );\n\n            if (geometries.length > 0) {\n              setAndSaveData({\n                ...picked,\n                geometry: { type: \"GeometryCollection\", geometries },\n              });\n\n              handled = true;\n            }\n          }\n        }\n\n        if (handled) {\n          // nothing\n        } else if (\n          picked.geometry.type === \"Polygon\" ||\n          picked.geometry.type === \"MultiPolygon\"\n        ) {\n          setMask(picked as Feature<Polygon | MultiPolygon>, setAndSaveData);\n        } else if (\n          picked.geometry.type === \"LineString\" ||\n          picked.geometry.type === \"MultiLineString\"\n        ) {\n          setAndSaveData(picked);\n\n          break block; // no pin for (multi)linestrings\n        }\n\n        if (!showPolygonMarker && picked.geometry.type !== \"Point\") {\n          break block;\n        }\n\n        if (marker instanceof Function) {\n          const m = marker(map, picked);\n\n          if (m) {\n            markers.push(m);\n          }\n        } else if (marker) {\n          markers.push(\n            typeof marker === \"object\"\n              ? new maplibregl.Marker(marker)\n              : createMarker().setLngLat(picked.center).addTo(map),\n          );\n        }\n      }\n\n      if (showResultMarkers) {\n        for (const feature of markedFeatures ?? []) {\n          if (feature === picked) {\n            continue;\n          }\n\n          let marker;\n\n          if (showResultMarkers instanceof Function) {\n            marker = showResultMarkers(map, feature);\n\n            if (!marker) {\n              continue;\n            }\n          } else {\n            marker = (\n              typeof showResultMarkers === \"object\"\n                ? new maplibregl.Marker(showResultMarkers)\n                : createMarker(true)\n            )\n              .setLngLat(feature.center)\n              .setPopup(\n                new maplibregl.Popup({\n                  offset: [1, -27],\n                  closeButton: false,\n                  closeOnMove: true,\n                  className: \"maptiler-gc-popup\",\n                }).setText(\n                  feature.place_type[0] === \"reverse\"\n                    ? feature.place_name\n                    : feature.place_name.replace(/,.*/, \"\"),\n                ),\n              )\n              .addTo(map);\n          }\n\n          const element = marker.getElement();\n\n          element.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n\n            eventHandler?.({ type: \"markerClick\", id: feature.id });\n          });\n\n          element.addEventListener(\"mouseenter\", () => {\n            eventHandler?.({ type: \"markerMouseEnter\", id: feature.id });\n\n            marker.togglePopup();\n          });\n\n          element.addEventListener(\"mouseleave\", () => {\n            eventHandler?.({ type: \"markerMouseLeave\", id: feature.id });\n\n            marker.togglePopup();\n          });\n\n          // element.classList.toggle(\"marker-fuzzy\", !!feature.matching_text);\n\n          markers.push(marker);\n        }\n      }\n    },\n\n    setSelectedMarker(index: number): void {\n      if (selectedMarker) {\n        selectedMarker.getElement().classList.toggle(\"marker-selected\", false);\n      }\n\n      selectedMarker = index > -1 ? markers[index] : undefined;\n\n      selectedMarker?.getElement().classList.toggle(\"marker-selected\", true);\n    },\n\n    getCenterAndZoom() {\n      const c = map.getCenter();\n\n      return [map.getZoom(), c.lng, c.lat];\n    },\n  } satisfies MapController;\n}\n"],"names":["feature","geom","properties","options","feat","polygon","coordinates","ring","j","featureCollection","features","fc","multiPolygon","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","clone","configObject","div","convertBase","parseNumeric","P","BigNumber","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","ALPHABET","alphabetHasNormalDecimalDigits","v","b","alphabet","c","caseChanged","e","i","isNum","len","str","x","intCheck","round","obj","p","n","s","out","maxOrMin","pow2_53","random53bitInt","dp","a","k","rand","args","sum","decimal","toBaseOut","baseIn","baseOut","arr","arrL","sign","callerIsToString","d","r","xc","y","rm","toFixedPoint","coeffToString","multiply","base","m","temp","xlo","xhi","carry","klo","khi","compare","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","bitFloor","format","id","c0","ne","toExponential","normalise","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p1","p2","sd","ni","rd","pows10","valueOf","half","isModExp","nIsBig","nIsNeg","nIsOdd","isOdd","t","xLTy","xe","ye","xcL","ycL","ylo","yhi","zc","sqrtBase","rep","g1","g2","groupSeparator","intPart","fractionPart","isNeg","intDigits","md","d0","d1","d2","exp","n0","n1","z","l","min","max","name","zs","SplayTreeNode","key","__publicField","SplayTreeSetNode","SplayTree","root","right","newTreeRight","left","newTreeLeft","current","comp","currentLeft","currentRight","node","nextLeft","nextRight","result","count","_a","_b","SplayTreeSet","_SplayTreeSet","isValidKey","element","elements","f","nodes","nodeRight","nodeLeft","retainSet","modificationCount","object","other","u","set","copyChildren","node2","dest","newLeft","newRight","SplayTreeSetEntryIterableIterator","SplayTreeKeyIterableIterator","SplayTreeIterableIterator","tree","next","constant_default","compare_default","eps","almostEqual","orient_default","almostCollinear","area2","ax","ay","cx","cy","identity_default","snap_default","xTree","yTree","snapCoord","coord","snap","eps2","precision","isInBbox","bbox","point","getBboxOverlap","b1","b2","lowerX","upperX","lowerY","upperY","crossProduct","dotProduct","length","sineOfAngle","pShared","pBase","pAngle","vBase","vAngle","cosineOfAngle","horizontalIntersection","pt","verticalIntersection","intersection","pt1","v1","pt2","v2","kross","ve","x1","x2","y1","y2","SweepEvent","_SweepEvent","isLeft","ptCmp","Segment","aPt","bPt","otherEvents","iMax","evt","numEvents","evt1","evt2","events","baseEvent","cache","fillCache","linkedEvent","nextEvent","asine","acosine","bsine","bcosine","RingOut","_RingOut","allSegments","ringsOut","segment","prevEvent","event","startingPoint","intersectionLEs","availableLEs","firstPt","lastPt","indexLE","jMax","intersectionLE","ringEvents","comparator","prevPt","points","nextPt2","nextPt","step","iStart","iEnd","orderedPoints","enclosing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","exteriorRing","geom0","ringGeom","MultiPolyOut","rings","polyGeom","polys","enclosingRing","SweepLine","queue","SplayTreeSet2","newEvents","nextSeg","prevMySplitter","prevInter","newEventsFromSplit","nextMySplitter","nextInter","mySplitter","inter","seg","rightSE","Operation","type","moreGeoms","operation","multipolys","MultiPolyIn","subject","mpA","SplayTreeSet3","sweepEvents","sweepLine","operation_default","segmentId","_Segment","leftSE","windings","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","bCmpARight","bCmpALeft","aCmpBRight","by","bx","leftPt","rightPt","winding","cmpPts","newRightSE","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","alreadyLinked","newLeftSE","oldRightSE","newSeg","tmpEvt","consumer","consumee","tmp","index","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","poly","mp","mpsBefore","noBefores","noAfters","least","most","diff","isJustSubject","mps","RingIn","geomRing","isExterior","firstPoint","BigNumber2","prevPoint","PolyIn","geomPoly","multiPoly","ringSweepEvents","isSubject","polySweepEvents","union","difference","coordEach","geojson","callback","excludeWrapCoord","geometry","stopG","coords","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","geomEach","g","featureProperties","featureBBox","featureId","flattenEach","coordinate","union2","geoms","unioned","polyclip.union","turf_union_default","noop","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","is_empty","append","target","insert","anchor","detach","svg_element","attr","attribute","value","children","toggle_class","toggle","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","dirty","flush_render_callbacks","filtered","targets","outroing","transition_in","block","local","mount_component","fragment","after_update","new_on_destroy","destroy_component","detaching","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","SvelteComponent","callbacks","PUBLIC_VERSION","svg","svg_width_value","ctx","path","displayIn","$$props","turf_bbox_default","difference2","differenced","polyclip.difference","turf_difference_default","flatten","results","turf_flatten_default","unwrapBbox","bbox0","setMask","picked","setData","bb","tolerance","leaksLeft","leaksRight","flattened","position","defaultGeometryStyle","RESULT_SOURCE","RESULT_LAYER_FILL","RESULT_LAYER_LINE","createMapLibreGlMapController","map","maplibregl","marker","showResultMarkers","flyToOptions","fitBoundsOptions","fullGeometryStyle","eventHandler","markers","selectedMarker","reverseMarker","savedData","syncFullGeometryLayer","effFullGeometryStyle","source","setAndSaveData","data","handleMapClick","createMarker","interactive","MarkerIcon","handler","center","zoom","padding","maxZoom","reverse","markedFeatures","showPolygonMarker","handled","ok","geometries"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17]}